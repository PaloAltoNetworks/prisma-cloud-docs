{
  "components": {
    "schemas": {
      "-_admission.Audit": {
        "items": {
          "$ref": "#/components/schemas/admission.Audit"
        },
        "type": "array"
      },
      "-_api.AlertProfile": {
        "items": {
          "$ref": "#/components/schemas/api.AlertProfile"
        },
        "type": "array"
      },
      "-_coderepos.ScanResult": {
        "items": {
          "$ref": "#/components/schemas/coderepos.ScanResult"
        },
        "type": "array"
      },
      "-_collection.Collection": {
        "items": {
          "$ref": "#/components/schemas/collection.Collection"
        },
        "type": "array"
      },
      "-_collection.Usage": {
        "items": {
          "$ref": "#/components/schemas/collection.Usage"
        },
        "type": "array"
      },
      "-_cred.Credential": {
        "items": {
          "$ref": "#/components/schemas/cred.Credential"
        },
        "type": "array"
      },
      "-_customrules.Rule": {
        "items": {
          "$ref": "#/components/schemas/customrules.Rule"
        },
        "type": "array"
      },
      "-_defender.Defender": {
        "items": {
          "$ref": "#/components/schemas/defender.Defender"
        },
        "type": "array"
      },
      "-_deployment.DaemonSet": {
        "items": {
          "$ref": "#/components/schemas/deployment.DaemonSet"
        },
        "type": "array"
      },
      "-_forensic.ContainerEvent": {
        "items": {
          "$ref": "#/components/schemas/forensic.ContainerEvent"
        },
        "type": "array"
      },
      "-_forensic.HostEvent": {
        "items": {
          "$ref": "#/components/schemas/forensic.HostEvent"
        },
        "type": "array"
      },
      "-_kubeaudit.Audit": {
        "items": {
          "$ref": "#/components/schemas/kubeaudit.Audit"
        },
        "type": "array"
      },
      "-_kubeaudit.AuditSpecification": {
        "items": {
          "$ref": "#/components/schemas/kubeaudit.AuditSpecification"
        },
        "type": "array"
      },
      "-_log.LogEntry": {
        "items": {
          "$ref": "#/components/schemas/log.LogEntry"
        },
        "type": "array"
      },
      "-_prisma.AlertIntegration": {
        "items": {
          "$ref": "#/components/schemas/prisma.AlertIntegration"
        },
        "type": "array"
      },
      "-_rbac.Role": {
        "items": {
          "$ref": "#/components/schemas/rbac.Role"
        },
        "type": "array"
      },
      "-_runtime.HostProfile": {
        "items": {
          "$ref": "#/components/schemas/runtime.HostProfile"
        },
        "type": "array"
      },
      "-_sandbox.ScanResult": {
        "items": {
          "$ref": "#/components/schemas/sandbox.ScanResult"
        },
        "type": "array"
      },
      "-_serverless.FunctionInfo": {
        "items": {
          "$ref": "#/components/schemas/serverless.FunctionInfo"
        },
        "type": "array"
      },
      "-_serverless.RadarFilter": {
        "items": {
          "$ref": "#/components/schemas/serverless.RadarFilter"
        },
        "type": "array"
      },
      "-_shared.AppEmbeddedRuntimeProfile": {
        "items": {
          "$ref": "#/components/schemas/shared.AppEmbeddedRuntimeProfile"
        },
        "type": "array"
      },
      "-_shared.AppFirewallAudit": {
        "items": {
          "$ref": "#/components/schemas/shared.AppFirewallAudit"
        },
        "type": "array"
      },
      "-_shared.Audit": {
        "items": {
          "$ref": "#/components/schemas/shared.Audit"
        },
        "type": "array"
      },
      "-_shared.BackupSpec": {
        "items": {
          "$ref": "#/components/schemas/shared.BackupSpec"
        },
        "type": "array"
      },
      "-_shared.CLIScanResult": {
        "items": {
          "$ref": "#/components/schemas/shared.CLIScanResult"
        },
        "type": "array"
      },
      "-_shared.CloudDiscoveryResult": {
        "items": {
          "$ref": "#/components/schemas/shared.CloudDiscoveryResult"
        },
        "type": "array"
      },
      "-_shared.CodeRepoSpecification": {
        "items": {
          "$ref": "#/components/schemas/shared.CodeRepoSpecification"
        },
        "type": "array"
      },
      "-_shared.ContainerNetworkFirewallProfileAudits": {
        "items": {
          "$ref": "#/components/schemas/shared.ContainerNetworkFirewallProfileAudits"
        },
        "type": "array"
      },
      "-_shared.ContainerRuntimeProfile": {
        "items": {
          "$ref": "#/components/schemas/shared.ContainerRuntimeProfile"
        },
        "type": "array"
      },
      "-_shared.ContainerScanResult": {
        "items": {
          "$ref": "#/components/schemas/shared.ContainerScanResult"
        },
        "type": "array"
      },
      "-_shared.CustomComplianceCheck": {
        "items": {
          "$ref": "#/components/schemas/shared.CustomComplianceCheck"
        },
        "type": "array"
      },
      "-_shared.FileIntegrityEvent": {
        "items": {
          "$ref": "#/components/schemas/shared.FileIntegrityEvent"
        },
        "type": "array"
      },
      "-_shared.HostActivity": {
        "items": {
          "$ref": "#/components/schemas/shared.HostActivity"
        },
        "type": "array"
      },
      "-_shared.HostInfo": {
        "items": {
          "$ref": "#/components/schemas/shared.HostInfo"
        },
        "type": "array"
      },
      "-_shared.HostNetworkFirewallProfileAudits": {
        "items": {
          "$ref": "#/components/schemas/shared.HostNetworkFirewallProfileAudits"
        },
        "type": "array"
      },
      "-_shared.ImageScanResult": {
        "items": {
          "$ref": "#/components/schemas/shared.ImageScanResult"
        },
        "type": "array"
      },
      "-_shared.Incident": {
        "items": {
          "$ref": "#/components/schemas/shared.Incident"
        },
        "type": "array"
      },
      "-_shared.LambdaRuntimeType": {
        "items": {
          "$ref": "#/components/schemas/shared.LambdaRuntimeType"
        },
        "type": "array"
      },
      "-_shared.LogInspectionEvent": {
        "items": {
          "$ref": "#/components/schemas/shared.LogInspectionEvent"
        },
        "type": "array"
      },
      "-_shared.MgmtAudit": {
        "items": {
          "$ref": "#/components/schemas/shared.MgmtAudit"
        },
        "type": "array"
      },
      "-_shared.Progress": {
        "items": {
          "$ref": "#/components/schemas/shared.Progress"
        },
        "type": "array"
      },
      "-_shared.RegionData": {
        "items": {
          "$ref": "#/components/schemas/shared.RegionData"
        },
        "type": "array"
      },
      "-_shared.RuntimeAudit": {
        "items": {
          "$ref": "#/components/schemas/shared.RuntimeAudit"
        },
        "type": "array"
      },
      "-_shared.ServerlessScanSpecification": {
        "items": {
          "$ref": "#/components/schemas/shared.ServerlessScanSpecification"
        },
        "type": "array"
      },
      "-_shared.TASDropletSpecification": {
        "items": {
          "$ref": "#/components/schemas/shared.TASDropletSpecification"
        },
        "type": "array"
      },
      "-_shared.Tag": {
        "items": {
          "$ref": "#/components/schemas/shared.Tag"
        },
        "type": "array"
      },
      "-_shared.TrustAudits": {
        "items": {
          "$ref": "#/components/schemas/shared.TrustAudits"
        },
        "type": "array"
      },
      "-_shared.VMSpecification": {
        "items": {
          "$ref": "#/components/schemas/shared.VMSpecification"
        },
        "type": "array"
      },
      "-_string": {
        "items": {
          "$ref": "#/components/schemas/string"
        },
        "type": "array"
      },
      "-_types.AlertProfileOption": {
        "items": {
          "$ref": "#/components/schemas/types.AlertProfileOption"
        },
        "type": "array"
      },
      "-_types.AuditTimeslice": {
        "items": {
          "$ref": "#/components/schemas/types.AuditTimeslice"
        },
        "type": "array"
      },
      "-_types.BaseImagesRule": {
        "items": {
          "$ref": "#/components/schemas/types.BaseImagesRule"
        },
        "type": "array"
      },
      "-_types.CVEStats": {
        "items": {
          "$ref": "#/components/schemas/types.CVEStats"
        },
        "type": "array"
      },
      "-_types.CVEVulnerability": {
        "items": {
          "$ref": "#/components/schemas/types.CVEVulnerability"
        },
        "type": "array"
      },
      "-_types.ClusterRadarInfo": {
        "items": {
          "$ref": "#/components/schemas/types.ClusterRadarInfo"
        },
        "type": "array"
      },
      "-_types.CredentialUsage": {
        "items": {
          "$ref": "#/components/schemas/types.CredentialUsage"
        },
        "type": "array"
      },
      "-_types.DefenderSummary": {
        "items": {
          "$ref": "#/components/schemas/types.DefenderSummary"
        },
        "type": "array"
      },
      "-_types.DefendersVersionCount": {
        "items": {
          "$ref": "#/components/schemas/types.DefendersVersionCount"
        },
        "type": "array"
      },
      "-_types.DiscoveredVM": {
        "items": {
          "$ref": "#/components/schemas/types.DiscoveredVM"
        },
        "type": "array"
      },
      "-_types.ImpactedOutOfBandEntity": {
        "items": {
          "$ref": "#/components/schemas/types.ImpactedOutOfBandEntity"
        },
        "type": "array"
      },
      "-_types.Project": {
        "items": {
          "$ref": "#/components/schemas/types.Project"
        },
        "type": "array"
      },
      "-_types.Stats": {
        "items": {
          "$ref": "#/components/schemas/types.Stats"
        },
        "type": "array"
      },
      "-_types.UserCollection": {
        "items": {
          "$ref": "#/components/schemas/types.UserCollection"
        },
        "type": "array"
      },
      "-_types.UserProject": {
        "items": {
          "$ref": "#/components/schemas/types.UserProject"
        },
        "type": "array"
      },
      "-_types.VulnerabilityStats": {
        "items": {
          "$ref": "#/components/schemas/types.VulnerabilityStats"
        },
        "type": "array"
      },
      "-_uint8": {
        "items": {
          "$ref": "#/components/schemas/uint8"
        },
        "type": "array"
      },
      "-_waas.APIModelID": {
        "items": {
          "$ref": "#/components/schemas/waas.APIModelID"
        },
        "type": "array"
      },
      "-_waas.NetworkList": {
        "items": {
          "$ref": "#/components/schemas/waas.NetworkList"
        },
        "type": "array"
      },
      "-_waas.OpenAPIScan": {
        "items": {
          "$ref": "#/components/schemas/waas.OpenAPIScan"
        },
        "type": "array"
      },
      "-_waas.UnprotectedContainersWebApps": {
        "items": {
          "$ref": "#/components/schemas/waas.UnprotectedContainersWebApps"
        },
        "type": "array"
      },
      "-_waas.UnprotectedHostsWebApps": {
        "items": {
          "$ref": "#/components/schemas/waas.UnprotectedHostsWebApps"
        },
        "type": "array"
      },
      "admission.Audit": {
        "description": "Audit represents an admission audit",
        "properties": {
          "accountID": {
            "description": "AccountID is the cloud account ID.\n",
            "type": "string"
          },
          "attackTechniques": {
            "description": "AttackTechniques are the MITRE attack techniques.\n",
            "items": {
              "$ref": "#/components/schemas/mitre.Technique"
            },
            "type": "array"
          },
          "cluster": {
            "description": "Cluster is the cluster where the audit took place.\n",
            "type": "string"
          },
          "collections": {
            "description": "Collections are collections to which this audit applies.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "effect": {
            "description": "Effect is the rule effect which was applied to the review which led to this audit.\n",
            "type": "string"
          },
          "kind": {
            "description": "Kind is the type of object being manipulated. For example: Pod.\n",
            "type": "string"
          },
          "message": {
            "description": "Message is the rule user defined message which appears on audit.\n",
            "type": "string"
          },
          "namespace": {
            "description": "Namespace is the namespace associated with the request (if any).\n",
            "type": "string"
          },
          "operation": {
            "description": "Operation is the operation being performed.\n",
            "type": "string"
          },
          "rawRequest": {
            "description": "RawRequest is the original review request that caused this audit.\n",
            "type": "string"
          },
          "resource": {
            "description": "Resource is the name of the resource being requested.  This is not the kind.  For example: pods.\n",
            "type": "string"
          },
          "ruleName": {
            "description": "RuleName is the name of the rule which issued this audit.\n",
            "type": "string"
          },
          "time": {
            "description": "Time is the time at which the audit was generated.\n",
            "format": "date-time",
            "type": "string"
          },
          "userGroups": {
            "description": "UserGroups is the names of groups this user is a part of.\n",
            "type": "string"
          },
          "userUid": {
            "description": "UserUID is a unique value that identifies this user across time. If this user is\ndeleted and another user by the same name is added, they will have\ndifferent UIDs.\n",
            "type": "string"
          },
          "username": {
            "description": "Username is the name that uniquely identifies this user among all active users.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "admission.Policy": {
        "description": "Policy represents a policy enforced on Kubernetes admission reviews",
        "properties": {
          "_id": {
            "description": "ID is the policy ID.\n",
            "type": "string"
          },
          "rules": {
            "description": "Rules is a list of rules associated with the admission policy.\n",
            "items": {
              "$ref": "#/components/schemas/admission.Rule"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "admission.Rule": {
        "description": "Rule represents an admission rule",
        "properties": {
          "attackTechniques": {
            "description": "AttackTechniques are the MITRE attack techniques.\n",
            "items": {
              "$ref": "#/components/schemas/mitre.Technique"
            },
            "type": "array"
          },
          "description": {
            "description": "Description is the rule description.\n",
            "type": "string"
          },
          "disabled": {
            "description": "Indicates if the rule is currently disabled (true) or not (false).\n",
            "type": "boolean"
          },
          "effect": {
            "$ref": "#/components/schemas/common.PolicyEffect"
          },
          "modified": {
            "description": "Datetime when the rule was last modified.\n",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "Name of the rule.\n",
            "type": "string"
          },
          "notes": {
            "description": "Free-form text.\n",
            "type": "string"
          },
          "owner": {
            "description": "User who created or last modified the rule.\n",
            "type": "string"
          },
          "previousName": {
            "description": "Previous name of the rule. Required for rule renaming.\n",
            "type": "string"
          },
          "script": {
            "description": "Script is the Rego script.\n",
            "type": "string"
          },
          "skipRawReq": {
            "description": "SkipRawReq signals to exclude raw review request in a resulting admission audit.\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "api.AlertClientType": {
        "description": "AlertClientType represents the type of alert client (e.g., email, slack, ...)",
        "type": "string"
      },
      "api.AlertProfile": {
        "description": "AlertProfile represents an alert profile (event type and recipients)",
        "properties": {
          "_id": {
            "description": "ID is the alert profile ID.\n",
            "type": "string"
          },
          "consoleIdentifier": {
            "description": "ConsoleIdentifier is the console identifier.\n",
            "type": "string"
          },
          "cortex": {
            "$ref": "#/components/schemas/api.AlertProfileCortexSettings"
          },
          "disabled": {
            "description": "Indicates if the rule is currently disabled (true) or not (false).\n",
            "type": "boolean"
          },
          "email": {
            "$ref": "#/components/schemas/api.AlertProfileEmailSettings"
          },
          "external": {
            "description": "External indicates that the profile is integrated through Prisma Cloud.\n",
            "type": "boolean"
          },
          "gcpPubsub": {
            "$ref": "#/components/schemas/api.AlertProfileGcpPubsubSettings"
          },
          "integrationID": {
            "description": "IntegrationID is the ID identifying the provider configured in Prisma Cloud.\n",
            "type": "string"
          },
          "jira": {
            "$ref": "#/components/schemas/api.AlertProfileJIRASettings"
          },
          "lastError": {
            "description": "LastError represents the last error when sending the profile.\n",
            "type": "string"
          },
          "modified": {
            "description": "Datetime when the rule was last modified.\n",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "Name of the rule.\n",
            "type": "string"
          },
          "notes": {
            "description": "Free-form text.\n",
            "type": "string"
          },
          "owner": {
            "description": "User who created or last modified the rule.\n",
            "type": "string"
          },
          "pagerduty": {
            "$ref": "#/components/schemas/api.AlertProfilePagerDutySettings"
          },
          "policy": {
            "additionalProperties": {
              "$ref": "#/components/schemas/api.AlertRule"
            },
            "description": "Policy contains the mapping between alert type to the applied alert rules.\n",
            "type": "object"
          },
          "previousName": {
            "description": "Previous name of the rule. Required for rule renaming.\n",
            "type": "string"
          },
          "securityAdvisor": {
            "$ref": "#/components/schemas/api.AlertProfileSecurityAdvisor"
          },
          "securityCenter": {
            "$ref": "#/components/schemas/api.AlertProfileSecurityCenterSettings"
          },
          "securityHub": {
            "$ref": "#/components/schemas/api.AlertProfileSecurityHubSettings"
          },
          "serviceNow": {
            "$ref": "#/components/schemas/api.AlertProfileServiceNowSettings"
          },
          "slack": {
            "$ref": "#/components/schemas/api.AlertProfileSlackSettings"
          },
          "splunk": {
            "$ref": "#/components/schemas/api.AlertProfileSplunkSettings"
          },
          "vulnerabilityImmediateAlertsEnabled": {
            "description": "VulnerabilityImmediateAlertsEnabled indicates whether an immediate vulnerability alert will be sent upon new image scan.\n",
            "type": "boolean"
          },
          "webhook": {
            "$ref": "#/components/schemas/api.AlertProfileWebhookSettings"
          }
        },
        "type": "object"
      },
      "api.AlertProfileCortexSettings": {
        "description": "AlertProfileCortexSettings represents Cortex applications alert profile settings",
        "properties": {
          "application": {
            "$ref": "#/components/schemas/api.CortexApp"
          },
          "caCert": {
            "description": "CACert is the certificate used to verify the server.\n",
            "type": "string"
          },
          "credentialId": {
            "description": "CredentialID is the id of the basic authentication credential.\n",
            "type": "string"
          },
          "enabled": {
            "description": "Enabled is Webhook provider enabled/disabled indicator.\n",
            "type": "boolean"
          },
          "json": {
            "description": "Json is the custom json we send to the url.\n",
            "type": "string"
          },
          "url": {
            "description": "URL is the Webhook address.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "api.AlertProfileEmailSettings": {
        "description": "AlertProfileEmailSettings represents the alert profile Email settings",
        "properties": {
          "credentialId": {
            "description": "CredentialID is the Email authentication credentials id.\n",
            "type": "string"
          },
          "enabled": {
            "description": ".\n",
            "type": "boolean"
          },
          "from": {
            "description": "From is the from address of the mail.\n",
            "type": "string"
          },
          "labels": {
            "description": "Labels are custom label names from which the mail recipients are extracted, allowing to dynamically extract the target of the alerts.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "port": {
            "description": ".\n",
            "type": "integer"
          },
          "recipients": {
            "description": ".\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "smtpAddress": {
            "description": ".\n",
            "type": "string"
          },
          "ssl": {
            "description": ".\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "api.AlertProfileGcpPubsubSettings": {
        "description": "AlertProfileGcpPubsubSettings is the GCP Pub/Sub alert profile settings",
        "properties": {
          "credentialId": {
            "description": "CredentialID is the GCP Pub/Sub authentication credentials id.\n",
            "type": "string"
          },
          "enabled": {
            "description": "Enabled indicates whether the GCP Pub/Sub settings are enabled.\n",
            "type": "boolean"
          },
          "topic": {
            "description": "Topic is the GCP Pub/Sub topic (used by subscribers to listen for messages).\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "api.AlertProfileJIRASettings": {
        "description": "AlertProfileJIRASettings represents the alert profile JIRA settings",
        "properties": {
          "assignee": {
            "$ref": "#/components/schemas/api.JIRADynamicField"
          },
          "baseUrl": {
            "description": "BaseURL is the JIRA address.\n",
            "type": "string"
          },
          "caCert": {
            "description": "CACert is the certificate used to verify the server.\n",
            "type": "string"
          },
          "credentialId": {
            "description": "CredentialID is the JIRA authentication credentials id.\n",
            "type": "string"
          },
          "enabled": {
            "description": "Enabled controls whether the rule is enabled.\n",
            "type": "boolean"
          },
          "issueType": {
            "description": "IssueType is the type of the JIRA issue.\n",
            "type": "string"
          },
          "labels": {
            "$ref": "#/components/schemas/api.JIRADynamicLabels"
          },
          "priority": {
            "description": "Priority is the issue priority.\n",
            "type": "string"
          },
          "projectKey": {
            "$ref": "#/components/schemas/api.JIRADynamicField"
          }
        },
        "type": "object"
      },
      "api.AlertProfilePagerDutySettings": {
        "description": "AlertProfilePagerDutySettings represents the alert profile PagerDuty settings",
        "properties": {
          "enabled": {
            "description": "Enabled is PagerDuty provider enabled/disabled indicator.\n",
            "type": "boolean"
          },
          "routingKey": {
            "$ref": "#/components/schemas/common.Secret"
          },
          "severity": {
            "$ref": "#/components/schemas/api.PagerDutyAlertSeverity"
          },
          "summary": {
            "description": "Summary is the PagerDuty's event summary.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "api.AlertProfileSecurityAdvisor": {
        "description": "AlertProfileSecurityAdvisor is the IBM security advisor alert profile settings",
        "properties": {
          "auto": {
            "description": "Automatic means the configuration was automatically provisioned by security advisor, and only notes should be created.\n",
            "type": "boolean"
          },
          "credentialID": {
            "description": "CredentialID is the IBM security advisor credential.\n",
            "type": "string"
          },
          "enabled": {
            "description": "Enabled indicates whether the security advisor settings are enabled.\n",
            "type": "boolean"
          },
          "findingsURL": {
            "description": "FindingsURL is the URL to which findings should be sent.\n",
            "type": "string"
          },
          "providerId": {
            "description": "ProviderID is the configured providerID (default twistlock).\n",
            "type": "string"
          },
          "tokenURL": {
            "description": "TokenURL is the url from which security tokens should be fetched.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "api.AlertProfileSecurityCenterSettings": {
        "description": "AlertProfileSecurityCenterSettings is the google cloud security center alert profile settings",
        "properties": {
          "credentialId": {
            "description": "CredentialID is the Security Center authentication credentials id.\n",
            "type": "string"
          },
          "enabled": {
            "description": ".\n",
            "type": "boolean"
          },
          "sourceID": {
            "description": "SourceID is the google cloud security center organization source ID (used to construct security advisor findings).\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "api.AlertProfileSecurityHubSettings": {
        "description": "AlertProfileSecurityHubSettings is the AWS security hub alert profile settings",
        "properties": {
          "accountID": {
            "description": "AccountID is the AWS account ID.\n",
            "type": "string"
          },
          "credentialId": {
            "description": "CredentialID is the SecurityHub authentication credentials id.\n",
            "type": "string"
          },
          "enabled": {
            "description": "Enabled indicates whether the security hub settings are enabled.\n",
            "type": "boolean"
          },
          "region": {
            "description": "Region is the aws region.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "api.AlertProfileServiceNowSettings": {
        "description": "AlertProfileServiceNowSettings represents the ServiceNow provider alert profile settings",
        "properties": {
          "application": {
            "$ref": "#/components/schemas/api.ServiceNowApp"
          },
          "assignee": {
            "description": "Assignee is the ServiceNow user to whom will assign ServiceNow incidents\\items.\n",
            "type": "string"
          },
          "assignmentGroup": {
            "description": "AssignmentGroup is the ServiceNow group of users handling security incidents.\n",
            "type": "string"
          },
          "auditPriority": {
            "description": "AuditPriority is the priority at which to set audit alerts in security incidents.\n",
            "type": "string"
          },
          "caCert": {
            "description": "CA certificate for on-premise ssl (optional).\n",
            "type": "string"
          },
          "credentialID": {
            "description": "CredentialID is the ServiceNow authentication credentials id.\n",
            "type": "string"
          },
          "enabled": {
            "description": "Enabled is the ServiceNow provider enabled/disabled indicator.\n",
            "type": "boolean"
          },
          "project": {
            "description": "Project is the name of the prisma compute project that was used to generate this configuration. It's required as secondary consoles do not store their project name.\n",
            "type": "string"
          },
          "securityIncidentBaseURL": {
            "description": "SecurityIncidentBaseURL is the ServiceNow address, used to send security incidents.\n",
            "type": "string"
          },
          "vulnerabilityEndpointUrl": {
            "description": "VulnerabilityEndpointURL to report ServiceNow vulnerabilities, customer defined scripted REST API, see: https://docs.servicenow.com/bundle/orlando-application-development/page/integrate/custom-web-services/concept/c_CustomWebServices.html.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "api.AlertProfileSlackSettings": {
        "description": "AlertProfileSlackSettings represents the alert profile Slack settings",
        "properties": {
          "channels": {
            "description": ".\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "enabled": {
            "description": ".\n",
            "type": "boolean"
          },
          "users": {
            "description": ".\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "webhookUrl": {
            "description": ".\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "api.AlertProfileSplunkSettings": {
        "description": "AlertProfileSplunkSettings represents the alert profile Splunk settings",
        "properties": {
          "authToken": {
            "$ref": "#/components/schemas/common.Secret"
          },
          "enabled": {
            "description": "Enabled is Splunk provider enabled/disabled indicator.\n",
            "type": "boolean"
          },
          "json": {
            "description": "Json is the custom json we send to Splunk.\n",
            "type": "string"
          },
          "sourceType": {
            "description": "SourceType is the alert source type.\n",
            "type": "string"
          },
          "url": {
            "description": "URL is the Splunk HTTP event collector URL.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "api.AlertProfileWebhookSettings": {
        "description": "AlertProfileWebhookSettings represents the alert profile Webhook settings",
        "properties": {
          "caCert": {
            "description": "CACert is the certificate used to verify the server.\n",
            "type": "string"
          },
          "credentialId": {
            "description": "CredentialID is the id of the basic authentication credential.\n",
            "type": "string"
          },
          "enabled": {
            "description": "Enabled is Webhook provider enabled/disabled indicator.\n",
            "type": "boolean"
          },
          "json": {
            "description": "Json is the custom json we send to the url.\n",
            "type": "string"
          },
          "url": {
            "description": "URL is the Webhook address.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "api.AlertRule": {
        "description": "AlertRule represents the configuration of an alert type",
        "properties": {
          "allRules": {
            "description": "AllRules controls whether an alert is sent out for audits on all policy rules.\n",
            "type": "boolean"
          },
          "enabled": {
            "description": "Enabled controls whether the rule is enabled.\n",
            "type": "boolean"
          },
          "rules": {
            "description": "AssociatedRules defines the specific rules whose audits will generate alerts (relevant only if AllRules is false).\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "api.AlertSettings": {
        "description": "AlertSettings are the global alert settings",
        "properties": {
          "aggregationPeriodMs": {
            "description": "AggregationPeriodMs is the alert aggregation period in milliseconds.\n",
            "type": "integer"
          },
          "securityAdvisorWebhook": {
            "description": "SecurityAdvisorWebhook is a webhook for IBM security advisor alert wizard, used to authenticate the wizard with the console and to pull data.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "api.AlertType": {
        "description": "AlertType represents an alert type",
        "enum": [
          [
            "",
            "defender",
            "containerRuntime",
            "appEmbeddedRuntime",
            "containerAppFirewall",
            "hostAppFirewall",
            "appEmbeddedAppFirewall",
            "serverlessAppFirewall",
            "outOfBandAppFirewall",
            "networkFirewall",
            "containerVulnerability",
            "containerCompliance",
            "hostVulnerability",
            "codeRepoVulnerability",
            "hostCompliance",
            "docker",
            "hostRuntime",
            "incident",
            "serverlessRuntime",
            "kubernetesAudit",
            "cloudDiscovery",
            "admission",
            "containerComplianceScan",
            "hostComplianceScan",
            "waasHealth",
            "vmVulnerability",
            "vmCompliance"
          ]
        ],
        "type": "string"
      },
      "api.AuthType": {
        "description": "AuthType is the user authentication type",
        "enum": [
          [
            "saml",
            "ldap",
            "basic",
            "oauth",
            "oidc"
          ]
        ],
        "type": "string"
      },
      "api.AuthenticationRequest": {
        "description": "AuthenticationRequest is the required user input for authentication requests",
        "properties": {
          "password": {
            "description": "Password is the password used for authentication.\n",
            "type": "string"
          },
          "token": {
            "description": "Token is the Prisma JWT token used for authentication.\n",
            "type": "string"
          },
          "username": {
            "description": "Username is the username used for authentication.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "api.AuthenticationResponse": {
        "description": "AuthenticationResponse returns the result of calling the authentication endpoint",
        "properties": {
          "token": {
            "description": "Token is the new JWT token.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "api.CortexApp": {
        "description": "CortexApp identifies a Cortex application (there are several)",
        "enum": [
          [
            "xsoar",
            "xdr"
          ]
        ],
        "type": "string"
      },
      "api.DefenderInstallScriptOptions": {
        "description": "DefenderInstallScriptOptions holds the parameters for defender install script download",
        "properties": {
          "port": {
            "description": "Port is the communication port between the defender and the console.\n",
            "type": "integer"
          },
          "proxy": {
            "$ref": "#/components/schemas/common.DefenderProxyOpt"
          }
        },
        "type": "object"
      },
      "api.InitStatus": {
        "description": "InitStatus returns whether the console is initialized (i.e., if initial user/password is set)",
        "properties": {
          "initialized": {
            "description": "Initialized indicates whether the console is initialized.\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "api.JIRADynamicField": {
        "description": "JIRADynamicField represents a value that can be given as a string or as a dynamic label\nSee more: https://developer.atlassian.com/cloud/jira/platform/rest/v2/api-group-issues/#api-rest-api-2-issue-post",
        "properties": {
          "id": {
            "description": "ID is the field ID.\n",
            "type": "string"
          },
          "labels": {
            "description": "Labels are the dynamic labels of which the value is based on.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "name": {
            "description": "Name is the static string field.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "api.JIRADynamicLabels": {
        "description": "JIRADynamicLabels represents JIRA labels that can be given as strings or as a dynamic label",
        "properties": {
          "labels": {
            "description": "Labels are the dynamic labels of which JIRA labels are based on.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "names": {
            "description": "Names are the static strings field.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "api.LicenseRequest": {
        "description": "LicenseRequest is a request to setup a new license",
        "properties": {
          "key": {
            "description": "Key is the license key.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "api.PagerDutyAlertSeverity": {
        "description": "PagerDutyAlertSeverity is the severity of an alert triggered in PagerDuty",
        "enum": [
          [
            "critical",
            "error",
            "warning",
            "info"
          ]
        ],
        "type": "string"
      },
      "api.Permission": {
        "description": "Permission represents a user or group's permission to access a specific resource.\nCurrently supported resources are:\n- Project - Access to a specific project (if empty, the Master Project by default)\n- Collection - The set of collections in the project that may be accessed (all if empty)\nIf no permissions are assigned, all projects and collections may be accessed",
        "properties": {
          "collections": {
            "description": "List of collections the user can access.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "project": {
            "description": "Names of projects which the user can access.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "api.Permissions": {
        "description": "Permissions is a list of permissions",
        "items": {
          "$ref": "#/components/schemas/api.Permission"
        },
        "type": "array"
      },
      "api.ProjectSettings": {
        "description": "ProjectSettings are settings for supporting federated console",
        "properties": {
          "master": {
            "description": "Master indicates that project feature is enabled and that this console is the master console.\n",
            "type": "boolean"
          },
          "redirectURL": {
            "description": "RedirectURL is the redirectURL for the given project.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "api.ResolveFunctionsReq": {
        "description": "ResolveFunctionsReq represents the parameters supported by the functions resolution API",
        "properties": {
          "functions": {
            "description": "Functions is the list of functions to evaluate.\n",
            "items": {
              "$ref": "#/components/schemas/serverless.FunctionInfo"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "api.ResolveFunctionsResp": {
        "description": "ResolveFunctionsResp represents the functions resolution API output",
        "properties": {
          "functions": {
            "description": "Functions is the list of functions that were resolved.\n",
            "items": {
              "$ref": "#/components/schemas/serverless.FunctionInfo"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "api.ResolveImagesReq": {
        "description": "ResolveImagesReq represents the parameters supported by the images resolution API",
        "properties": {
          "images": {
            "description": "Images is the list of image to resolve.\n",
            "items": {
              "$ref": "#/components/schemas/shared.ImageScanResult"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "api.ResolveImagesResp": {
        "description": "ResolveImagesResp represents the images resolution API output",
        "properties": {
          "images": {
            "description": "Images is the list of images that were resolved.\n",
            "items": {
              "$ref": "#/components/schemas/shared.ImageScanResult"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "api.ServiceNowApp": {
        "description": "ServiceNowApp identifies a ServiceNow application (there are several)\nfor more details, see:\nhttps://docs.servicenow.com/bundle/orlando-security-management/page/product/security-operations/concept/security-operations-intro.html",
        "enum": [
          [
            "securityIncidentsResponse",
            "vulnerabilityResponse"
          ]
        ],
        "type": "string"
      },
      "api.User": {
        "description": "User represents a user in Twistlock",
        "properties": {
          "authType": {
            "$ref": "#/components/schemas/api.AuthType"
          },
          "lastModified": {
            "description": "Datetime when the user was created or last modified.\n",
            "format": "date-time",
            "type": "string"
          },
          "password": {
            "description": "Password for authentication.\n",
            "type": "string"
          },
          "permissions": {
            "$ref": "#/components/schemas/api.Permissions"
          },
          "role": {
            "description": "User role.\n",
            "type": "string"
          },
          "username": {
            "description": "Username for authentication.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "api.UserList": {
        "description": "UserList represents a list of users",
        "items": {
          "$ref": "#/components/schemas/api.User"
        },
        "type": "array"
      },
      "appembedded.FargateTask": {
        "additionalProperties": {
          "$ref": "#/components/schemas/string"
        },
        "description": "FargateTask represents the generic fargate task AWS template",
        "type": "object"
      },
      "bool": {
        "type": "boolean"
      },
      "byte": {
        "format": "byte",
        "type": "string"
      },
      "clustereddb.AddMemberRequest": {
        "description": "AddMemberRequest represents a request for adding a member to the clustered DB pool",
        "properties": {
          "address": {
            "description": "Address is the member address to add.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "clustereddb.ReplicaSetMemberStateStr": {
        "description": "ReplicaSetMemberStateStr is a string representation of a member's state\nRef. https://docs.mongodb.com/v4.4/reference/replica-states/",
        "enum": [
          [
            "STARTUP",
            "PRIMARY",
            "SECONDARY",
            "RECOVERING",
            "STARTUP2",
            "UNKNOWN",
            "ARBITER",
            "DOWN",
            "ROLLBACK",
            "REMOVED"
          ]
        ],
        "type": "string"
      },
      "clustereddb.ReplicaSetMemberStatus": {
        "description": "ReplicaSetMemberStatus represents replica set member's status\nRef. https://docs.mongodb.com/v4.4/reference/command/replSetGetStatus/#mongodb-data-replSetGetStatus.members",
        "properties": {
          "name": {
            "description": "Name is the member's name (hostname address).\n",
            "type": "string"
          },
          "stateStr": {
            "$ref": "#/components/schemas/clustereddb.ReplicaSetMemberStateStr"
          }
        },
        "type": "object"
      },
      "clustereddb.Settings": {
        "description": "Settings represents the clustered DB settings",
        "properties": {
          "loadBalancerAddress": {
            "description": "LoadBalancerAddress is the address of the customer's load balancer in clustered DB mode. All clients (including Defenders) are reaching the Console through the load balancer.\n",
            "type": "string"
          },
          "seedConsoleAddress": {
            "description": "SeedConsoleAddress allows editing the address of the seed Console (optional).\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "clustereddb.StatusResponse": {
        "description": "StatusResponse represents the response to a clustered DB status request",
        "properties": {
          "date": {
            "description": "Date indicates the current time according to the queried Mongo server.\n",
            "format": "date-time",
            "type": "string"
          },
          "loadBalancerAddress": {
            "description": "LoadBalancerAddress represents the address of the load balancer.\n",
            "type": "string"
          },
          "members": {
            "description": "Members are the replica set members.\n",
            "items": {
              "$ref": "#/components/schemas/clustereddb.ReplicaSetMemberStatus"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "cnnf.AllowAllConnections": {
        "description": "AllowAllConnections indicates if connections are allowed to/from any entity of the specified types\ne.g. if inbound contains the type subnet, the entity is allowed to receive connections from any subnet",
        "properties": {
          "inbound": {
            "description": "Inbound indicates if connections are allowed from any entity of the specified types.\n",
            "items": {
              "$ref": "#/components/schemas/cnnf.RuleEntityType"
            },
            "type": "array"
          },
          "outbound": {
            "description": "Outbound indicates if connections are allowed to any entity of the specified types.\n",
            "items": {
              "$ref": "#/components/schemas/cnnf.RuleEntityType"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "cnnf.ContainerAudit": {
        "description": "ContainerAudit represents a network firewall audit event",
        "properties": {
          "block": {
            "description": "Block indicates whether the connection was blocked.\n",
            "type": "boolean"
          },
          "count": {
            "description": "Count is the event occurrences count.\n",
            "type": "integer"
          },
          "dstContainerName": {
            "description": "DstContainerName is the destination container name.\n",
            "type": "string"
          },
          "dstDomain": {
            "description": "DstDomain is the destination domain that was queried.\n",
            "type": "string"
          },
          "dstImageName": {
            "description": "DstImage is the destination image name.\n",
            "type": "string"
          },
          "dstPort": {
            "description": "DstPort is the connection destination port.\n",
            "type": "integer"
          },
          "dstProfileHash": {
            "$ref": "#/components/schemas/common.ProfileHash"
          },
          "dstProfileID": {
            "description": "DstProfileID is the destination profile ID.\n",
            "type": "string"
          },
          "dstSubnet": {
            "description": "DstSubnet is the destination subnet.\n",
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "$ref": "#/components/schemas/string"
            },
            "description": "Labels are the custom labels associated with the target container.\n",
            "type": "object"
          },
          "msg": {
            "description": "Message is the event message.\n",
            "type": "string"
          },
          "ruleID": {
            "$ref": "#/components/schemas/cnnf.RuleID"
          },
          "srcContainerName": {
            "description": "SrcContainerName is the source container name.\n",
            "type": "string"
          },
          "srcImageName": {
            "description": "SrcImage is the source image name.\n",
            "type": "string"
          },
          "srcProfileHash": {
            "$ref": "#/components/schemas/common.ProfileHash"
          },
          "srcProfileID": {
            "description": "SrcProfileID is the source profile ID.\n",
            "type": "string"
          },
          "time": {
            "description": "Time is the UTC time of the audit event.\n",
            "format": "date-time",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/cnnf.NetworkFirewallAttackType"
          }
        },
        "type": "object"
      },
      "cnnf.EntityID": {
        "description": "EntityID represents the ID of each network firewall entity.\n20 bits are used. Max legal value: 2^20-1",
        "type": "integer"
      },
      "cnnf.HostAudit": {
        "description": "HostAudit represents a host network firewall audit event",
        "properties": {
          "accountID": {
            "description": "AccountID is the host account ID.\n",
            "type": "string"
          },
          "block": {
            "description": "Block indicates whether the connection was blocked.\n",
            "type": "boolean"
          },
          "cluster": {
            "description": "Cluster is the cluster from which the audit originated.\n",
            "type": "string"
          },
          "count": {
            "description": "Count is the event occurrences count.\n",
            "type": "integer"
          },
          "dstHostname": {
            "description": "DstHostname is the destination hostname.\n",
            "type": "string"
          },
          "dstPort": {
            "description": "DstPort is the connection destination port.\n",
            "type": "integer"
          },
          "dstSubnet": {
            "description": "DstSubnet is the destination subnet.\n",
            "type": "string"
          },
          "msg": {
            "description": "Message is the event message.\n",
            "type": "string"
          },
          "ruleID": {
            "$ref": "#/components/schemas/cnnf.RuleID"
          },
          "srcHash": {
            "$ref": "#/components/schemas/common.ProfileHash"
          },
          "srcHostname": {
            "description": "SrcHostname is the source hostname.\n",
            "type": "string"
          },
          "srcSubnet": {
            "description": "SrcSubnet is the source subnet.\n",
            "type": "string"
          },
          "time": {
            "description": "Time is the UTC time of the audit event.\n",
            "format": "date-time",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/cnnf.NetworkFirewallAttackType"
          }
        },
        "type": "object"
      },
      "cnnf.NetworkEntities": {
        "description": "NetworkEntities represents a list of network firewall entities",
        "items": {
          "$ref": "#/components/schemas/cnnf.NetworkEntity"
        },
        "type": "array"
      },
      "cnnf.NetworkEntity": {
        "description": "NetworkEntity represents a network firewall entity",
        "properties": {
          "_id": {
            "$ref": "#/components/schemas/cnnf.EntityID"
          },
          "allowAll": {
            "$ref": "#/components/schemas/cnnf.AllowAllConnections"
          },
          "collections": {
            "description": "Collections indicate the collection the entity is part of.\n",
            "items": {
              "$ref": "#/components/schemas/collection.Collection"
            },
            "type": "array"
          },
          "domains": {
            "description": "Domains is a list of domains.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "name": {
            "description": "Name is the entity name.\n",
            "type": "string"
          },
          "subnets": {
            "description": "Subnets are the CIDR format network.\n",
            "items": {
              "$ref": "#/components/schemas/cnnf.Subnet"
            },
            "type": "array"
          },
          "type": {
            "$ref": "#/components/schemas/cnnf.RuleEntityType"
          }
        },
        "type": "object"
      },
      "cnnf.NetworkFirewallAttackType": {
        "description": "NetworkFirewallAttackType is the network firewall type of attack",
        "enum": [
          [
            "unexpectedConnection"
          ]
        ],
        "type": "string"
      },
      "cnnf.Policy": {
        "description": "Policy holds the data for firewall policies (host and container)",
        "properties": {
          "_id": {
            "description": ".\n",
            "type": "string"
          },
          "containerEnabled": {
            "description": "ContainerEnabled indicates whether container network firewall feature is enabled.\n",
            "type": "boolean"
          },
          "containerRules": {
            "description": "ContainerRules holds the container firewall rules.\n",
            "items": {
              "$ref": "#/components/schemas/cnnf.Rule"
            },
            "type": "array"
          },
          "hostEnabled": {
            "description": "HostEnabled indicates whether host network firewall feature is enabled.\n",
            "type": "boolean"
          },
          "hostRules": {
            "description": "HostRules holds the host firewall rules.\n",
            "items": {
              "$ref": "#/components/schemas/cnnf.Rule"
            },
            "type": "array"
          },
          "modified": {
            "description": ".\n",
            "format": "date-time",
            "type": "string"
          },
          "networkEntities": {
            "$ref": "#/components/schemas/cnnf.NetworkEntities"
          },
          "owner": {
            "description": ".\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "cnnf.RadarConnectionInstance": {
        "description": "RadarConnectionInstance is an instance of a connection between two radar endpoints",
        "properties": {
          "dst": {
            "description": "Dst is the dst of the connection instance. Typically kept as an IP or a hostname.\n",
            "type": "string"
          },
          "policyRule": {
            "$ref": "#/components/schemas/cnnf.RadarPolicyRule"
          },
          "port": {
            "$ref": "#/components/schemas/common.PortData"
          },
          "src": {
            "description": "Src is the src of the connection instance. Typically kept as an IP or a hostname.\n",
            "type": "string"
          },
          "time": {
            "description": "Time is the time the connection instance was added.\n",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "cnnf.RadarConnectionInstances": {
        "description": "RadarConnectionInstances holds the recent connections history between 2 entities (hosts, subnet entities, etc)",
        "properties": {
          "instances": {
            "description": "Instances are connection samples.\n",
            "items": {
              "$ref": "#/components/schemas/cnnf.RadarConnectionInstance"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "cnnf.RadarPolicyRule": {
        "description": "RadarPolicyRule holds the data of a single policy rule",
        "properties": {
          "effect": {
            "$ref": "#/components/schemas/common.Effect"
          },
          "portRanges": {
            "description": "PortRanges specify the ranges of ports.\n",
            "items": {
              "$ref": "#/components/schemas/common.PortRange"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "cnnf.Rule": {
        "description": "Rule contains the properties common to both host and container network firewall",
        "properties": {
          "disabled": {
            "description": "Indicates if the rule is currently disabled (true) or not (false).\n",
            "type": "boolean"
          },
          "dst": {
            "$ref": "#/components/schemas/cnnf.EntityID"
          },
          "effect": {
            "$ref": "#/components/schemas/common.Effect"
          },
          "id": {
            "$ref": "#/components/schemas/cnnf.RuleID"
          },
          "modified": {
            "description": "Datetime when the rule was last modified.\n",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "Name of the rule.\n",
            "type": "string"
          },
          "notes": {
            "description": "Free-form text.\n",
            "type": "string"
          },
          "owner": {
            "description": "User who created or last modified the rule.\n",
            "type": "string"
          },
          "ports": {
            "description": "Ports are the entity port range specifications.\n",
            "items": {
              "$ref": "#/components/schemas/common.PortRange"
            },
            "type": "array"
          },
          "previousName": {
            "description": "Previous name of the rule. Required for rule renaming.\n",
            "type": "string"
          },
          "src": {
            "$ref": "#/components/schemas/cnnf.EntityID"
          }
        },
        "type": "object"
      },
      "cnnf.RuleEntityType": {
        "description": "RuleEntityType is the network firewall rule entity type",
        "enum": [
          [
            "container",
            "host",
            "subnet",
            "dns"
          ]
        ],
        "type": "string"
      },
      "cnnf.RuleID": {
        "description": "RuleID represents the ID of each container network firewall policy rule",
        "type": "integer"
      },
      "cnnf.Subnet": {
        "description": "Subnet is a network firewall subnet",
        "properties": {
          "cidr": {
            "description": "CIDR is the IP range of the defined entity.\n",
            "type": "string"
          },
          "name": {
            "description": "Name is the given name to represent the range.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "coderepos.ManifestFile": {
        "description": "ManifestFile holds the data of a specific manifest file (can also be of a dependency manifest file)",
        "properties": {
          "dependencies": {
            "description": "Packages listed in the manifest file.\n",
            "items": {
              "$ref": "#/components/schemas/coderepos.PkgDependency"
            },
            "type": "array"
          },
          "distribution": {
            "$ref": "#/components/schemas/vuln.Distribution"
          },
          "path": {
            "description": "Path to the file.\n",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/vuln.PackageType"
          }
        },
        "type": "object"
      },
      "coderepos.PkgDependency": {
        "description": "PkgDependency represents a required package",
        "properties": {
          "devDependency": {
            "description": "Indicates if this dependency is used only for the development of the package (true) or not (false).\n",
            "type": "boolean"
          },
          "lastResolved": {
            "description": "Date/time of the last version resolution. If the value is zero, it means the version is explicit and does not require resolving.\n",
            "format": "date-time",
            "type": "string"
          },
          "licenseSeverity": {
            "description": "Maximum severity of the detected licenses according to the compliance policy.\n",
            "type": "string"
          },
          "licenses": {
            "description": "Detected licenses of the dependant package.\n",
            "items": {
              "$ref": "#/components/schemas/license.SPDXLicense"
            },
            "type": "array"
          },
          "name": {
            "description": "Package name that the dependency refers to.\n",
            "type": "string"
          },
          "rawRequirement": {
            "description": "Line in which the package is declared.\n",
            "type": "string"
          },
          "unsupported": {
            "description": "Indicates if this package is unsupported by the remote package manager DB (e.g., due to a bad name or private package) (true) or not (false).\n",
            "type": "boolean"
          },
          "version": {
            "description": "Package version, either explicitly specified in a manifest or resolved by the scanner.\n",
            "type": "string"
          },
          "vulnerabilities": {
            "description": "Vulnerabilities in the package.\n",
            "items": {
              "$ref": "#/components/schemas/vuln.Vulnerability"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "coderepos.Repository": {
        "description": "Repository is the metadata for a code repository",
        "properties": {
          "build": {
            "description": "CI build.\n",
            "type": "string"
          },
          "defaultBranch": {
            "description": "Default branch in the repository, usually master.\n",
            "type": "string"
          },
          "digest": {
            "description": "Repository content digest. Used to indicate if the content of the repository has changed.\n",
            "type": "string"
          },
          "fullName": {
            "description": "Full name that represents the repository (<owner>/<name>).\n",
            "type": "string"
          },
          "jobName": {
            "description": "CI job name.\n",
            "type": "string"
          },
          "name": {
            "description": "Repository name.\n",
            "type": "string"
          },
          "owner": {
            "description": "GitHub username or organization name of the repository's owner.\n",
            "type": "string"
          },
          "private": {
            "description": "Indicates if the repository is private (true) or not (false).\n",
            "type": "boolean"
          },
          "size": {
            "description": "Size of the repository (in KB).\n",
            "type": "integer"
          },
          "url": {
            "description": "URL is the repository address.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "coderepos.ScanResult": {
        "description": "ScanResult holds a specific repository data",
        "properties": {
          "_id": {
            "description": "Scan report ID in the database.\n",
            "type": "string"
          },
          "collections": {
            "description": "List of matching code repo collections.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "complianceRiskScore": {
            "description": "Code repository's compliance risk score. Used for sorting.\n",
            "format": "float",
            "type": "number"
          },
          "files": {
            "description": "Scan result for each manifest file in the repository.\n",
            "items": {
              "$ref": "#/components/schemas/coderepos.ManifestFile"
            },
            "type": "array"
          },
          "pass": {
            "description": "Indicates whether the scan passed or failed.\n",
            "type": "boolean"
          },
          "repository": {
            "$ref": "#/components/schemas/coderepos.Repository"
          },
          "scanTime": {
            "description": "Date/time when this repository was last scanned. The results might be from the DB and not updated if the repository contents have not changed.\n",
            "format": "date-time",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/shared.CodeRepoProviderType"
          },
          "updateTime": {
            "description": "Date/time when this repository was last updated.\n",
            "format": "date-time",
            "type": "string"
          },
          "vulnInfo": {
            "$ref": "#/components/schemas/shared.ImageInfo"
          },
          "vulnerabilityRiskScore": {
            "description": "Code repository's CVE risk score. Used for sorting.\n",
            "format": "float",
            "type": "number"
          },
          "vulnerableFiles": {
            "description": "Counts how many files have vulnerabilities. Vulnerability info is calculated on demand.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "collection.Collection": {
        "description": "Collection is a collection of resources",
        "properties": {
          "accountIDs": {
            "description": "List of account IDs.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "appIDs": {
            "description": "List of application IDs.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "clusters": {
            "description": "List of Kubernetes cluster names.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "codeRepos": {
            "description": "List of code repositories.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "color": {
            "$ref": "#/components/schemas/common.Color"
          },
          "containers": {
            "description": "List of containers.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "description": {
            "description": "Free-form text.\n",
            "type": "string"
          },
          "functions": {
            "description": "List of functions.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "hosts": {
            "description": "List of  hosts.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "images": {
            "description": "List of images.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "labels": {
            "description": "List of labels.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "modified": {
            "description": "Datetime when the collection was last modified.\n",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "Collection name. Must be unique.\n",
            "type": "string"
          },
          "namespaces": {
            "description": "List of Kubernetes namespaces.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "owner": {
            "description": "User who created or last modified the collection.\n",
            "type": "string"
          },
          "prisma": {
            "description": "Indicates whether this collection originates from Prisma Cloud.\n",
            "type": "boolean"
          },
          "system": {
            "description": "Indicates whether this collection was created by the system (i.e., a non user) (true) or a real user (false).\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "collection.Usage": {
        "description": "Usage represents details of a collection being used",
        "properties": {
          "name": {
            "description": "Name of the consumer (e.g., container runtime, username, etc.).\n",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/collection.UsageType"
          }
        },
        "type": "object"
      },
      "collection.UsageType": {
        "description": "UsageType represents a collection usage type",
        "enum": [
          [
            "policy",
            "settings",
            "user",
            "group",
            "registryScan"
          ]
        ],
        "type": "string"
      },
      "common.CloudMetadata": {
        "description": "CloudMetadata is the metadata for an instance running in a cloud provider (AWS/GCP/Azure)",
        "properties": {
          "accountID": {
            "description": "Cloud account ID.\n",
            "type": "string"
          },
          "image": {
            "description": "Image name.\n",
            "type": "string"
          },
          "labels": {
            "description": "Cloud provider metadata labels.\n",
            "items": {
              "$ref": "#/components/schemas/common.ExternalLabel"
            },
            "type": "array"
          },
          "name": {
            "description": "Instance name.\n",
            "type": "string"
          },
          "provider": {
            "$ref": "#/components/schemas/common.CloudProvider"
          },
          "region": {
            "description": "Instance region.\n",
            "type": "string"
          },
          "resourceID": {
            "description": "Unique ID of the resource.\n",
            "type": "string"
          },
          "resourceURL": {
            "description": "Server-defined URL for the resource.\n",
            "type": "string"
          },
          "type": {
            "description": "Instance type.\n",
            "type": "string"
          },
          "vmID": {
            "description": "Azure unique vm ID.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "common.CloudProvider": {
        "description": "CloudProvider represents the cloud provider",
        "enum": [
          [
            "aws",
            "azure",
            "gcp",
            "alibaba",
            "others"
          ]
        ],
        "type": "string"
      },
      "common.Color": {
        "description": "Color is a hexadecimal representation of color code value",
        "type": "string"
      },
      "common.DaemonSetOptions": {
        "description": "DaemonSetOptions are options for creating the daemonset install script",
        "properties": {
          "cluster": {
            "description": "Cluster is the kubernetes or ecs cluster name.\n",
            "type": "string"
          },
          "collectPodLabels": {
            "description": "CollectPodLabels indicates whether to collect pod related labels resource labels.\n",
            "type": "boolean"
          },
          "consoleAddr": {
            "description": "ConsoleAddr is the console address for defender communication.\n",
            "type": "string"
          },
          "credentialID": {
            "description": "CredentialID is the name of the credential used.\n",
            "type": "string"
          },
          "cri": {
            "description": "CRI indicates defender uses CRI instead of docker.\n",
            "type": "boolean"
          },
          "dockerSocketPath": {
            "description": "DockerSocketPath is the path of the docker socket file.\n",
            "type": "string"
          },
          "gkeAutopilot": {
            "description": "GKEAutopilot indicates the deployment is requested for GKE Autopilot.\n",
            "type": "boolean"
          },
          "image": {
            "description": "Image is the full daemonset image name.\n",
            "type": "string"
          },
          "istio": {
            "description": "MonitorIstio indicates whether to monitor Istio.\n",
            "type": "boolean"
          },
          "namespace": {
            "description": "Namespace is the target deamonset namespaces.\n",
            "type": "string"
          },
          "nodeSelector": {
            "description": "NodeSelector is a key/value node selector.\n",
            "type": "string"
          },
          "orchestration": {
            "description": "Orchestration is the orchestration type.\n",
            "type": "string"
          },
          "privileged": {
            "description": "Privileged indicates whether to run defenders as privileged.\n",
            "type": "boolean"
          },
          "projectID": {
            "description": "ProjectID is the kubernetes cluster project ID.\n",
            "type": "string"
          },
          "proxy": {
            "$ref": "#/components/schemas/common.DefenderProxyOpt"
          },
          "region": {
            "description": "Region is the kubernetes cluster location region.\n",
            "type": "string"
          },
          "secretsname": {
            "description": "SecretsName is the name of the secret to pull.\n",
            "type": "string"
          },
          "selinux": {
            "description": "SelinuxEnforced indicates whether selinux is enforced on the target host.\n",
            "type": "boolean"
          },
          "serviceaccounts": {
            "description": "MonitorServiceAccounts indicates whether to monitor service accounts.\n",
            "type": "boolean"
          },
          "uniqueHostname": {
            "description": "UniqueHostname indicates whether to assign unique hostnames.\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "common.DefenderProxyOpt": {
        "description": "DefenderProxyOpt holds options for defender proxy configuration\nIt embeds ProxySettings but override it's Password field with a simple string\nThis is needed in order to avoid Secret's MarshalJSON method, which depends on existence of master key file",
        "properties": {
          "ca": {
            "description": "Proxy's CA for Defender to trust. Required when using TLS intercept proxies.\n",
            "type": "string"
          },
          "httpProxy": {
            "description": "Proxy address.\n",
            "type": "string"
          },
          "noProxy": {
            "description": "List of addresses for which the proxy should not be used.\n",
            "type": "string"
          },
          "password": {
            "description": ".\n",
            "type": "string"
          },
          "user": {
            "description": "Username to authenticate with the proxy.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "common.Effect": {
        "description": "Effect is the effect that is used in the CNNF rule",
        "enum": [
          [
            "allow",
            "alert",
            "prevent",
            "monitor",
            ""
          ]
        ],
        "type": "string"
      },
      "common.ExternalLabel": {
        "description": "ExternalLabel holds an external label with a source and timestamp",
        "properties": {
          "key": {
            "description": "Label key.\n",
            "type": "string"
          },
          "sourceName": {
            "description": "Source name (e.g., for a namespace, the source name can be 'twistlock').\n",
            "type": "string"
          },
          "sourceType": {
            "$ref": "#/components/schemas/common.ExternalLabelSourceType"
          },
          "timestamp": {
            "description": "Time when the label was fetched.\n",
            "format": "date-time",
            "type": "string"
          },
          "value": {
            "description": "Value of the label.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "common.ExternalLabelSourceType": {
        "description": "ExternalLabelSourceType indicates the source of the labels",
        "enum": [
          [
            "namespace",
            "deployment",
            "aws",
            "azure",
            "gcp"
          ]
        ],
        "type": "string"
      },
      "common.HostForensicSettings": {
        "description": "HostForensicSettings indicates how to perform host forensic",
        "properties": {
          "activitiesDisabled": {
            "description": "ActivitiesDisabled indicates if the host activity collection is enabled/disabled.\n",
            "type": "boolean"
          },
          "dockerEnabled": {
            "description": "DockerEnabled indicates whether docker commands are collected.\n",
            "type": "boolean"
          },
          "readonlyDockerEnabled": {
            "description": "ReadonlyDockerEnabled indicates whether docker readonly commands are collected.\n",
            "type": "boolean"
          },
          "serviceActivitiesEnabled": {
            "description": "ServiceActivitiesEnabled indicates whether activities from services are collected.\n",
            "type": "boolean"
          },
          "sshdEnabled": {
            "description": "SshdEnabled indicates whether ssh commands are collected.\n",
            "type": "boolean"
          },
          "sudoEnabled": {
            "description": "SudoEnabled indicates whether sudo commands are collected.\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "common.ImageType": {
        "description": "ImageType is the type of a VM image.\nFor example, in the case of Azure this is one of marketplace/managed/gallery.",
        "type": "string"
      },
      "common.NetworkDeviceIP": {
        "description": "NetworkDeviceIP represents a network device name and address pair",
        "properties": {
          "ip": {
            "description": "Network device IPv4 address.\n",
            "type": "string"
          },
          "name": {
            "description": "Network device name.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "common.PolicyBlockMsg": {
        "description": "PolicyBlockMsg represent the block message in a Policy",
        "type": "string"
      },
      "common.PolicyEffect": {
        "description": "PolicyEffect state the effect of evaluating the given policy",
        "enum": [
          [
            "allow",
            "deny",
            "block",
            "alert"
          ]
        ],
        "type": "string"
      },
      "common.PolicyType": {
        "description": "PolicyType represents the type of the policy",
        "enum": [
          [
            "docker",
            "containerVulnerability",
            "containerCompliance",
            "ciImagesVulnerability",
            "ciImagesCompliance",
            "hostVulnerability",
            "hostCompliance",
            "vmVulnerability",
            "vmCompliance",
            "serverlessCompliance",
            "ciServerlessCompliance",
            "serverlessVulnerability",
            "ciServerlessVulnerability",
            "containerRuntime",
            "appEmbeddedRuntime",
            "containerAppFirewall",
            "hostAppFirewall",
            "outOfBandAppFirewall",
            "appEmbeddedAppFirewall",
            "serverlessAppFirewall",
            "networkFirewall",
            "secrets",
            "hostRuntime",
            "serverlessRuntime",
            "kubernetesAudit",
            "trust",
            "cloud",
            "admission",
            "codeRepoVulnerability",
            "ciCodeRepoVulnerability",
            "codeRepoCompliance",
            "ciCodeRepoCompliance"
          ]
        ],
        "type": "string"
      },
      "common.PortData": {
        "description": "PortData is a port of connections with his metadata",
        "properties": {
          "effect": {
            "$ref": "#/components/schemas/common.Effect"
          },
          "port": {
            "description": "Port is the port number.\n",
            "type": "integer"
          },
          "protocol": {
            "description": "Protocol is the protocol used in the port.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "common.PortRange": {
        "description": "PortRange represents a port range",
        "properties": {
          "deny": {
            "description": "Deny indicates whether the connection is denied.\n",
            "type": "boolean"
          },
          "end": {
            "description": ".\n",
            "type": "integer"
          },
          "start": {
            "description": ".\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "common.ProfileHash": {
        "description": "ProfileHash represents the profile hash\nIt is allowed to contain up to uint32 numbers, and represented by int64 since mongodb does not support unsigned data types",
        "format": "int64",
        "type": "integer"
      },
      "common.ProfilePort": {
        "description": "ProfilePort represents a networking profile port",
        "properties": {
          "port": {
            "description": "Port is the port number.\n",
            "type": "integer"
          },
          "time": {
            "description": "Time is the learning timestamp of this port.\n",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "common.ProfilePortData": {
        "description": "ProfilePortData represents a runtime profile ports data",
        "properties": {
          "all": {
            "description": "All indicates that this port data represents any arbitrary ports.\n",
            "type": "boolean"
          },
          "ports": {
            "description": "Ports is the list of profile runtime ports.\n",
            "items": {
              "$ref": "#/components/schemas/common.ProfilePort"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "common.ProxySettings": {
        "description": "ProxySettings are the http proxy settings",
        "properties": {
          "ca": {
            "description": "Proxy's CA for Defender to trust. Required when using TLS intercept proxies.\n",
            "type": "string"
          },
          "httpProxy": {
            "description": "Proxy address.\n",
            "type": "string"
          },
          "noProxy": {
            "description": "List of addresses for which the proxy should not be used.\n",
            "type": "string"
          },
          "password": {
            "$ref": "#/components/schemas/common.Secret"
          },
          "user": {
            "description": "Username to authenticate with the proxy.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "common.RuntimeResource": {
        "description": "RuntimeResource represents on which resource in the system a rule applies (e.g., specific host or image)\nEmpty resource or wildcard (*) represents all resources of a given type",
        "properties": {
          "accountIDs": {
            "description": "List of account IDs.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "appIDs": {
            "description": "List of application IDs.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "clusters": {
            "description": "List of Kubernetes cluster names.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "codeRepos": {
            "description": "List of code repositories.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "containers": {
            "description": "List of containers.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "functions": {
            "description": "List of functions.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "hosts": {
            "description": "List of  hosts.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "images": {
            "description": "List of images.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "labels": {
            "description": "List of labels.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "namespaces": {
            "description": "List of Kubernetes namespaces.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "common.Secret": {
        "description": "Secret contains the plain and encrypted version of a value (the plain version is never stored in the DB)",
        "properties": {
          "encrypted": {
            "description": "Encrypted value for the secret.\n",
            "type": "string"
          },
          "plain": {
            "description": "Plain text value for the secret. Note: marshalling to JSON will convert to an encrypted value.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "cred.AzureSPInfo": {
        "description": "AzureSPInfo contains the Azure credentials needed for certificate based authentications",
        "properties": {
          "clientId": {
            "description": "ClientID is the client identifier.\n",
            "type": "string"
          },
          "subscriptionId": {
            "description": "SubscriptionID is a GUID that uniquely identifies the subscription to use Azure services.\n",
            "type": "string"
          },
          "tenantId": {
            "description": "TenantID is the ID of the AAD directory in which the application was created.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "cred.Credential": {
        "description": "Credential contains external provider authentication data",
        "properties": {
          "_id": {
            "description": "Unique ID for the credential.\n",
            "type": "string"
          },
          "accountGUID": {
            "description": "Unique ID for an IBM Cloud account.\n",
            "type": "string"
          },
          "accountID": {
            "description": "Account identifier (e.g., username, access key, account GUID, etc.).\n",
            "type": "string"
          },
          "apiToken": {
            "$ref": "#/components/schemas/common.Secret"
          },
          "azureSPInfo": {
            "$ref": "#/components/schemas/cred.AzureSPInfo"
          },
          "caCert": {
            "description": "CA certificate for certificate-based authentication.\n",
            "type": "string"
          },
          "created": {
            "description": "Created when the credential was created (or the account ID was changed for AWS).\n",
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "Description of the credential.\n",
            "type": "string"
          },
          "external": {
            "description": "Indicates if the credential is external (true) or not (false).\n",
            "type": "boolean"
          },
          "global": {
            "description": "Global indicates the credential scope is global, for GCP credential scope is the organization.\n",
            "type": "boolean"
          },
          "lastModified": {
            "description": "Datetime when the credential was last modified.\n",
            "format": "date-time",
            "type": "string"
          },
          "owner": {
            "description": "User who created or modified the credential.\n",
            "type": "string"
          },
          "roleArn": {
            "description": "Amazon Resource Name (ARN) of the role to assume.\n",
            "type": "string"
          },
          "secret": {
            "$ref": "#/components/schemas/common.Secret"
          },
          "skipVerify": {
            "description": "SkipVerify if should skip certificate verification in tls communication.\n",
            "type": "boolean"
          },
          "tokens": {
            "$ref": "#/components/schemas/cred.TemporaryToken"
          },
          "type": {
            "$ref": "#/components/schemas/cred.Type"
          },
          "url": {
            "description": "URL is the server base url.\n",
            "type": "string"
          },
          "useAWSRole": {
            "description": "Indicates if authentication should be done with the instance's attached credentials (EC2 IAM Role).\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "cred.TemporaryToken": {
        "description": "TemporaryToken is a temporary session token for cloud provider APIs\nAWS - https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp.html\nGCP - https://cloud.google.com/iam/docs/creating-short-lived-service-account-credentials\nAzure - https://docs.microsoft.com/en-us/azure/active-directory/manage-apps/what-is-single-sign-on",
        "properties": {
          "awsAccessKeyId": {
            "description": "Temporary access key.\n",
            "type": "string"
          },
          "awsSecretAccessKey": {
            "$ref": "#/components/schemas/common.Secret"
          },
          "duration": {
            "description": "Duration of the token.\n",
            "format": "int64",
            "type": "integer"
          },
          "expirationTime": {
            "description": "Expiration time for the token.\n",
            "format": "date-time",
            "type": "string"
          },
          "token": {
            "$ref": "#/components/schemas/common.Secret"
          }
        },
        "type": "object"
      },
      "cred.Type": {
        "description": "Type represents the credential type",
        "enum": [
          [
            "aws",
            "azure",
            "gcp",
            "ibmCloud",
            "apiToken",
            "githubToken",
            "githubEnterpriseToken",
            "basic",
            "dtr",
            "kubeconfig",
            "certificate"
          ]
        ],
        "type": "string"
      },
      "cred.UsageType": {
        "description": "UsageType represents the credential usage type",
        "enum": [
          [
            "Alert settings",
            "Alert profile",
            "Registry Scan",
            "Serverless Scan",
            "Cloud Scan",
            "Secret Store",
            "Serverless Auto-Deploy",
            "Host Auto-deploy",
            "VM Scan",
            "Code Repository Scan",
            "Agentless Scan Hub",
            "Custom Intelligence Endpoint",
            "VMware Tanzu blobstore Scan",
            "Kubernetes Audit settings"
          ]
        ],
        "type": "string"
      },
      "customrules.Action": {
        "description": "Action is the action to perform if the custom rule applies",
        "enum": [
          [
            "audit",
            "incident"
          ]
        ],
        "type": "string"
      },
      "customrules.Effect": {
        "description": "Effect is the effect that will be used for custom rule",
        "enum": [
          [
            "block",
            "prevent",
            "alert",
            "allow",
            "ban",
            "disable"
          ]
        ],
        "type": "string"
      },
      "customrules.Ref": {
        "description": "Ref represents a custom rule that is referenced by a policy rule",
        "properties": {
          "_id": {
            "description": "Custom rule ID.\n",
            "type": "integer"
          },
          "action": {
            "$ref": "#/components/schemas/customrules.Action"
          },
          "effect": {
            "$ref": "#/components/schemas/customrules.Effect"
          }
        },
        "type": "object"
      },
      "customrules.Rule": {
        "description": "Rule represents a custom rule",
        "properties": {
          "_id": {
            "description": "Rule ID. Must be unique.\n",
            "type": "integer"
          },
          "attackTechniques": {
            "description": "List of attack techniques.\n",
            "items": {
              "$ref": "#/components/schemas/mitre.Technique"
            },
            "type": "array"
          },
          "description": {
            "description": "Description of the rule.\n",
            "type": "string"
          },
          "message": {
            "description": "Macro that is printed as part of the audit/incident message.\n",
            "type": "string"
          },
          "minVersion": {
            "description": "Minimum version required to support the rule.\n",
            "type": "string"
          },
          "modified": {
            "description": "Datetime when the rule was created or last modified.\n",
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "description": "Name of the rule.\n",
            "type": "string"
          },
          "owner": {
            "description": "User who created or modified the rule.\n",
            "type": "string"
          },
          "script": {
            "description": "Custom script.\n",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/customrules.Type"
          }
        },
        "type": "object"
      },
      "customrules.Type": {
        "description": "Type is the type of the custom rule",
        "enum": [
          [
            "processes",
            "filesystem",
            "network-outgoing",
            "kubernetes-audit",
            "waas-request",
            "waas-response"
          ]
        ],
        "type": "string"
      },
      "defender.Category": {
        "description": "Category represents the defender target category",
        "enum": [
          [
            "container",
            "host",
            "serverless",
            "appEmbedded",
            "hostAgentless"
          ]
        ],
        "type": "string"
      },
      "defender.Defender": {
        "description": "Defender is an update about an agent starting",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/defender.Category"
          },
          "certificateExpiration": {
            "description": "Client certificate expiration time.\n",
            "format": "date-time",
            "type": "string"
          },
          "cloudMetadata": {
            "$ref": "#/components/schemas/common.CloudMetadata"
          },
          "cluster": {
            "description": "Cluster name (fallback is internal IP).\n",
            "type": "string"
          },
          "clusterID": {
            "description": "Unique ID generated for each DaemonSet. Used to group Defenders by clusters. Note: Kubernetes does not provide a cluster name as part of its API.\n",
            "type": "string"
          },
          "collections": {
            "description": "Collections to which this Defender belongs.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "compatibleVersion": {
            "description": "Indicates if Defender has a compatible version for communication (e.g., request logs) (true) or not (false).\n",
            "type": "boolean"
          },
          "connected": {
            "description": "Indicates whether Defender is connected (true) or not (false).\n",
            "type": "boolean"
          },
          "features": {
            "$ref": "#/components/schemas/defender.Features"
          },
          "firewallProtection": {
            "$ref": "#/components/schemas/waas.ProtectionStatus"
          },
          "fqdn": {
            "description": "Full domain name of the host. Used in audit alerts to identify specific hosts.\n",
            "type": "string"
          },
          "hostname": {
            "description": "Name of host where Defender is deployed.\n",
            "type": "string"
          },
          "isARM64": {
            "description": "IsARM64 indicates whether the defender runs on aarch64 architecture.\n",
            "type": "boolean"
          },
          "lastModified": {
            "description": "Datetime when the Defender's connectivity status last changed.\n",
            "format": "date-time",
            "type": "string"
          },
          "port": {
            "description": "Port that Defender uses to connect to Console.\n",
            "type": "integer"
          },
          "proxy": {
            "$ref": "#/components/schemas/common.ProxySettings"
          },
          "remoteLoggingSupported": {
            "description": "Indicates if Defender logs can be retrieved remotely (true) or not (false).\n",
            "type": "boolean"
          },
          "remoteMgmtSupported": {
            "description": "Indicates if Defender can be remotely managed (upgraded, restarted) (true) or not (false).\n",
            "type": "boolean"
          },
          "status": {
            "$ref": "#/components/schemas/defender.Status"
          },
          "systemInfo": {
            "$ref": "#/components/schemas/defender.SystemInfo"
          },
          "tasClusterID": {
            "description": "TAS cluster ID where Defender runs. This is typically set to the Cloud controller's API address.\n",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/defender.Type"
          },
          "usingOldCA": {
            "description": "UsingOldCA indicates whether the defender client is using an old certificate signed by an old CA for TLS handshake.\n",
            "type": "boolean"
          },
          "version": {
            "description": "Defender version.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "defender.FeatureStatus": {
        "description": "FeatureStatus holds data about defender features",
        "properties": {
          "enabled": {
            "description": "Indicates if the feature is enabled (true) or not (false).\n",
            "type": "boolean"
          },
          "err": {
            "description": "Error string, if an error occurred.\n",
            "type": "string"
          },
          "hostname": {
            "description": "Name of host where Defender runs.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "defender.Features": {
        "description": "Features is the defender features that can be updated",
        "properties": {
          "clusterMonitoring": {
            "description": "Indicates whether any of the cluster monitoring features are enabled (monitor service accounts, monitor Istio, collect Kubernetes pod labels).\n",
            "type": "boolean"
          },
          "proxyListenerType": {
            "$ref": "#/components/schemas/defender.ProxyListenerType"
          }
        },
        "type": "object"
      },
      "defender.ProxyListenerType": {
        "description": "ProxyListenerType is the proxy listener type of defenders",
        "enum": [
          [
            "none",
            "tcp",
            "default"
          ]
        ],
        "type": "string"
      },
      "defender.ScanStatus": {
        "description": "ScanStatus represents the status of current scan",
        "properties": {
          "completed": {
            "description": "Indicates if scanning has successfully completed (true) or not (false).\n",
            "type": "boolean"
          },
          "errors": {
            "description": "List of errors that occurred during the last scan.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "hostname": {
            "description": "Name of the host where Defender runs.\n",
            "type": "string"
          },
          "scanTime": {
            "description": "Datetime of the last completed scan.\n",
            "format": "date-time",
            "type": "string"
          },
          "scanning": {
            "description": "Indicates whether scanning is in progress (true) or not (false).\n",
            "type": "boolean"
          },
          "selective": {
            "description": "Indicates if the scan is for a specific resource (true) or not (false).\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "defender.Settings": {
        "description": "Settings is the Defender settings",
        "properties": {
          "admissionControlEnabled": {
            "description": "Indicates if the admission controller is enabled (true) or not (false).\n",
            "type": "boolean"
          },
          "admissionControlWebhookSuffix": {
            "description": "Relative path to the admission control webhook HTTP endpoint.\n",
            "type": "string"
          },
          "appEmbeddedFileSystemTracingEnabled": {
            "description": "AppEmbeddedFileSystemTracingEnabled is the default deployment state for app embedded Defenders file system tracing.\n",
            "type": "boolean"
          },
          "automaticUpgrade": {
            "description": "Deprecated: indicates if defenders should be automatically upgraded to the latest version.\n",
            "type": "boolean"
          },
          "disconnectPeriodDays": {
            "description": "Number of consecutive days a Defender must remain disconnected for it to be considered decommissioned.\n",
            "type": "integer"
          },
          "hostCustomComplianceEnabled": {
            "description": "Indicates if Defenders support host custom compliance checks (true) or not (false).\n",
            "type": "boolean"
          },
          "listeningPort": {
            "description": "Port on which Defenders listen.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "defender.Status": {
        "description": "Status is the generic status state per defender or global",
        "properties": {
          "appFirewall": {
            "$ref": "#/components/schemas/defender.FeatureStatus"
          },
          "container": {
            "$ref": "#/components/schemas/defender.ScanStatus"
          },
          "containerNetworkFirewall": {
            "$ref": "#/components/schemas/defender.FeatureStatus"
          },
          "features": {
            "$ref": "#/components/schemas/defender.FeatureStatus"
          },
          "filesystem": {
            "$ref": "#/components/schemas/defender.FeatureStatus"
          },
          "hostCustomCompliance": {
            "$ref": "#/components/schemas/defender.FeatureStatus"
          },
          "hostNetworkFirewall": {
            "$ref": "#/components/schemas/defender.FeatureStatus"
          },
          "image": {
            "$ref": "#/components/schemas/defender.ScanStatus"
          },
          "lastModified": {
            "description": "Datetime the status was last modified.\n",
            "format": "date-time",
            "type": "string"
          },
          "network": {
            "$ref": "#/components/schemas/defender.FeatureStatus"
          },
          "process": {
            "$ref": "#/components/schemas/defender.FeatureStatus"
          },
          "runc": {
            "$ref": "#/components/schemas/defender.FeatureStatus"
          },
          "runtime": {
            "$ref": "#/components/schemas/defender.FeatureStatus"
          },
          "tasDroplets": {
            "$ref": "#/components/schemas/defender.ScanStatus"
          },
          "upgrade": {
            "$ref": "#/components/schemas/defender.UpgradeStatus"
          }
        },
        "type": "object"
      },
      "defender.SystemInfo": {
        "description": "SystemInfo is the OS information of the host",
        "properties": {
          "cpuCount": {
            "description": "CPU count on the host where Defender runs.\n",
            "type": "integer"
          },
          "freeDiskSpaceGB": {
            "description": "Free disk space (in GB) on the host where Defender runs.\n",
            "type": "integer"
          },
          "kernelVersion": {
            "description": "Kernel version on the host where Defender runs.\n",
            "type": "string"
          },
          "memoryGB": {
            "description": "Total memory (in GB) on the host where Defender runs.\n",
            "format": "double",
            "type": "number"
          },
          "totalDiskSpaceGB": {
            "description": "Total disk space (in GB) on the host where Defender runs.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "defender.Type": {
        "description": "Type is the type to be given at startup",
        "enum": [
          [
            "none",
            "docker",
            "dockerWindows",
            "containerdWindows",
            "swarm",
            "daemonset",
            "serverLinux",
            "serverWindows",
            "cri",
            "fargate",
            "appEmbedded",
            "tas",
            "serverless",
            "ecs"
          ]
        ],
        "type": "string"
      },
      "defender.UpgradeStatus": {
        "description": "UpgradeStatus represents the status of current twistlock defender upgrade",
        "properties": {
          "err": {
            "description": "Error string, if an error occurred.\n",
            "type": "string"
          },
          "hostname": {
            "description": "Name of the host where Defender runs.\n",
            "type": "string"
          },
          "lastModified": {
            "description": "Datetime of the last upgrade.\n",
            "format": "date-time",
            "type": "string"
          },
          "progress": {
            "description": "Upgrade progress.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "deployment.CommandError": {
        "description": "CommandError is the command error on specific instance",
        "properties": {
          "error": {
            "description": "Error is the error in case the command failed.\n",
            "type": "string"
          },
          "hostname": {
            "description": "Hostname is the instance hostname.\n",
            "type": "string"
          },
          "instanceID": {
            "description": "InstanceID is the instance id.\n",
            "type": "string"
          },
          "instanceName": {
            "description": "InstanceName is the instance name.\n",
            "type": "string"
          },
          "projectID": {
            "description": "ProjectID is instance GCP project id.\n",
            "type": "string"
          },
          "region": {
            "description": "Region is the instance region for AWS or zone for GCP.\n",
            "type": "string"
          },
          "state": {
            "description": "State is the error state in which the deployment failed (e.g. timed out/failed due to some other reason).\n",
            "type": "string"
          },
          "vmImage": {
            "description": "VMImage is the instance image.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "deployment.DaemonSet": {
        "description": "DaemonSet holds information about deployed defender DaemonSet\nTODO #12377 - Implement Resource interface for collections filtering, after retrieving correct value to Cluster field",
        "properties": {
          "address": {
            "description": "Address is the kubernetes cluster address.\n",
            "type": "string"
          },
          "cluster": {
            "description": "Cluster is the kubernetes cluster name.\n",
            "type": "string"
          },
          "credentialID": {
            "description": "CredentialID is the name of the credential used.\n",
            "type": "string"
          },
          "defendersVersion": {
            "description": "DefendersVersion is the version of the defenders deployed.\n",
            "type": "string"
          },
          "desiredDefenders": {
            "description": "DesiredDefenders is the number of desired defenders.\n",
            "type": "integer"
          },
          "error": {
            "description": "Error indicates any related errors found.\n",
            "type": "string"
          },
          "hasDefender": {
            "description": "HasDefender indicates if the cluster has at least one running defender.\n",
            "type": "boolean"
          },
          "projectID": {
            "description": "ProjectID is the kubernetes cluster project ID.\n",
            "type": "string"
          },
          "region": {
            "description": "Region is the kubernetes cluster location region.\n",
            "type": "string"
          },
          "runningDefenders": {
            "description": "RunningDefenders is the number of defenders running.\n",
            "type": "integer"
          },
          "upgradable": {
            "description": "Upgradable indicates if the cluster is upgradable.\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "float32": {
        "format": "float",
        "type": "number"
      },
      "float64": {
        "format": "double",
        "type": "number"
      },
      "forensic.ContainerEvent": {
        "description": "ContainerEvent holds forensic event information (in flat structure)",
        "properties": {
          "allPorts": {
            "description": "AllPorts indicates all listening ports are allowed.\n",
            "type": "boolean"
          },
          "attack": {
            "$ref": "#/components/schemas/shared.RuntimeAttackType"
          },
          "category": {
            "$ref": "#/components/schemas/shared.IncidentCategory"
          },
          "command": {
            "description": "Command is the event command.\n",
            "type": "string"
          },
          "containerId": {
            "description": "ContainerID is the event container id.\n",
            "type": "string"
          },
          "domainName": {
            "description": "DomainName is the event queried domain name.\n",
            "type": "string"
          },
          "domainType": {
            "description": "DomainType is the event queried domain type.\n",
            "type": "string"
          },
          "dstIP": {
            "description": "DstIP is the destination IP of the connection.\n",
            "type": "string"
          },
          "dstPort": {
            "description": "DstPort is the destination port.\n",
            "type": "integer"
          },
          "dstProfileID": {
            "description": "DstProfileID is the profile ID of the connection destination.\n",
            "type": "string"
          },
          "effect": {
            "description": "Effect is the runtime audit effect.\n",
            "type": "string"
          },
          "listeningStartTime": {
            "description": "listeningStartTime is the port listening start time.\n",
            "format": "date-time",
            "type": "string"
          },
          "message": {
            "description": "Message is the runtime audit message.\n",
            "type": "string"
          },
          "networkCollectionType": {
            "$ref": "#/components/schemas/forensic.NetworkCollection"
          },
          "outbound": {
            "description": "Outbound indicates if the port is outbound.\n",
            "type": "boolean"
          },
          "path": {
            "description": "Path is the event path.\n",
            "type": "string"
          },
          "pid": {
            "description": "Pid is the event process id.\n",
            "type": "integer"
          },
          "port": {
            "description": "Port is the listening port.\n",
            "type": "integer"
          },
          "ppid": {
            "description": "PPid is the event parent process id.\n",
            "type": "integer"
          },
          "process": {
            "description": "Process is the event process.\n",
            "type": "string"
          },
          "srcIP": {
            "description": "SrcIP is the source IP of the connection.\n",
            "type": "string"
          },
          "srcProfileID": {
            "description": "SrcProfileID is the profile ID of the connection source.\n",
            "type": "string"
          },
          "static": {
            "description": "Static indicates the event was added to the profile without behavioral indication.\n",
            "type": "boolean"
          },
          "timestamp": {
            "description": "Timestamp is the event timestamp.\n",
            "format": "date-time",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/forensic.ContainerEventType"
          },
          "user": {
            "description": "User is the event user.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "forensic.ContainerEventType": {
        "description": "ContainerEventType represents the kind of event",
        "enum": [
          [
            "Process spawned",
            "Binary created",
            "Container started",
            "Listening port",
            "Connection established",
            "Runtime audit",
            "Runtime profile process",
            "Runtime profile filesystem",
            "Runtime profile networking",
            "Incident",
            "DNS query"
          ]
        ],
        "type": "string"
      },
      "forensic.HostEvent": {
        "description": "HostEvent holds host forensic event information",
        "properties": {
          "app": {
            "description": "App is the application associated with the event.\n",
            "type": "string"
          },
          "attack": {
            "$ref": "#/components/schemas/shared.RuntimeAttackType"
          },
          "category": {
            "$ref": "#/components/schemas/shared.IncidentCategory"
          },
          "command": {
            "description": "Command is the event command.\n",
            "type": "string"
          },
          "country": {
            "description": "Country is the country associated with the event.\n",
            "type": "string"
          },
          "domainName": {
            "description": "DomainName is the event queried domain name.\n",
            "type": "string"
          },
          "domainType": {
            "description": "DomainType is the event queried domain type.\n",
            "type": "string"
          },
          "effect": {
            "description": "Effect is the runtime audit effect.\n",
            "type": "string"
          },
          "interactive": {
            "description": "Interactive indicates if the event is interactive.\n",
            "type": "boolean"
          },
          "ip": {
            "description": "IP is the IP address associated with the event.\n",
            "type": "string"
          },
          "listeningStartTime": {
            "description": "ListeningStartTime is the listening port start time.\n",
            "format": "date-time",
            "type": "string"
          },
          "message": {
            "description": "Message is the runtime audit message.\n",
            "type": "string"
          },
          "path": {
            "description": "Path is the event path.\n",
            "type": "string"
          },
          "pid": {
            "description": "Pid is the event process id.\n",
            "type": "integer"
          },
          "port": {
            "description": "Port is the listening port.\n",
            "type": "integer"
          },
          "ppath": {
            "description": "Path is the event parent path.\n",
            "type": "string"
          },
          "ppid": {
            "description": "PPid is the event parent process id.\n",
            "type": "integer"
          },
          "process": {
            "description": "Process is the event process.\n",
            "type": "string"
          },
          "timestamp": {
            "description": "Timestamp is the event timestamp.\n",
            "format": "date-time",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/forensic.HostEventType"
          },
          "user": {
            "description": "User is the event user.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "forensic.HostEventType": {
        "description": "HostEventType represents the kind of host event",
        "enum": [
          [
            "Process spawned",
            "Listening port",
            "Binary created",
            "Runtime audit",
            "SSH event",
            "Incident",
            "DNS query"
          ]
        ],
        "type": "string"
      },
      "forensic.NetworkCollection": {
        "description": "NetworkCollection describe the different types of collection of network events",
        "type": "string"
      },
      "identity.LdapSettings": {
        "description": "LdapSettings are the ldap connectivity settings",
        "properties": {
          "accountPassword": {
            "$ref": "#/components/schemas/common.Secret"
          },
          "accountUpn": {
            "description": "AccountUpn is the user principle name used to connect to the active directory server.\n",
            "type": "string"
          },
          "caCert": {
            "description": "CaCert is cert in PEM format (optional, if not specified, skip_verify flag will be used).\n",
            "type": "string"
          },
          "enabled": {
            "description": "Enabled indicates whether LDAP is enabled.\n",
            "type": "boolean"
          },
          "groupSearchBase": {
            "description": "GroupSearchBase is the LDAP search pattern for groups.\n",
            "type": "string"
          },
          "searchBase": {
            "description": "SearchBase is the LDAP search pattern.\n",
            "type": "string"
          },
          "type": {
            "description": "Type specifies the LDAP server type (AD or OpenLDAP).\n",
            "type": "string"
          },
          "url": {
            "description": "Url is the ldap server url.\n",
            "type": "string"
          },
          "userSearchBase": {
            "description": "UserSearchBase is the LDAP search pattern for users.\n",
            "type": "string"
          },
          "userSearchIdentifier": {
            "description": "UserSearchIdentifier is the user identifier to use for querying open ldap (e.g., cn -> cn=user).\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "identity.ProviderName": {
        "description": "ProviderName is the identity provider name",
        "enum": [
          [
            "github",
            "openshift"
          ]
        ],
        "type": "string"
      },
      "identity.ProviderSettings": {
        "description": "ProviderSettings are the Oauth/ OpenID Connect connectivity settings",
        "properties": {
          "authURL": {
            "description": "AuthURL specifies auth URL.\n",
            "type": "string"
          },
          "cert": {
            "description": "Cert is idp certificate.\n",
            "type": "string"
          },
          "clientID": {
            "description": "ClientID is the client identifier issued to the client during the registration process.\n",
            "type": "string"
          },
          "clientSecret": {
            "$ref": "#/components/schemas/common.Secret"
          },
          "enabled": {
            "description": "Enabled indicates whether Auth settings are enabled.\n",
            "type": "boolean"
          },
          "groupClaim": {
            "description": "GroupClaim is the name of the group claim property.\n",
            "type": "string"
          },
          "groupScope": {
            "description": "GroupScope specifies name of group scope.\n",
            "type": "string"
          },
          "openIDIssuesURL": {
            "description": "OpenIDIssuesURL is the base URL for OpenID connect providers.\n",
            "type": "string"
          },
          "openshiftBaseURL": {
            "description": "OpenshiftBaseURL is openshift base URL.\n",
            "type": "string"
          },
          "providerAlias": {
            "description": "ProviderAlias is the provider alias used for display.\n",
            "type": "string"
          },
          "providerName": {
            "$ref": "#/components/schemas/identity.ProviderName"
          },
          "tokenURL": {
            "description": "TokenURL specifies token URL.\n",
            "type": "string"
          },
          "userClaim": {
            "description": "UserClaim is the name of the user claim property.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "identity.RedirectURLResponse": {
        "description": "RedirectURLResponse is the response for identity redirect endpoint",
        "properties": {
          "enabled": {
            "description": "Enabled identify if auth provider is enabled.\n",
            "type": "boolean"
          },
          "url": {
            "description": "URL is the redirect URL.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "identity.SamlSettings": {
        "description": "SamlSettings are the saml connectivity settings",
        "properties": {
          "appId": {
            "description": "AppID is the Azure application ID.\n",
            "type": "string"
          },
          "appSecret": {
            "$ref": "#/components/schemas/common.Secret"
          },
          "audience": {
            "description": "Audience specifies the SAML audience used in the verification of the SAML response.\n",
            "type": "string"
          },
          "cert": {
            "description": "Cert is idp certificate in PEM format.\n",
            "type": "string"
          },
          "consoleURL": {
            "description": "ConsoleURL is the external Console URL that is used by the IDP for routing the browser after login.\n",
            "type": "string"
          },
          "enabled": {
            "description": "Enabled indicates whether saml settings are enabled.\n",
            "type": "boolean"
          },
          "groupAttribute": {
            "description": "GroupAttribute is the name of the group attribute.\n",
            "type": "string"
          },
          "issuer": {
            "description": "Issuer is idp issuer id.\n",
            "type": "string"
          },
          "providerAlias": {
            "description": "ProviderAlias is the provider alias used for display.\n",
            "type": "string"
          },
          "skipAuthnContext": {
            "description": "SkipAuthnContext indicates whether request authentication contexts should be skipped.\n",
            "type": "boolean"
          },
          "tenantId": {
            "description": "TenantID is the Azure Tenant ID.\n",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/identity.SamlType"
          },
          "url": {
            "description": "Url is idp sso url.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "identity.SamlType": {
        "description": "SamlType represents the type of a SAML configured settings",
        "enum": [
          [
            "okta",
            "gsuite",
            "ping",
            "shibboleth",
            "azure",
            "adfs"
          ]
        ],
        "type": "string"
      },
      "identity.Settings": {
        "description": "Settings hold the identity settings for supported providers",
        "properties": {
          "ldap": {
            "$ref": "#/components/schemas/identity.LdapSettings"
          },
          "oauth": {
            "$ref": "#/components/schemas/identity.ProviderSettings"
          },
          "openid": {
            "$ref": "#/components/schemas/identity.ProviderSettings"
          },
          "saml": {
            "$ref": "#/components/schemas/identity.SamlSettings"
          }
        },
        "type": "object"
      },
      "int": {
        "type": "integer"
      },
      "int16": {
        "type": "integer"
      },
      "int64": {
        "format": "int64",
        "type": "integer"
      },
      "istio.AuthorizationPolicy": {
        "description": "AuthorizationPolicy is a compact version of Istio AuthorizationPolicy resource\nSee https://istio.io/docs/reference/config/security/authorization-policy/#AuthorizationPolicy",
        "properties": {
          "effect": {
            "$ref": "#/components/schemas/common.Effect"
          },
          "name": {
            "description": "Name is the authorization policy name.\n",
            "type": "string"
          },
          "namespace": {
            "description": "Namespace is the namespace of the authorization policy.\n",
            "type": "string"
          },
          "rules": {
            "description": "Rules are the access rules this authorization policy defines.\n",
            "items": {
              "$ref": "#/components/schemas/istio.AuthorizationPolicyRule"
            },
            "type": "array"
          },
          "targetServices": {
            "description": "TargetServices is the list of services the authorization policy applies on.\n",
            "items": {
              "$ref": "#/components/schemas/istio.AuthorizationPolicyService"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "istio.AuthorizationPolicyDestination": {
        "description": "AuthorizationPolicyDestination is a compact version of Istio Operation resource\nSee https://istio.io/docs/reference/config/security/authorization-policy/#Operation",
        "properties": {
          "methods": {
            "description": "Methods are the destination endpoint HTTP methods, such as: \"GET\", \"POST\".\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "paths": {
            "description": "Paths are the destination HTTP paths.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "ports": {
            "description": "Ports are the destination endpoint ports.\n",
            "items": {
              "$ref": "#/components/schemas/int"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "istio.AuthorizationPolicyRule": {
        "description": "AuthorizationPolicyRule is a compact version of Istio Rule resource\nSee https://istio.io/docs/reference/config/security/authorization-policy/#Rule",
        "properties": {
          "destinations": {
            "description": "Destinations are the endpoint definitions the rule grants access to.\n",
            "items": {
              "$ref": "#/components/schemas/istio.AuthorizationPolicyDestination"
            },
            "type": "array"
          },
          "sources": {
            "description": "Sources are the metadatas of the services the rule grants access to.\n",
            "items": {
              "$ref": "#/components/schemas/istio.AuthorizationPolicySource"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "istio.AuthorizationPolicyService": {
        "description": "AuthorizationPolicyService represents a service an authorization policy applies on\nSee https://istio.io/docs/reference/config/security/authorization-policy/#Source",
        "properties": {
          "name": {
            "description": "Name is the service name.\n",
            "type": "string"
          },
          "namespace": {
            "description": "Namespace is the service namespace.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "istio.AuthorizationPolicySource": {
        "description": "AuthorizationPolicySource is a compact version of Istio Source resource\nSee https://istio.io/docs/reference/config/security/authorization-policy/#Source",
        "properties": {
          "namespaces": {
            "description": "Namespaces are the source services namespaces.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "principals": {
            "description": "Principals are the source services principals.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "kubeaudit.Audit": {
        "description": "Audit represents a Kubernetes audit - this is the data that is stored for matched audits",
        "properties": {
          "attackTechniques": {
            "description": "AttackTechniques are the MITRE attack techniques.\n",
            "items": {
              "$ref": "#/components/schemas/mitre.Technique"
            },
            "type": "array"
          },
          "authorizationInfo": {
            "additionalProperties": {
              "$ref": "#/components/schemas/string"
            },
            "description": "AuthorizationInfo holds the original event authorization info.\n",
            "type": "object"
          },
          "cluster": {
            "description": "Cluster is the cluster the Kubernetes audit belongs to.\n",
            "type": "string"
          },
          "eventBlob": {
            "description": "EventBlob is the original event that caused this audit.\n",
            "type": "string"
          },
          "message": {
            "description": "Message is the user defined message which appears on audit.\n",
            "type": "string"
          },
          "requestURI": {
            "description": "RequestURI is the request URI as sent by the client to a server.\n",
            "type": "string"
          },
          "resources": {
            "description": "Resource represents the resource that is impacted by this event.\n",
            "type": "string"
          },
          "sourceIPs": {
            "description": "Source IPs, from where the request originated and intermediate proxies (optional).\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "time": {
            "description": "Time is the time at which the request was generated.\n",
            "format": "date-time",
            "type": "string"
          },
          "user": {
            "$ref": "#/components/schemas/kubeaudit.EventUserInfo"
          },
          "verb": {
            "description": "Verb is the kubernetes verb associated with the request.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "kubeaudit.AuditSettings": {
        "description": "AuditSettings represents the kubernetes audits settings",
        "properties": {
          "lastPollingTime": {
            "description": "LastPollingTime holds the last time the logs were polled.\n",
            "format": "date-time",
            "type": "string"
          },
          "specifications": {
            "description": "Specifications are the K8s audits fetching CSP specifications.\n",
            "items": {
              "$ref": "#/components/schemas/kubeaudit.AuditSpecification"
            },
            "type": "array"
          },
          "webhookUrlSuffix": {
            "description": "WebhookSuffix is the relative path to the webhook http endpoint, used for auditing K8S events sent to the console from a cluster.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "kubeaudit.AuditSpecification": {
        "description": "AuditSpecification is the specification for fetching audits from a CSP",
        "properties": {
          "awsRegion": {
            "description": "AWSRegion is the cloud region to fetch from.\n",
            "type": "string"
          },
          "azureResourceGroups": {
            "description": "AzureResourceGroups holds the resource groups to filter by.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "azureWorkspaceName": {
            "description": "AzureWorkspaceName holds the workspace name to fetch from.\n",
            "type": "string"
          },
          "clusters": {
            "description": "Clusters are the clusters to fetch.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "credentialID": {
            "description": "CredentialID is the credential to use for CSP authentication for this specification.\n",
            "type": "string"
          },
          "deploymentType": {
            "$ref": "#/components/schemas/kubeaudit.DeploymentType"
          },
          "filter": {
            "description": "Filter is a provider specific query using the provider's query syntax for additional filtering.\n",
            "type": "string"
          },
          "gcpProjectIDs": {
            "description": "GCPProjectIDs holds the IDs of projects to fetch from.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "name": {
            "description": "Name is the specification unique identification as provided by the user.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "kubeaudit.DeploymentType": {
        "description": "DeploymentType specifies the type of Kubernetes deployment",
        "enum": [
          [
            "gke",
            "aks",
            "eks"
          ]
        ],
        "type": "string"
      },
      "kubeaudit.EventUserInfo": {
        "description": "EventUserInfo holds the information about the user that authenticated to Kubernentes",
        "properties": {
          "groups": {
            "description": "The names of groups this user is a part of (optional).\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "uid": {
            "description": "A unique value that identifies this user across time. If this user is\ndeleted and another user by the same name is added, they will have\ndifferent UIDs (optional).\n",
            "type": "string"
          },
          "username": {
            "description": "The name that uniquely identifies this user among all active users (optional).\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "kubeaudit.Policy": {
        "description": "Policy represents a Kubernetes audit policy enforced on Kubernetes audits",
        "properties": {
          "_id": {
            "description": "ID is the Kubernetes audit policy ID.\n",
            "type": "string"
          },
          "customRulesIDs": {
            "description": "CustomRulesIDs is a list of the custom runtime rules ids that apply to this policy.\n",
            "items": {
              "$ref": "#/components/schemas/int"
            },
            "type": "array"
          },
          "enabled": {
            "description": "Enabled specifies if Kubernetes audits are enabled.\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "license.SPDXLicense": {
        "description": "SPDXLicense represents a SPDX license ID",
        "enum": [
          [
            "0BSD",
            "AAL",
            "ADSL",
            "AFL-1.1",
            "AFL-1.2",
            "AFL-2.0",
            "AFL-2.1",
            "AFL-3.0",
            "AGPL-1.0",
            "AGPL-1.0-only",
            "AGPL-1.0-or-later",
            "AGPL-3.0",
            "AGPL-3.0-only",
            "AGPL-3.0-or-later",
            "AMDPLPA",
            "AML",
            "AMPAS",
            "ANTLR-PD",
            "ANTLR-PD-fallback",
            "APAFML",
            "APL-1.0",
            "APSL-1.0",
            "APSL-1.1",
            "APSL-1.2",
            "APSL-2.0",
            "Abstyles",
            "Adobe-2006",
            "Adobe-Glyph",
            "Afmparse",
            "Aladdin",
            "Apache-1.0",
            "Apache-1.1",
            "Apache-2.0",
            "Artistic-1.0",
            "Artistic-1.0-Perl",
            "Artistic-1.0-cl8",
            "Artistic-2.0",
            "BSD-1-Clause",
            "BSD-2-Clause",
            "BSD-2-Clause-FreeBSD",
            "BSD-2-Clause-NetBSD",
            "BSD-2-Clause-Patent",
            "BSD-2-Clause-Views",
            "BSD-3-Clause",
            "BSD-3-Clause-Attribution",
            "BSD-3-Clause-Clear",
            "BSD-3-Clause-LBNL",
            "BSD-3-Clause-No-Nuclear-License",
            "BSD-3-Clause-No-Nuclear-License-2014",
            "BSD-3-Clause-No-Nuclear-Warranty",
            "BSD-3-Clause-Open-MPI",
            "BSD-4-Clause",
            "BSD-4-Clause-UC",
            "BSD-Protection",
            "BSD-Source-Code",
            "BSL-1.0",
            "BUSL-1.1",
            "Bahyph",
            "Barr",
            "Beerware",
            "BitTorrent-1.0",
            "BitTorrent-1.1",
            "BlueOak-1.0.0",
            "Borceux",
            "CAL-1.0",
            "CAL-1.0-Combined-Work-Exception",
            "CATOSL-1.1",
            "CC-BY-1.0",
            "CC-BY-2.0",
            "CC-BY-2.5",
            "CC-BY-3.0",
            "CC-BY-3.0-AT",
            "CC-BY-3.0-US",
            "CC-BY-4.0",
            "CC-BY-NC-1.0",
            "CC-BY-NC-2.0",
            "CC-BY-NC-2.5",
            "CC-BY-NC-3.0",
            "CC-BY-NC-4.0",
            "CC-BY-NC-ND-1.0",
            "CC-BY-NC-ND-2.0",
            "CC-BY-NC-ND-2.5",
            "CC-BY-NC-ND-3.0",
            "CC-BY-NC-ND-3.0-IGO",
            "CC-BY-NC-ND-4.0",
            "CC-BY-NC-SA-1.0",
            "CC-BY-NC-SA-2.0",
            "CC-BY-NC-SA-2.5",
            "CC-BY-NC-SA-3.0",
            "CC-BY-NC-SA-4.0",
            "CC-BY-ND-1.0",
            "CC-BY-ND-2.0",
            "CC-BY-ND-2.5",
            "CC-BY-ND-3.0",
            "CC-BY-ND-4.0",
            "CC-BY-SA-1.0",
            "CC-BY-SA-2.0",
            "CC-BY-SA-2.0-UK",
            "CC-BY-SA-2.5",
            "CC-BY-SA-3.0",
            "CC-BY-SA-3.0-AT",
            "CC-BY-SA-4.0",
            "CC-PDDC",
            "CC0-1.0",
            "CDDL-1.0",
            "CDDL-1.1",
            "CDLA-Permissive-1.0",
            "CDLA-Sharing-1.0",
            "CECILL-1.0",
            "CECILL-1.1",
            "CECILL-2.0",
            "CECILL-2.1",
            "CECILL-B",
            "CECILL-C",
            "CERN-OHL-1.1",
            "CERN-OHL-1.2",
            "CERN-OHL-P-2.0",
            "CERN-OHL-S-2.0",
            "CERN-OHL-W-2.0",
            "CNRI-Jython",
            "CNRI-Python",
            "CNRI-Python-GPL-Compatible",
            "CPAL-1.0",
            "CPL-1.0",
            "CPOL-1.02",
            "CUA-OPL-1.0",
            "Caldera",
            "ClArtistic",
            "Condor-1.1",
            "Crossword",
            "CrystalStacker",
            "Cube",
            "D-FSL-1.0",
            "DOC",
            "DSDP",
            "Dotseqn",
            "ECL-1.0",
            "ECL-2.0",
            "EFL-1.0",
            "EFL-2.0",
            "EPICS",
            "EPL-1.0",
            "EPL-2.0",
            "EUDatagrid",
            "EUPL-1.0",
            "EUPL-1.1",
            "EUPL-1.2",
            "Entessa",
            "ErlPL-1.1",
            "Eurosym",
            "FSFAP",
            "FSFUL",
            "FSFULLR",
            "FTL",
            "Fair",
            "Frameworx-1.0",
            "FreeImage",
            "GFDL-1.1",
            "GFDL-1.1-invariants-only",
            "GFDL-1.1-invariants-or-later",
            "GFDL-1.1-no-invariants-only",
            "GFDL-1.1-no-invariants-or-later",
            "GFDL-1.1-only",
            "GFDL-1.1-or-later",
            "GFDL-1.2",
            "GFDL-1.2-invariants-only",
            "GFDL-1.2-invariants-or-later",
            "GFDL-1.2-no-invariants-only",
            "GFDL-1.2-no-invariants-or-later",
            "GFDL-1.2-only",
            "GFDL-1.2-or-later",
            "GFDL-1.3",
            "GFDL-1.3-invariants-only",
            "GFDL-1.3-invariants-or-later",
            "GFDL-1.3-no-invariants-only",
            "GFDL-1.3-no-invariants-or-later",
            "GFDL-1.3-only",
            "GFDL-1.3-or-later",
            "GL2PS",
            "GLWTPL",
            "GPL-1.0",
            "GPL-1.0+",
            "GPL-1.0-only",
            "GPL-1.0-or-later",
            "GPL-2.0",
            "GPL-2.0+",
            "GPL-2.0-only",
            "GPL-2.0-or-later",
            "GPL-2.0-with-GCC-exception",
            "GPL-2.0-with-autoconf-exception",
            "GPL-2.0-with-bison-exception",
            "GPL-2.0-with-classpath-exception",
            "GPL-2.0-with-font-exception",
            "GPL-3.0",
            "GPL-3.0+",
            "GPL-3.0-only",
            "GPL-3.0-or-later",
            "GPL-3.0-with-GCC-exception",
            "GPL-3.0-with-autoconf-exception",
            "Giftware",
            "Glide",
            "Glulxe",
            "HPND",
            "HPND-sell-variant",
            "HTMLTIDY",
            "HaskellReport",
            "Hippocratic-2.1",
            "IBM-pibs",
            "ICU",
            "IJG",
            "IPA",
            "IPL-1.0",
            "ISC",
            "ImageMagick",
            "Imlib2",
            "Info-ZIP",
            "Intel",
            "Intel-ACPI",
            "Interbase-1.0",
            "JPNIC",
            "JSON",
            "JasPer-2.0",
            "LAL-1.2",
            "LAL-1.3",
            "LGPL-2.0",
            "LGPL-2.0+",
            "LGPL-2.0-only",
            "LGPL-2.0-or-later",
            "LGPL-2.1",
            "LGPL-2.1+",
            "LGPL-2.1-only",
            "LGPL-2.1-or-later",
            "LGPL-3.0",
            "LGPL-3.0+",
            "LGPL-3.0-only",
            "LGPL-3.0-or-later",
            "LGPLLR",
            "LPL-1.0",
            "LPL-1.02",
            "LPPL-1.0",
            "LPPL-1.1",
            "LPPL-1.2",
            "LPPL-1.3a",
            "LPPL-1.3c",
            "Latex2e",
            "Leptonica",
            "LiLiQ-P-1.1",
            "LiLiQ-R-1.1",
            "LiLiQ-Rplus-1.1",
            "Libpng",
            "Linux-OpenIB",
            "MIT",
            "MIT-0",
            "MIT-CMU",
            "MIT-advertising",
            "MIT-enna",
            "MIT-feh",
            "MIT-open-group",
            "MITNFA",
            "MPL-1.0",
            "MPL-1.1",
            "MPL-2.0",
            "MPL-2.0-no-copyleft-exception",
            "MS-PL",
            "MS-RL",
            "MTLL",
            "MakeIndex",
            "MirOS",
            "Motosoto",
            "MulanPSL-1.0",
            "MulanPSL-2.0",
            "Multics",
            "Mup",
            "NASA-1.3",
            "NBPL-1.0",
            "NCGL-UK-2.0",
            "NCSA",
            "NGPL",
            "NIST-PD",
            "NIST-PD-fallback",
            "NLOD-1.0",
            "NLPL",
            "NOSL",
            "NPL-1.0",
            "NPL-1.1",
            "NPOSL-3.0",
            "NRL",
            "NTP",
            "NTP-0",
            "Naumen",
            "Net-SNMP",
            "NetCDF",
            "Newsletr",
            "Nokia",
            "Noweb",
            "Nunit",
            "O-UDA-1.0",
            "OCCT-PL",
            "OCLC-2.0",
            "ODC-By-1.0",
            "ODbL-1.0",
            "OFL-1.0",
            "OFL-1.0-RFN",
            "OFL-1.0-no-RFN",
            "OFL-1.1",
            "OFL-1.1-RFN",
            "OFL-1.1-no-RFN",
            "OGC-1.0",
            "OGL-Canada-2.0",
            "OGL-UK-1.0",
            "OGL-UK-2.0",
            "OGL-UK-3.0",
            "OGTSL",
            "OLDAP-1.1",
            "OLDAP-1.2",
            "OLDAP-1.3",
            "OLDAP-1.4",
            "OLDAP-2.0",
            "OLDAP-2.0.1",
            "OLDAP-2.1",
            "OLDAP-2.2",
            "OLDAP-2.2.1",
            "OLDAP-2.2.2",
            "OLDAP-2.3",
            "OLDAP-2.4",
            "OLDAP-2.5",
            "OLDAP-2.6",
            "OLDAP-2.7",
            "OLDAP-2.8",
            "OML",
            "OPL-1.0",
            "OSET-PL-2.1",
            "OSL-1.0",
            "OSL-1.1",
            "OSL-2.0",
            "OSL-2.1",
            "OSL-3.0",
            "OpenSSL",
            "PDDL-1.0",
            "PHP-3.0",
            "PHP-3.01",
            "PSF-2.0",
            "Parity-6.0.0",
            "Parity-7.0.0",
            "Plexus",
            "PolyForm-Noncommercial-1.0.0",
            "PolyForm-Small-Business-1.0.0",
            "PostgreSQL",
            "Python-2.0",
            "QPL-1.0",
            "Qhull",
            "RHeCos-1.1",
            "RPL-1.1",
            "RPL-1.5",
            "RPSL-1.0",
            "RSA-MD",
            "RSCPL",
            "Rdisc",
            "Ruby",
            "SAX-PD",
            "SCEA",
            "SGI-B-1.0",
            "SGI-B-1.1",
            "SGI-B-2.0",
            "SHL-0.5",
            "SHL-0.51",
            "SISSL",
            "SISSL-1.2",
            "SMLNJ",
            "SMPPL",
            "SNIA",
            "SPL-1.0",
            "SSH-OpenSSH",
            "SSH-short",
            "SSPL-1.0",
            "SWL",
            "Saxpath",
            "Sendmail",
            "Sendmail-8.23",
            "SimPL-2.0",
            "Sleepycat",
            "Spencer-86",
            "Spencer-94",
            "Spencer-99",
            "StandardML-NJ",
            "SugarCRM-1.1.3",
            "TAPR-OHL-1.0",
            "TCL",
            "TCP-wrappers",
            "TMate",
            "TORQUE-1.1",
            "TOSL",
            "TU-Berlin-1.0",
            "TU-Berlin-2.0",
            "UCL-1.0",
            "UPL-1.0",
            "Unicode-DFS-2015",
            "Unicode-DFS-2016",
            "Unicode-TOU",
            "Unlicense",
            "VOSTROM",
            "VSL-1.0",
            "Vim",
            "W3C",
            "W3C-19980720",
            "W3C-20150513",
            "WTFPL",
            "Watcom-1.0",
            "Wsuipa",
            "X11",
            "XFree86-1.1",
            "XSkat",
            "Xerox",
            "Xnet",
            "YPL-1.0",
            "YPL-1.1",
            "ZPL-1.1",
            "ZPL-2.0",
            "ZPL-2.1",
            "Zed",
            "Zend-2.0",
            "Zimbra-1.3",
            "Zimbra-1.4",
            "Zlib",
            "blessing",
            "bzip2-1.0.5",
            "bzip2-1.0.6",
            "copyleft-next-0.3.0",
            "copyleft-next-0.3.1",
            "curl",
            "diffmark",
            "dvipdfm",
            "eCos-2.0",
            "eGenix",
            "etalab-2.0",
            "gSOAP-1.3b",
            "gnuplot",
            "iMatix",
            "libpng-2.0",
            "libselinux-1.0",
            "libtiff",
            "mpich2",
            "psfrag",
            "psutils",
            "wxWindows",
            "xinetd",
            "xpp",
            "zlib-acknowledgement"
          ]
        ],
        "type": "string"
      },
      "log.LogEntry": {
        "description": "LogEntry represents a single log line",
        "properties": {
          "level": {
            "description": "Level is the log level.\n",
            "type": "string"
          },
          "log": {
            "description": "Log is the log text.\n",
            "type": "string"
          },
          "time": {
            "description": "Time is the log time.\n",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "mitre.Technique": {
        "description": "Technique is the MITRE framework attack technique",
        "enum": [
          [
            "exploitationForPrivilegeEscalation",
            "exploitPublicFacingApplication",
            "applicationExploitRCE",
            "networkServiceScanning",
            "endpointDenialOfService",
            "exfiltrationGeneral",
            "systemNetworkConfigurationDiscovery",
            "unsecuredCredentials",
            "credentialDumping",
            "systemInformationDiscovery",
            "systemNetworkConnectionDiscovery",
            "systemUserDiscovery",
            "accountDiscovery",
            "cloudInstanceMetadataAPI",
            "accessKubeletMainAPI",
            "queryKubeletReadonlyAPI",
            "accessKubernetesAPIServer",
            "softwareDeploymentTools",
            "ingressToolTransfer",
            "lateralToolTransfer",
            "commandAndControlGeneral",
            "resourceHijacking",
            "manInTheMiddle",
            "nativeBinaryExecution",
            "foreignBinaryExecution",
            "createAccount",
            "accountManipulation",
            "abuseElevationControlMechanisms",
            "supplyChainCompromise",
            "obfuscatedFiles",
            "hijackExecutionFlow",
            "impairDefences",
            "scheduledTaskJob",
            "exploitationOfRemoteServices",
            "eventTriggeredExecution",
            "accountAccessRemoval",
            "privilegedContainer",
            "writableVolumes",
            "execIntoContainer",
            "softwareDiscovery",
            "createContainer",
            "kubernetesSecrets",
            "fileAndDirectoryDiscovery",
            "masquerading",
            "webShell",
            "compileAfterDelivery"
          ]
        ],
        "type": "string"
      },
      "prisma.AdoptionAdvisorData": {
        "description": "AdoptionAdvisorData holds the data for Adoption Advisor project",
        "properties": {
          "alert_providers": {
            "description": "AlertProfiles is the number of alert profiles.\n",
            "type": "integer"
          },
          "collections": {
            "description": "Collections is the number of custom created collections.\n",
            "type": "integer"
          },
          "compliance_issues": {
            "$ref": "#/components/schemas/prisma.Distribution"
          },
          "container_rules_stats": {
            "$ref": "#/components/schemas/prisma.ContainerRulesStats"
          },
          "defenders": {
            "$ref": "#/components/schemas/prisma.DefenderStats"
          },
          "discovered_cloud_resources": {
            "$ref": "#/components/schemas/prisma.DiscoveredCloudResources"
          },
          "feature_stats": {
            "$ref": "#/components/schemas/prisma.FeatureStats"
          },
          "rules_stats": {
            "$ref": "#/components/schemas/prisma.RulesStats"
          },
          "runtime_audit_stats": {
            "$ref": "#/components/schemas/prisma.RuntimeAuditStats"
          },
          "scan_stats": {
            "$ref": "#/components/schemas/prisma.ScanStats"
          },
          "vulnerability_stats": {
            "$ref": "#/components/schemas/prisma.VulnerabilityStats"
          }
        },
        "type": "object"
      },
      "prisma.AlertIntegration": {
        "description": "AlertIntegration has the relevant fields for Prisma Cloud defined integrations\nhttps://prisma.pan.dev/api/cloud/cspm/integrations#operation/get-all-integrations",
        "properties": {
          "id": {
            "description": "ID of the integration in Prisma Cloud.\n",
            "type": "string"
          },
          "integrationConfig": {
            "$ref": "#/components/schemas/prisma.IntegrationConfig"
          },
          "integrationType": {
            "description": "IntegrationType is the provider type.\n",
            "type": "string"
          },
          "name": {
            "description": "Name of the integration in Prisma Cloud.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "prisma.ContainerRulesStats": {
        "description": "ContainerRulesStats holds the number of container vulnerability rules per rule type",
        "properties": {
          "compliance": {
            "description": "Compliance the number of custom container compliance rules.\n",
            "type": "integer"
          },
          "runtime": {
            "description": "Runtime is the number of runtime container images rules.\n",
            "type": "integer"
          },
          "vulnerability": {
            "description": "Vulnerability is the number of custom container vulnerability rules.\n",
            "type": "integer"
          },
          "waas": {
            "description": "Waas is the number of container WAAS rules.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "prisma.DefenderStats": {
        "description": "DefenderStats holds the number total defenders per resource",
        "properties": {
          "app_embedded": {
            "description": "AppEmbedded is the number of total app embedded defenders.\n",
            "type": "integer"
          },
          "container": {
            "description": "Container is the number of container total defenders.\n",
            "type": "integer"
          },
          "host": {
            "description": "Host is the number of total host defenders.\n",
            "type": "integer"
          },
          "serverless": {
            "description": "Serverless is the number of total serverless defenders.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "prisma.DiscoveredCloudResources": {
        "description": "DiscoveredCloudResources holds the stats of cloud discovery resources",
        "properties": {
          "protected": {
            "description": "Protected is the total number of protected discovered resources (cloud discovery).\n",
            "type": "integer"
          },
          "total": {
            "description": "Total is the total number of discovered resources (cloud discovery).\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "prisma.Distribution": {
        "description": "Distribution counts the number of vulnerabilities/compliance issues per severity",
        "properties": {
          "critical": {
            "description": ".\n",
            "type": "integer"
          },
          "high": {
            "description": ".\n",
            "type": "integer"
          },
          "low": {
            "description": ".\n",
            "type": "integer"
          },
          "medium": {
            "description": ".\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "prisma.FeatureStats": {
        "description": "FeatureStats holds the Admission Control and Kubernetes audit stats",
        "properties": {
          "access_polices_enabled": {
            "description": "AccessPolicesEnabled represent if Admission Control enabled.\n",
            "type": "boolean"
          },
          "kubernetes_audit_enabled": {
            "description": "KubernetesAuditEnabled represent if Kubernetes audit enabled.\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "prisma.IntegrationConfig": {
        "description": "IntegrationConfig holds the additional configuration data for each integration",
        "properties": {
          "accountId": {
            "description": "SecurityHubAccountID is the AWS account ID.\n",
            "type": "string"
          },
          "regions": {
            "description": "SecurityHubIntegrationRegions holds AWS account available regions.\n",
            "items": {
              "$ref": "#/components/schemas/prisma.SecurityHubIntegrationRegions"
            },
            "type": "array"
          },
          "tables": {
            "description": "ServiceNowIntegrationConfig holds ServiceNow tables info.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "prisma.RulesStats": {
        "description": "RulesStats holds the rules stats per resource type",
        "properties": {
          "agentless": {
            "description": "Agentless is the number of cloud accounts configured for agentless.\n",
            "type": "integer"
          },
          "cloud_discovery": {
            "description": "CloudDiscovery is the number of cloud accounts configured for Cloud Discovery.\n",
            "type": "integer"
          },
          "host_auto_defend": {
            "description": "HostAutoDefend is the number of host auto-defend rules.\n",
            "type": "integer"
          },
          "serverless_radar": {
            "description": "ServerlessRadar is the number of cloud accounts configured for Serverless radar.\n",
            "type": "integer"
          },
          "trusted_images": {
            "description": "TrustedImages is the number of custom trusted images rules.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "prisma.RuntimeAuditStats": {
        "description": "RuntimeAuditStats holds the number of runtime audits per resource",
        "properties": {
          "container": {
            "$ref": "#/components/schemas/prisma.RuntimeStats"
          },
          "function": {
            "$ref": "#/components/schemas/prisma.RuntimeStats"
          },
          "host": {
            "$ref": "#/components/schemas/prisma.RuntimeStats"
          }
        },
        "type": "object"
      },
      "prisma.RuntimeStats": {
        "description": "RuntimeStats are stats for runtime flows (sum of audits per flow)",
        "properties": {
          "filesystem": {
            "description": ".\n",
            "type": "integer"
          },
          "kubernetes": {
            "description": ".\n",
            "type": "integer"
          },
          "network": {
            "description": ".\n",
            "type": "integer"
          },
          "processes": {
            "description": ".\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "prisma.ScanStats": {
        "description": "ScanStats holds the scan stats per resource type",
        "properties": {
          "agentless": {
            "description": "Agentless is the total number of agentless host scan results.\n",
            "type": "integer"
          },
          "ci_scans": {
            "description": "CIScans is the number of image CI scans.\n",
            "type": "integer"
          },
          "functions": {
            "description": "Functions is the number of functions scan results.\n",
            "type": "integer"
          },
          "image_analysis_sandbox": {
            "description": "ImageAnalysisSandbox is the number of sandbox scans.\n",
            "type": "integer"
          },
          "registry": {
            "description": "Registry is the number of registry scan results.\n",
            "type": "integer"
          },
          "vms": {
            "description": "VMs is the number of VM images scan results.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "prisma.SecurityHubIntegrationRegions": {
        "description": "SecurityHubIntegrationRegions holds AWS Security Hub regions info",
        "properties": {
          "apiIdentifier": {
            "description": "ApiIdentifier represents the AWS region.\n",
            "type": "string"
          },
          "name": {
            "description": "Name is the region name.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "prisma.VulnerabilityStats": {
        "description": "VulnerabilityStats holds the number of vulnerabilities per resource",
        "properties": {
          "container": {
            "$ref": "#/components/schemas/prisma.Distribution"
          },
          "function": {
            "$ref": "#/components/schemas/prisma.Distribution"
          },
          "host": {
            "$ref": "#/components/schemas/prisma.Distribution"
          },
          "image": {
            "$ref": "#/components/schemas/prisma.Distribution"
          }
        },
        "type": "object"
      },
      "rbac.PermName": {
        "description": "PermName is a name of permission to a single resource type",
        "enum": [
          [
            "radarsContainers",
            "radarsHosts",
            "radarsServerless",
            "radarsCloud",
            "policyCodeRepos",
            "policyContainers",
            "policyHosts",
            "policyServerless",
            "policyCloud",
            "policyComplianceCustomRules",
            "policyRuntimeContainer",
            "policyRuntimeHosts",
            "policyRuntimeServerless",
            "policyCustomRules",
            "policyWAAS",
            "policyCNNF",
            "policyAccessDocker",
            "policyAccessSecrets",
            "policyAccessKubernetes",
            "monitorVuln",
            "monitorCompliance",
            "monitorCodeRepos",
            "monitorImages",
            "monitorHosts",
            "monitorServerless",
            "monitorCloud",
            "monitorCI",
            "monitorRuntimeContainers",
            "monitorRuntimeHosts",
            "monitorRuntimeServerless",
            "monitorRuntimeIncidents",
            "sandbox",
            "monitorWAAS",
            "monitorCNNF",
            "monitorAccessDocker",
            "monitorAccessKubernetes",
            "systemLogs",
            "manageDefenders",
            "manageAlerts",
            "collections",
            "manageCreds",
            "auth",
            "systemOperations",
            "privilegedOperations",
            "downloads",
            "accessUI",
            "uIEventSubscriber",
            "user",
            "none"
          ]
        ],
        "type": "string"
      },
      "rbac.Permission": {
        "description": "Permission is a named resource permission",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/rbac.PermName"
          },
          "readWrite": {
            "description": "ReadWrite indicates RW or RO permission.\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "rbac.Role": {
        "description": "Role represents the role of a given user/group",
        "properties": {
          "description": {
            "description": "Description is the role's description.\n",
            "type": "string"
          },
          "name": {
            "description": "Name is the role name.\n",
            "type": "string"
          },
          "perms": {
            "description": "Perms are the role resource permissions.\n",
            "items": {
              "$ref": "#/components/schemas/rbac.Permission"
            },
            "type": "array"
          },
          "system": {
            "description": "System indicates predefined immutable system role.\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "runtime.AntiMalwareRule": {
        "description": "AntiMalwareRule represents restrictions/suppression for suspected anti-malware",
        "properties": {
          "allowedProcesses": {
            "description": "AllowedProcesses contains paths of files and processes for which we skip anti-malware checks.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "cryptoMiner": {
            "$ref": "#/components/schemas/runtime.RuleEffect"
          },
          "customFeed": {
            "$ref": "#/components/schemas/runtime.RuleEffect"
          },
          "deniedProcesses": {
            "$ref": "#/components/schemas/runtime.DenyListRule"
          },
          "detectCompilerGeneratedBinary": {
            "description": "DetectCompilerGeneratedBinary represents what happens when a compiler service writes a binary.\n",
            "type": "boolean"
          },
          "encryptedBinaries": {
            "$ref": "#/components/schemas/runtime.RuleEffect"
          },
          "executionFlowHijack": {
            "$ref": "#/components/schemas/runtime.RuleEffect"
          },
          "intelligenceFeed": {
            "$ref": "#/components/schemas/runtime.RuleEffect"
          },
          "reverseShell": {
            "$ref": "#/components/schemas/runtime.RuleEffect"
          },
          "serviceUnknownOriginBinary": {
            "$ref": "#/components/schemas/runtime.RuleEffect"
          },
          "skipSSHTracking": {
            "description": "SkipSSHTracking indicates whether host SSH tracking should be skipped.\n",
            "type": "boolean"
          },
          "suspiciousELFHeaders": {
            "$ref": "#/components/schemas/runtime.RuleEffect"
          },
          "tempFSProc": {
            "$ref": "#/components/schemas/runtime.RuleEffect"
          },
          "userUnknownOriginBinary": {
            "$ref": "#/components/schemas/runtime.RuleEffect"
          },
          "webShell": {
            "$ref": "#/components/schemas/runtime.RuleEffect"
          },
          "wildFireAnalysis": {
            "$ref": "#/components/schemas/runtime.RuleEffect"
          }
        },
        "type": "object"
      },
      "runtime.App": {
        "description": "App represents the applications runtime data",
        "properties": {
          "listeningPorts": {
            "description": "ListeningPorts represents the applications listening ports.\n",
            "items": {
              "$ref": "#/components/schemas/runtime.HostProfileListeningPort"
            },
            "type": "array"
          },
          "name": {
            "description": "Name is the app name.\n",
            "type": "string"
          },
          "outgoingPorts": {
            "description": "OutgoingPorts represents the applications outgoing ports.\n",
            "items": {
              "$ref": "#/components/schemas/runtime.HostProfileOutgoingPort"
            },
            "type": "array"
          },
          "processes": {
            "description": "Processes is a list of the app's descendant processes.\n",
            "items": {
              "$ref": "#/components/schemas/runtime.ProfileProcess"
            },
            "type": "array"
          },
          "startupProcess": {
            "$ref": "#/components/schemas/runtime.ProfileProcess"
          }
        },
        "type": "object"
      },
      "runtime.AppListeningPorts": {
        "description": "AppListeningPorts is an association of an app and list of listening ports",
        "properties": {
          "app": {
            "description": "App is the name of the app.\n",
            "type": "string"
          },
          "portsData": {
            "$ref": "#/components/schemas/common.ProfilePortData"
          }
        },
        "type": "object"
      },
      "runtime.ContainerCapabilities": {
        "description": "ContainerCapabilities are a set of static capabilities for a given container",
        "properties": {
          "ci": {
            "description": "CI indicates the container allowed to write binaries to disk and run them.\n",
            "type": "boolean"
          },
          "cloudMetadata": {
            "description": "CloudMetadata indicates the given container can query cloud metadata api.\n",
            "type": "boolean"
          },
          "dnsCache": {
            "description": "DNSCache are DNS services that are used by all the pods in the cluster.\n",
            "type": "boolean"
          },
          "dynamicDNSQuery": {
            "description": "DynamicDNSQuery indicates capped behavioral dns queries.\n",
            "type": "boolean"
          },
          "dynamicFileCreation": {
            "description": "DynamicFileCreation indicates capped behavioral filesystem paths.\n",
            "type": "boolean"
          },
          "dynamicProcessCreation": {
            "description": "DynamicProcessCreation indicates capped behavioral processes.\n",
            "type": "boolean"
          },
          "k8s": {
            "description": "Kubernetes indicates the given container can perform k8s networking tasks (e.g., contact to api server).\n",
            "type": "boolean"
          },
          "proxy": {
            "description": "Proxy indicates the container can listen on any port and perform multiple outbound connection.\n",
            "type": "boolean"
          },
          "pullImage": {
            "description": "PullImage indicates that the container is allowed pull images (might include files with high entropy).\n",
            "type": "boolean"
          },
          "sshd": {
            "description": "Sshd indicates whether the container can run sshd process.\n",
            "type": "boolean"
          },
          "unpacker": {
            "description": "Unpacker indicates the container is allowed to write shared libraries to disk.\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "runtime.ContainerNetworkRule": {
        "description": "ContainerNetworkRule represents the restrictions/suppression for networking",
        "properties": {
          "blacklistIPs": {
            "description": "Deny-listed IP addresses.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "blacklistListeningPorts": {
            "description": "Deny-listed listening ports.\n",
            "items": {
              "$ref": "#/components/schemas/common.PortRange"
            },
            "type": "array"
          },
          "blacklistOutboundPorts": {
            "description": "Deny-listed outbound ports.\n",
            "items": {
              "$ref": "#/components/schemas/common.PortRange"
            },
            "type": "array"
          },
          "detectPortScan": {
            "description": "Specifies whether port scanning detection is enabled (true) or not (false).\n",
            "type": "boolean"
          },
          "effect": {
            "$ref": "#/components/schemas/runtime.RuleEffect"
          },
          "skipModifiedProc": {
            "description": "Specifies whether Prisma Cloud detects when modified processes perform malicious networking activity.\n",
            "type": "boolean"
          },
          "skipRawSockets": {
            "description": "Specifies whether raw socket detection should be skipped (true) or not (false).\n",
            "type": "boolean"
          },
          "whitelistIPs": {
            "description": "Allow-listed IP addresses.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "whitelistListeningPorts": {
            "description": "Allow-listed listening ports.\n",
            "items": {
              "$ref": "#/components/schemas/common.PortRange"
            },
            "type": "array"
          },
          "whitelistOutboundPorts": {
            "description": "Allow-listed outbound ports.\n",
            "items": {
              "$ref": "#/components/schemas/common.PortRange"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "runtime.ContainerPolicy": {
        "description": "ContainerPolicy represents a runtime policy enforced for a given running resource",
        "properties": {
          "_id": {
            "description": "Internal identifier.\n",
            "type": "string"
          },
          "learningDisabled": {
            "description": "Indicates whether automatic behavioural learning is enabled (true) or not (false).\n",
            "type": "boolean"
          },
          "rules": {
            "description": "Rules in the policy.\n",
            "items": {
              "$ref": "#/components/schemas/runtime.ContainerPolicyRule"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "runtime.ContainerPolicyRule": {
        "description": "ContainerPolicyRule represents a single rule in the runtime policy",
        "properties": {
          "advancedProtection": {
            "description": "Indicates whether advanced protection (e.g., custom or premium feeds for container, added whitelist rules for serverless) is enabled (true) or not (false).\n",
            "type": "boolean"
          },
          "cloudMetadataEnforcement": {
            "description": "Catches containers that access the cloud provider metadata API.\n",
            "type": "boolean"
          },
          "collections": {
            "description": "List of collections. Used to scope the rule.\n",
            "items": {
              "$ref": "#/components/schemas/collection.Collection"
            },
            "type": "array"
          },
          "customRules": {
            "description": "List of custom runtime rules.\n",
            "items": {
              "$ref": "#/components/schemas/customrules.Ref"
            },
            "type": "array"
          },
          "disabled": {
            "description": "Indicates if the rule is currently disabled (true) or not (false).\n",
            "type": "boolean"
          },
          "dns": {
            "$ref": "#/components/schemas/runtime.DNSRule"
          },
          "filesystem": {
            "$ref": "#/components/schemas/runtime.FilesystemRule"
          },
          "kubernetesEnforcement": {
            "description": "Detects containers that attempt to compromise the orchestrator.\n",
            "type": "boolean"
          },
          "modified": {
            "description": "Datetime when the rule was last modified.\n",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "Name of the rule.\n",
            "type": "string"
          },
          "network": {
            "$ref": "#/components/schemas/runtime.ContainerNetworkRule"
          },
          "notes": {
            "description": "Free-form text.\n",
            "type": "string"
          },
          "owner": {
            "description": "User who created or last modified the rule.\n",
            "type": "string"
          },
          "previousName": {
            "description": "Previous name of the rule. Required for rule renaming.\n",
            "type": "string"
          },
          "processes": {
            "$ref": "#/components/schemas/runtime.ProcessesRule"
          },
          "skipExecSessions": {
            "description": "Indicates whether to skip runtime validation for events triggered by docker/kubectl exec.\n",
            "type": "boolean"
          },
          "wildFireAnalysis": {
            "$ref": "#/components/schemas/runtime.RuleEffect"
          }
        },
        "type": "object"
      },
      "runtime.DNSQuery": {
        "description": "DNSQuery is the data of a DNS query",
        "properties": {
          "domainName": {
            "description": "DomainName is the queried domain name.\n",
            "type": "string"
          },
          "domainType": {
            "description": "DomainType is the queried domain type.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "runtime.DNSRule": {
        "description": "DNSRule is the DNS runtime rule",
        "properties": {
          "blacklist": {
            "description": "List of deny-listed domain names (e.g., www.bad-url.com, *.bad-url.com).\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "effect": {
            "$ref": "#/components/schemas/runtime.RuleEffect"
          },
          "whitelist": {
            "description": "List of allow-listed domain names (e.g., *.gmail.com, *.s3.*.amazon.com).\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "runtime.DenyListRule": {
        "description": "DenyListRule represents a rule containing paths of files and processes to alert/prevent and the required effect",
        "properties": {
          "effect": {
            "$ref": "#/components/schemas/runtime.RuleEffect"
          },
          "paths": {
            "description": "Paths are the paths to alert/prevent when an event with one of the paths is triggered.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "runtime.FSFileType": {
        "description": "FSFileType represents the file type",
        "type": "integer"
      },
      "runtime.FileIntegrityRule": {
        "description": "FileIntegrityRule represents a single file integrity monitoring rule",
        "properties": {
          "dir": {
            "description": "Dir indicates that the path is a directory.\n",
            "type": "boolean"
          },
          "exclusions": {
            "description": "Exclusions are filenames that should be ignored while generating audits\nThese filenames may contain a wildcard regex pattern, e.g. foo*.log, *.cache.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "metadata": {
            "description": "Metadata indicates that metadata changes should be monitored (e.g. chmod, chown).\n",
            "type": "boolean"
          },
          "path": {
            "description": "Path is the path to monitor.\n",
            "type": "string"
          },
          "procWhitelist": {
            "description": "ProcWhitelist are the processes to ignore\nFilesystem events caused by these processes DO NOT generate file integrity events.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "read": {
            "description": "Read indicates that reads operations should be monitored.\n",
            "type": "boolean"
          },
          "recursive": {
            "description": "Recursive indicates that monitoring should be recursive.\n",
            "type": "boolean"
          },
          "write": {
            "description": "Write indicates that write operations should be monitored.\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "runtime.FilesystemRule": {
        "description": "FilesystemRule represents restrictions/suppression for filesystem changes",
        "properties": {
          "backdoorFiles": {
            "description": "Monitors files that can create and/or persist backdoors (currently SSH and admin account config files) (true).\n",
            "type": "boolean"
          },
          "blacklist": {
            "description": "List of denied file system path.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "checkNewFiles": {
            "description": "Detects changes to binaries and certificates (true).\n",
            "type": "boolean"
          },
          "effect": {
            "$ref": "#/components/schemas/runtime.RuleEffect"
          },
          "skipEncryptedBinaries": {
            "description": "Indicates that encrypted binaries check should be skipped.\n",
            "type": "boolean"
          },
          "suspiciousELFHeaders": {
            "description": "Indicates whether malware detection based on suspicious ELF headers is enabled.\n",
            "type": "boolean"
          },
          "whitelist": {
            "description": "List of allowed file system path.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "runtime.GeoIP": {
        "description": "GeoIP represents an ip address with it's origin country code",
        "properties": {
          "code": {
            "description": "Code is the country iso code.\n",
            "type": "string"
          },
          "ip": {
            "description": "IP is the ip address.\n",
            "type": "string"
          },
          "modified": {
            "description": "Modified is the last modified time of this entry.\n",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "runtime.HostDNSRule": {
        "description": "HostDNSRule represents a host DNS runtime rule",
        "properties": {
          "allow": {
            "description": "Allow is a list of user-defined domains to skip checks for.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "deny": {
            "description": "Deny is a list of user-defined domains to deny.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "denyListEffect": {
            "$ref": "#/components/schemas/runtime.RuleEffect"
          },
          "intelligenceFeed": {
            "$ref": "#/components/schemas/runtime.RuleEffect"
          }
        },
        "type": "object"
      },
      "runtime.HostNetworkRule": {
        "description": "HostNetworkRule represents the restrictions/suppression for host networking",
        "properties": {
          "allowedOutboundIPs": {
            "description": "AllowedOutboundIPs is a list of IPs to skip checks for.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "customFeed": {
            "$ref": "#/components/schemas/runtime.RuleEffect"
          },
          "deniedListeningPorts": {
            "description": "DeniedListeningPorts is a list of listening ports to deny.\n",
            "items": {
              "$ref": "#/components/schemas/common.PortRange"
            },
            "type": "array"
          },
          "deniedOutboundIPs": {
            "description": "DeniedOutboundIPs is a list of outbound IPs to deny.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "deniedOutboundPorts": {
            "description": "DeniedOutboundPorts is a list of outbound ports to deny.\n",
            "items": {
              "$ref": "#/components/schemas/common.PortRange"
            },
            "type": "array"
          },
          "denyListEffect": {
            "$ref": "#/components/schemas/runtime.RuleEffect"
          },
          "intelligenceFeed": {
            "$ref": "#/components/schemas/runtime.RuleEffect"
          }
        },
        "type": "object"
      },
      "runtime.HostPolicy": {
        "description": "HostPolicy represents a host runtime policy enforced for a given running resource",
        "properties": {
          "_id": {
            "description": "ID is the host runtime policy internal id.\n",
            "type": "string"
          },
          "owner": {
            "description": "Owner is the host runtime policy owner.\n",
            "type": "string"
          },
          "rules": {
            "description": "Rules is the list of host runtime rules.\n",
            "items": {
              "$ref": "#/components/schemas/runtime.HostPolicyRule"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "runtime.HostPolicyRule": {
        "description": "HostPolicyRule represents a single rule in the runtime policy",
        "properties": {
          "antiMalware": {
            "$ref": "#/components/schemas/runtime.AntiMalwareRule"
          },
          "collections": {
            "description": "Collections is a list of collections the rule applies to.\n",
            "items": {
              "$ref": "#/components/schemas/collection.Collection"
            },
            "type": "array"
          },
          "customRules": {
            "description": "CustomRules is a list of custom rules associated with the container runtime policy.\n",
            "items": {
              "$ref": "#/components/schemas/customrules.Ref"
            },
            "type": "array"
          },
          "disabled": {
            "description": "Indicates if the rule is currently disabled (true) or not (false).\n",
            "type": "boolean"
          },
          "dns": {
            "$ref": "#/components/schemas/runtime.HostDNSRule"
          },
          "fileIntegrityRules": {
            "description": "FileIntegrityRules are the file integrity monitoring rules.\n",
            "items": {
              "$ref": "#/components/schemas/runtime.FileIntegrityRule"
            },
            "type": "array"
          },
          "forensic": {
            "$ref": "#/components/schemas/common.HostForensicSettings"
          },
          "logInspectionRules": {
            "description": "LogInspectionRules is a list of log inspection rules.\n",
            "items": {
              "$ref": "#/components/schemas/runtime.LogInspectionRule"
            },
            "type": "array"
          },
          "modified": {
            "description": "Datetime when the rule was last modified.\n",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "Name of the rule.\n",
            "type": "string"
          },
          "network": {
            "$ref": "#/components/schemas/runtime.HostNetworkRule"
          },
          "notes": {
            "description": "Free-form text.\n",
            "type": "string"
          },
          "owner": {
            "description": "User who created or last modified the rule.\n",
            "type": "string"
          },
          "previousName": {
            "description": "Previous name of the rule. Required for rule renaming.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "runtime.HostProfile": {
        "description": "HostProfile represents a host runtime profile",
        "properties": {
          "_id": {
            "description": "ID is the profile ID (hostname).\n",
            "type": "string"
          },
          "accountID": {
            "description": "AccountID is the cloud account ID associated with the profile.\n",
            "type": "string"
          },
          "apps": {
            "description": "Apps are the host's apps metadata.\n",
            "items": {
              "$ref": "#/components/schemas/runtime.App"
            },
            "type": "array"
          },
          "collections": {
            "description": "Collections is a list of collections to which this profile applies.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "created": {
            "description": "Created is the profile creation time.\n",
            "format": "date-time",
            "type": "string"
          },
          "geoip": {
            "$ref": "#/components/schemas/runtime.ProfileNetworkGeoIP"
          },
          "hash": {
            "$ref": "#/components/schemas/common.ProfileHash"
          },
          "labels": {
            "description": "Labels are the labels associated with the profile.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "sshEvents": {
            "description": "SSHEvents represents a list SSH events occurred on the host.\n",
            "items": {
              "$ref": "#/components/schemas/runtime.SSHEvent"
            },
            "type": "array"
          },
          "time": {
            "description": "Time is the last time when this profile was modified.\n",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "runtime.HostProfileListeningPort": {
        "description": "HostProfileListeningPort holds a metadata on listening port stored in host runtime profile",
        "properties": {
          "command": {
            "description": "Command represents the command that triggered the connection.\n",
            "type": "string"
          },
          "modified": {
            "description": "Modified is a timestamp of when the event occurred.\n",
            "format": "date-time",
            "type": "string"
          },
          "port": {
            "description": "Port is the port number.\n",
            "type": "integer"
          },
          "processPath": {
            "description": "ProcessPath represents the path to the process that uses the port.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "runtime.HostProfileOutgoingPort": {
        "description": "HostProfileOutgoingPort holds a metadata on outgoing port stored in host runtime profile",
        "properties": {
          "command": {
            "description": "Command represents the command that triggered the connection.\n",
            "type": "string"
          },
          "country": {
            "description": "Country is the country ISO code for the given IP address.\n",
            "type": "string"
          },
          "ip": {
            "description": "IP is the IP address captured over this port.\n",
            "type": "string"
          },
          "modified": {
            "description": "Modified is a timestamp of when the event occurred.\n",
            "format": "date-time",
            "type": "string"
          },
          "port": {
            "description": "Port is the port number.\n",
            "type": "integer"
          },
          "processPath": {
            "description": "ProcessPath represents the path to the process that uses the port.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "runtime.LogInspectionRule": {
        "description": "LogInspectionRule represents a single log inspection rule",
        "properties": {
          "path": {
            "description": "Path is the log path.\n",
            "type": "string"
          },
          "regex": {
            "description": "Regex are the regular expressions associated with the rule if it is a custom one.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "runtime.ProcessesRule": {
        "description": "ProcessesRule represents restrictions/suppression for running processes",
        "properties": {
          "blacklist": {
            "description": "List of processes to deny.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "blockAllBinaries": {
            "description": "Indicates that all processes are blocked except the main process.\n",
            "type": "boolean"
          },
          "checkCryptoMiners": {
            "description": "Detect crypto miners.\n",
            "type": "boolean"
          },
          "checkLateralMovement": {
            "description": "Indicates whether dectection of processes that can be used for lateral movement exploits is enabled.\n",
            "type": "boolean"
          },
          "checkNewBinaries": {
            "description": "Indicates whether binaries which do not belong to the original image are allowed to run.\n",
            "type": "boolean"
          },
          "checkParentChild": {
            "description": "Indicates whether checking for parent child relationship when comparing spawned processes in the model is enabled.\n",
            "type": "boolean"
          },
          "checkSuidBinaries": {
            "description": "Indicates whether check for process elevating privileges is enabled (SUID bit).\n",
            "type": "boolean"
          },
          "effect": {
            "$ref": "#/components/schemas/runtime.RuleEffect"
          },
          "skipModified": {
            "description": "Indicates whether to trigger audits/incidents when a modified proc is spawned.\n",
            "type": "boolean"
          },
          "skipReverseShell": {
            "description": "Indicates whether reverse shell detection is disabled.\n",
            "type": "boolean"
          },
          "whitelist": {
            "description": "List of processes to allow.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "runtime.ProfileFilesystem": {
        "description": "ProfileFilesystem defines the filesystem features profile",
        "properties": {
          "behavioral": {
            "description": "Behavioral is filesystem data learned from behavioral analysis.\n",
            "items": {
              "$ref": "#/components/schemas/runtime.ProfileFilesystemPath"
            },
            "type": "array"
          },
          "static": {
            "description": "Static is filesystem data learned from static analysis.\n",
            "items": {
              "$ref": "#/components/schemas/runtime.ProfileFilesystemPath"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "runtime.ProfileFilesystemPath": {
        "description": "ProfileFilesystemPath represents the filesystem static data",
        "properties": {
          "mount": {
            "description": "Mount indicates whether the given folder is a mount.\n",
            "type": "boolean"
          },
          "path": {
            "description": "Path is the file path.\n",
            "type": "string"
          },
          "process": {
            "description": "Process is the process that accessed the file.\n",
            "type": "string"
          },
          "time": {
            "description": "Time is the time in which the file was added.\n",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "runtime.ProfileNetwork": {
        "description": "ProfileNetwork represents networking data that is learned",
        "properties": {
          "behavioral": {
            "$ref": "#/components/schemas/runtime.ProfileNetworkBehavioral"
          },
          "geoip": {
            "$ref": "#/components/schemas/runtime.ProfileNetworkGeoIP"
          },
          "static": {
            "$ref": "#/components/schemas/runtime.ProfileNetworkStatic"
          }
        },
        "type": "object"
      },
      "runtime.ProfileNetworkBehavioral": {
        "description": "ProfileNetworkBehavioral represents the behavioral data learned for networking",
        "properties": {
          "dnsQueries": {
            "description": "DNSQueries is the learned DNS queries.\n",
            "items": {
              "$ref": "#/components/schemas/runtime.DNSQuery"
            },
            "type": "array"
          },
          "listeningPorts": {
            "description": "Listening is the learned listening ports.\n",
            "items": {
              "$ref": "#/components/schemas/runtime.AppListeningPorts"
            },
            "type": "array"
          },
          "outboundPorts": {
            "$ref": "#/components/schemas/common.ProfilePortData"
          }
        },
        "type": "object"
      },
      "runtime.ProfileNetworkGeoIP": {
        "description": "ProfileNetworkGeoIP represents a cache of last ip-country pairs attached to each profile",
        "properties": {
          "countries": {
            "description": "Countries is a list of ip addresses with their corresponding country codes.\n",
            "items": {
              "$ref": "#/components/schemas/runtime.GeoIP"
            },
            "type": "array"
          },
          "modified": {
            "description": "Modified is the last modified time of the cache.\n",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "runtime.ProfileNetworkStatic": {
        "description": "ProfileNetworkStatic represent the static section of the networking profile",
        "properties": {
          "listeningPorts": {
            "description": "Listening are the listening ports learned by static analysis.\n",
            "items": {
              "$ref": "#/components/schemas/runtime.AppListeningPorts"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "runtime.ProfileProcess": {
        "description": "ProfileProcess represents a single process data",
        "properties": {
          "command": {
            "description": "Command is the executed command.\n",
            "type": "string"
          },
          "interactive": {
            "description": "Interactive indicates whether the process belongs to an interactive session.\n",
            "type": "boolean"
          },
          "md5": {
            "description": "MD5 is the process binary MD5 sum.\n",
            "type": "string"
          },
          "modified": {
            "description": "Modified indicates the process binary was modified after the container has started.\n",
            "type": "boolean"
          },
          "path": {
            "description": "Path is the process binary path.\n",
            "type": "string"
          },
          "ppath": {
            "description": "PPath is the parent process path.\n",
            "type": "string"
          },
          "time": {
            "description": "Time is the time in which the process was added. If the process was modified, Time is the modification time.\n",
            "format": "date-time",
            "type": "string"
          },
          "user": {
            "description": "User represents the username that started the process.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "runtime.ProfileProcesses": {
        "description": "ProfileProcesses represents the process data that is learned for a specific image",
        "properties": {
          "behavioral": {
            "description": "Behavioral are process details learned from behavioral analysis.\n",
            "items": {
              "$ref": "#/components/schemas/runtime.ProfileProcess"
            },
            "type": "array"
          },
          "static": {
            "description": "Static are process details learned from static analysis.\n",
            "items": {
              "$ref": "#/components/schemas/runtime.ProfileProcess"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "runtime.RuleEffect": {
        "description": "RuleEffect is the effect that will be used in the runtime rule",
        "enum": [
          [
            "block",
            "prevent",
            "alert",
            "disable"
          ]
        ],
        "type": "string"
      },
      "runtime.SSHEvent": {
        "description": "SSHEvent represents an SSH event data",
        "properties": {
          "command": {
            "description": "Command is the executed command.\n",
            "type": "string"
          },
          "country": {
            "description": "Country represents the SSH client's origin country.\n",
            "type": "string"
          },
          "interactive": {
            "description": "Interactive indicates whether the process belongs to an interactive session.\n",
            "type": "boolean"
          },
          "ip": {
            "description": "IP address represents the connection client IP address.\n",
            "type": "integer"
          },
          "loginTime": {
            "description": "LoginTime represents the SSH login time.\n",
            "format": "int64",
            "type": "integer"
          },
          "md5": {
            "description": "MD5 is the process binary MD5 sum.\n",
            "type": "string"
          },
          "modified": {
            "description": "Modified indicates the process binary was modified after the container has started.\n",
            "type": "boolean"
          },
          "path": {
            "description": "Path is the process binary path.\n",
            "type": "string"
          },
          "ppath": {
            "description": "PPath is the parent process path.\n",
            "type": "string"
          },
          "time": {
            "description": "Time is the time in which the process was added. If the process was modified, Time is the modification time.\n",
            "format": "date-time",
            "type": "string"
          },
          "user": {
            "description": "User represents the username that started the process.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "runtime.SecretScrubbingSpec": {
        "description": "SecretScrubbingSpec defined a single runtime secret scrubbing specification",
        "properties": {
          "disabled": {
            "description": "Indicates if the rule is currently disabled (true) or not (false).\n",
            "type": "boolean"
          },
          "modified": {
            "description": "Datetime when the rule was last modified.\n",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "Name of the rule.\n",
            "type": "string"
          },
          "notes": {
            "description": "Free-form text.\n",
            "type": "string"
          },
          "owner": {
            "description": "User who created or last modified the rule.\n",
            "type": "string"
          },
          "pattern": {
            "description": "Pattern is the regex pattern to mask sensitive data.\n",
            "type": "string"
          },
          "placeholder": {
            "description": "Placeholder is the placeholder text to replace the matched field content.\n",
            "type": "string"
          },
          "previousName": {
            "description": "Previous name of the rule. Required for rule renaming.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "sandbox.ConnectionEvent": {
        "description": "ConnectionEvent represents a network connection event",
        "properties": {
          "countryCode": {
            "description": "CountryCode is the country code for the network IP.\n",
            "type": "string"
          },
          "ip": {
            "description": "IP is the network IP.\n",
            "type": "string"
          },
          "port": {
            "description": "Port is the network port.\n",
            "type": "integer"
          },
          "process": {
            "$ref": "#/components/schemas/sandbox.ProcessEvent"
          },
          "protocol": {
            "description": "Protocol is the transport layer protocol (UDP / TCP).\n",
            "type": "string"
          },
          "time": {
            "description": "Time is the event time.\n",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "sandbox.DNSQueryEvent": {
        "description": "DNSQueryEvent represents a DNS query event with it's connection details",
        "properties": {
          "countryCode": {
            "description": "CountryCode is the country code for the network IP.\n",
            "type": "string"
          },
          "domainName": {
            "description": "DomainName is the domain name for a DNS query.\n",
            "type": "string"
          },
          "domainType": {
            "description": "DomainType is the domain type for a DNS query.\n",
            "type": "string"
          },
          "ip": {
            "description": "IP is the network IP.\n",
            "type": "string"
          },
          "process": {
            "$ref": "#/components/schemas/sandbox.ProcessEvent"
          },
          "time": {
            "description": "Time is the event time.\n",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "sandbox.Event": {
        "description": "Event is a single event in a chain that lead to finding detection",
        "properties": {
          "description": {
            "description": "Description describes what happened in the event.\n",
            "type": "string"
          },
          "time": {
            "description": "Time is the time of event detection.\n",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "sandbox.FilesystemAccessType": {
        "description": "FilesystemAccessType represents a type of accessing a file",
        "enum": [
          [
            "open",
            "modify",
            "create"
          ]
        ],
        "type": "string"
      },
      "sandbox.FilesystemEvent": {
        "description": "FilesystemEvent represents a filesystem event during sandbox scan",
        "properties": {
          "accessType": {
            "$ref": "#/components/schemas/sandbox.FilesystemAccessType"
          },
          "path": {
            "description": "Path is the file path.\n",
            "type": "string"
          },
          "process": {
            "$ref": "#/components/schemas/sandbox.ProcessEvent"
          },
          "time": {
            "description": "Time is the event time.\n",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "sandbox.Finding": {
        "description": "Finding represents a finding detected during sandbox scan",
        "properties": {
          "description": {
            "description": "Description is the finding description.\n",
            "type": "string"
          },
          "events": {
            "description": "Events are the events that lead to the finding detection.\n",
            "items": {
              "$ref": "#/components/schemas/sandbox.Event"
            },
            "type": "array"
          },
          "severity": {
            "$ref": "#/components/schemas/sandbox.FindingSeverity"
          },
          "time": {
            "description": "Time is the detection time (time of triggering event).\n",
            "format": "date-time",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/sandbox.FindingType"
          }
        },
        "type": "object"
      },
      "sandbox.FindingSeverity": {
        "description": "FindingSeverity represents a finding severity level",
        "enum": [
          [
            "critical",
            "high",
            "medium",
            "low"
          ]
        ],
        "type": "string"
      },
      "sandbox.FindingType": {
        "description": "FindingType represents a unique sandbox-detected finding type",
        "enum": [
          [
            "dropper",
            "modifiedBinary",
            "executableCreation",
            "filelessExecutableCreation",
            "wildFireMalware",
            "verticalPortScan",
            "cryptoMiner",
            "suspiciousELFHeader",
            "kernelModule",
            "modifiedBinaryExecution",
            "filelessExecution"
          ]
        ],
        "type": "string"
      },
      "sandbox.ListeningEvent": {
        "description": "ListeningEvent represents a network listening event",
        "properties": {
          "port": {
            "description": "Port is the network port.\n",
            "type": "integer"
          },
          "process": {
            "$ref": "#/components/schemas/sandbox.ProcessEvent"
          },
          "time": {
            "description": "Time is the event time.\n",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "sandbox.ProcessEvent": {
        "description": "ProcessEvent represents a process event during sandbox scan",
        "properties": {
          "command": {
            "description": "Command is the command line.\n",
            "type": "string"
          },
          "md5": {
            "description": "MD5 is the md5 hash for the process binary.\n",
            "type": "string"
          },
          "parent": {
            "$ref": "#/components/schemas/sandbox.ProcessInfo"
          },
          "path": {
            "description": "Path is the binary path.\n",
            "type": "string"
          },
          "time": {
            "description": "Time is the process start time.\n",
            "format": "date-time",
            "type": "string"
          },
          "user": {
            "description": "User is the username/id.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "sandbox.ProcessInfo": {
        "description": "ProcessInfo holds process information",
        "properties": {
          "command": {
            "description": "Command is the command line.\n",
            "type": "string"
          },
          "md5": {
            "description": "MD5 is the md5 hash for the process binary.\n",
            "type": "string"
          },
          "path": {
            "description": "Path is the binary path.\n",
            "type": "string"
          },
          "time": {
            "description": "Time is the process start time.\n",
            "format": "date-time",
            "type": "string"
          },
          "user": {
            "description": "User is the username/id.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "sandbox.ScanResult": {
        "description": "ScanResult represents sandbox scan results",
        "properties": {
          "_id": {
            "description": "ID is a unique scan identifier.\n",
            "type": "string"
          },
          "collections": {
            "description": "Collections to which this result applies.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "connection": {
            "description": "Connection is a list of connection events detected during this scan.\n",
            "items": {
              "$ref": "#/components/schemas/sandbox.ConnectionEvent"
            },
            "type": "array"
          },
          "dns": {
            "description": "DNS is a list of DNS queries detected during this scan.\n",
            "items": {
              "$ref": "#/components/schemas/sandbox.DNSQueryEvent"
            },
            "type": "array"
          },
          "entrypoint": {
            "description": "Entrypoint is the command executed in the sandbox scan.\n",
            "type": "string"
          },
          "filesystem": {
            "description": "Filesystem is a list of filesystem events detected during this scan.\n",
            "items": {
              "$ref": "#/components/schemas/sandbox.FilesystemEvent"
            },
            "type": "array"
          },
          "findings": {
            "description": "Findings are the detected findings during scan.\n",
            "items": {
              "$ref": "#/components/schemas/sandbox.Finding"
            },
            "type": "array"
          },
          "image": {
            "$ref": "#/components/schemas/shared.ImageInfo"
          },
          "imageName": {
            "description": "ImageName is the image name (e.g. registry/repo:tag).\n",
            "type": "string"
          },
          "listening": {
            "description": "Listening is a list of listening events detected during this scan.\n",
            "items": {
              "$ref": "#/components/schemas/sandbox.ListeningEvent"
            },
            "type": "array"
          },
          "pass": {
            "description": "Pass indicates if the scan passed or failed.\n",
            "type": "boolean"
          },
          "procs": {
            "description": "Procs are the different detected process during this scan.\n",
            "items": {
              "$ref": "#/components/schemas/sandbox.ProcessEvent"
            },
            "type": "array"
          },
          "riskScore": {
            "description": "RiskScore is the weighted total risk score.\n",
            "format": "double",
            "type": "number"
          },
          "scanDuration": {
            "description": "ScanDuration is the provided scan duration in nanoseconds.\n",
            "format": "int64",
            "type": "integer"
          },
          "scanTime": {
            "description": "Start is the scan start time.\n",
            "format": "date-time",
            "type": "string"
          },
          "suspiciousFiles": {
            "description": "SuspiciousFiles are suspicious files detected during scan.\n",
            "items": {
              "$ref": "#/components/schemas/sandbox.SuspiciousFile"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "sandbox.SuspiciousFile": {
        "description": "SuspiciousFile represents a suspicious file",
        "properties": {
          "containerPath": {
            "description": "ContainerPath is the path of the file in the running container.\n",
            "type": "string"
          },
          "created": {
            "description": "Created indicates if the file was created during runtime.\n",
            "type": "boolean"
          },
          "md5": {
            "description": "MD5 is the file MD5 hash.\n",
            "type": "string"
          },
          "path": {
            "description": "Path is the path to the copy of the file.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "serverless.ActionResources": {
        "description": "ActionResources is a single action resources",
        "properties": {
          "resources": {
            "description": "Resources are the resources granted to the action.\n",
            "items": {
              "$ref": "#/components/schemas/serverless.Resource"
            },
            "type": "array"
          },
          "serviceAPI": {
            "$ref": "#/components/schemas/serverless.ServiceAPI"
          }
        },
        "type": "object"
      },
      "serverless.AssociatedVersion": {
        "description": "AssociatedVersion is a single function version associated with the alias",
        "properties": {
          "version": {
            "description": "Version is the function version.\n",
            "type": "string"
          },
          "weight": {
            "description": "Weight is the possibility that the function will be called when triggering the alias.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "serverless.Condition": {
        "description": "Condition contains limitations on resources, such as a specific prefix",
        "properties": {
          "conditions": {
            "description": "Conditions contain the limitations.\n",
            "items": {
              "$ref": "#/components/schemas/shared.KeyValues"
            },
            "type": "array"
          },
          "name": {
            "description": "Condition in AWS such as: StringLike, StringNotLike, StringEquals, StringNotEquals, StringEqualsIgnoreCase, StringNotEqualsIgnoreCase, ForAllValues:StringLike,...\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "serverless.FunctionInfo": {
        "description": "FunctionInfo contains function information collected during function scan",
        "properties": {
          "Secrets": {
            "description": "Secrets are paths to embedded secrets inside the image\nNote: capital letter JSON annotation is kept to avoid converting all images for backward-compatibility support.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "_id": {
            "description": "ID of the function.\n",
            "type": "string"
          },
          "accountID": {
            "description": "Cloud account ID.\n",
            "type": "string"
          },
          "allCompliance": {
            "$ref": "#/components/schemas/vuln.AllCompliance"
          },
          "applicationName": {
            "description": "Name of the application with which the function is associated.\n",
            "type": "string"
          },
          "applications": {
            "description": "Products in the image.\n",
            "items": {
              "$ref": "#/components/schemas/vuln.Application"
            },
            "type": "array"
          },
          "architecture": {
            "description": "Architecture that the function supports.\n",
            "type": "string"
          },
          "baseImage": {
            "description": "Image\u2019s base image name. Used when filtering the vulnerabilities by base images.\n",
            "type": "string"
          },
          "binaries": {
            "description": "Binaries in the image.\n",
            "items": {
              "$ref": "#/components/schemas/shared.Binary"
            },
            "type": "array"
          },
          "cloudControllerAddress": {
            "description": "Address of the TAS cloud controller API.\n",
            "type": "string"
          },
          "cloudMetadata": {
            "$ref": "#/components/schemas/common.CloudMetadata"
          },
          "clusters": {
            "description": "Cluster names.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "collections": {
            "description": "Matched function collections.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "complianceDistribution": {
            "$ref": "#/components/schemas/vuln.Distribution"
          },
          "complianceIssues": {
            "description": "All the compliance issues.\n",
            "items": {
              "$ref": "#/components/schemas/vuln.Vulnerability"
            },
            "type": "array"
          },
          "complianceIssuesCount": {
            "description": "Number of compliance issues.\n",
            "type": "integer"
          },
          "complianceRiskScore": {
            "description": "Compliance risk score for the image.\n",
            "format": "float",
            "type": "number"
          },
          "creationTime": {
            "description": "Date/time when the image was created.\n",
            "format": "date-time",
            "type": "string"
          },
          "defended": {
            "description": "Indicates status of runtime defense. Covers both manually and automatically deployed function defense.\n",
            "type": "boolean"
          },
          "defenderLayerARN": {
            "description": "Prisma Defender Layer ARN, if it exists.\n",
            "type": "string"
          },
          "description": {
            "description": "User-provided description of the function.\n",
            "type": "string"
          },
          "distro": {
            "description": "Full name of the distribution.\n",
            "type": "string"
          },
          "ecsClusterName": {
            "description": "ECS cluster name.\n",
            "type": "string"
          },
          "envvars": {
            "description": "Function environment variables.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "err": {
            "description": "Description of an error that occurred during the scan.\n",
            "type": "string"
          },
          "externalLabels": {
            "description": "Kubernetes external labels of all containers running this image.\n",
            "items": {
              "$ref": "#/components/schemas/common.ExternalLabel"
            },
            "type": "array"
          },
          "files": {
            "description": "Files in the container.\n",
            "items": {
              "$ref": "#/components/schemas/shared.FileDetails"
            },
            "type": "array"
          },
          "firstScanTime": {
            "description": "Date/time when this image was first scanned (preserved during version updates).\n",
            "format": "date-time",
            "type": "string"
          },
          "functionLayers": {
            "description": "Layer ARNs used by this function.\n",
            "items": {
              "$ref": "#/components/schemas/serverless.LayerInfo"
            },
            "type": "array"
          },
          "functionTags": {
            "description": "Cloud provider metadata tags.\n",
            "items": {
              "$ref": "#/components/schemas/common.ExternalLabel"
            },
            "type": "array"
          },
          "handler": {
            "description": "Handler is the function handler.\n",
            "type": "string"
          },
          "hash": {
            "description": "Hash of the function.\n",
            "type": "string"
          },
          "history": {
            "description": "Docker image history.\n",
            "items": {
              "$ref": "#/components/schemas/shared.ImageHistory"
            },
            "type": "array"
          },
          "hostDevices": {
            "description": "Map from host network device name to IP address.\n",
            "items": {
              "$ref": "#/components/schemas/common.NetworkDeviceIP"
            },
            "type": "array"
          },
          "hostname": {
            "description": "Hostname of the scanner.\n",
            "type": "string"
          },
          "id": {
            "description": "Image ID.\n",
            "type": "string"
          },
          "image": {
            "$ref": "#/components/schemas/shared.Image"
          },
          "installedProducts": {
            "$ref": "#/components/schemas/shared.InstalledProducts"
          },
          "invocations": {
            "description": "Invocations is the function invocation count.\n",
            "format": "double",
            "type": "number"
          },
          "isARM64": {
            "description": "IsARM64 indicates if the architecture of the image is aarch64.\n",
            "type": "boolean"
          },
          "k8sClusterAddr": {
            "description": "Endpoint of the Kubernetes API server.\n",
            "type": "string"
          },
          "labels": {
            "description": "Image labels.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "lastModified": {
            "description": "Date/time when the function was last modified.\n",
            "format": "date-time",
            "type": "string"
          },
          "layers": {
            "description": "Image's filesystem layers. Each layer is a SHA256 digest of the filesystem diff\nSee: https://windsock.io/explaining-docker-image-ids/.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "memory": {
            "description": "Memory size, in MB, configured for the function.\n",
            "format": "int64",
            "type": "integer"
          },
          "missingDistroVulnCoverage": {
            "description": "Indicates if the image OS is covered in the IS (true) or not (false).\n",
            "type": "boolean"
          },
          "name": {
            "description": "Name of the function.\n",
            "type": "string"
          },
          "namespaces": {
            "description": "k8s namespaces of all the containers running this image.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "osDistro": {
            "description": "Name of the OS distribution.\n",
            "type": "string"
          },
          "osDistroRelease": {
            "description": "OS distribution release.\n",
            "type": "string"
          },
          "osDistroVersion": {
            "description": "OS distribution version.\n",
            "type": "string"
          },
          "packageManager": {
            "description": "Indicates if the package manager is installed for the OS.\n",
            "type": "boolean"
          },
          "packages": {
            "description": "Packages which exist in the image.\n",
            "items": {
              "$ref": "#/components/schemas/shared.Packages"
            },
            "type": "array"
          },
          "platform": {
            "description": "Platform is the function OS.\n",
            "type": "string"
          },
          "provider": {
            "$ref": "#/components/schemas/common.CloudProvider"
          },
          "region": {
            "description": "Function's region.\n",
            "type": "string"
          },
          "registryNamespace": {
            "description": "IBM cloud namespace to which the image belongs.\n",
            "type": "string"
          },
          "repoDigests": {
            "description": "Digests of the image. Used for content trust (notary). Has one digest per tag.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "repoTag": {
            "$ref": "#/components/schemas/shared.ImageTag"
          },
          "resourceGroupName": {
            "description": "Name of the resource group to which the resource belongs (only for Azure).\n",
            "type": "string"
          },
          "rhelRepos": {
            "description": "RhelRepositories are the (RPM) repositories IDs from which the packages in this image were installed\nUsed for matching vulnerabilities by Red Hat CPEs.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "riskFactors": {
            "$ref": "#/components/schemas/vuln.RiskFactors"
          },
          "role": {
            "description": "AWS execution role.\n",
            "type": "string"
          },
          "runtime": {
            "description": "Runtime environment for the function (e.g., nodejs).\n",
            "type": "string"
          },
          "scanTime": {
            "description": "Date/time when the scan of the function was performed.\n",
            "format": "date-time",
            "type": "string"
          },
          "scanVersion": {
            "description": "Defender version that published the image.\n",
            "type": "string"
          },
          "scannerVersion": {
            "description": "Scanner version.\n",
            "type": "string"
          },
          "startupBinaries": {
            "description": "Binaries which are expected to run when the container is created from this image.\n",
            "items": {
              "$ref": "#/components/schemas/shared.Binary"
            },
            "type": "array"
          },
          "status": {
            "description": "Status of the function (e.g., running).\n",
            "type": "string"
          },
          "tags": {
            "description": "Tags associated with the given image.\n",
            "items": {
              "$ref": "#/components/schemas/shared.ImageTag"
            },
            "type": "array"
          },
          "timeout": {
            "description": "Function execution time at which the function will be terminated.\n",
            "format": "int64",
            "type": "integer"
          },
          "topLayer": {
            "description": "SHA256 of the image's last layer that is the last element of the Layers field.\n",
            "type": "string"
          },
          "twistlockImage": {
            "description": "Indicates if the image is a Twistlock image (true) or not (false).\n",
            "type": "boolean"
          },
          "type": {
            "$ref": "#/components/schemas/shared.ScanType"
          },
          "version": {
            "description": "Version of the function.\n",
            "type": "string"
          },
          "vulnerabilities": {
            "description": "CVE vulnerabilities of the image.\n",
            "items": {
              "$ref": "#/components/schemas/vuln.Vulnerability"
            },
            "type": "array"
          },
          "vulnerabilitiesCount": {
            "description": "Total number of vulnerabilities.\n",
            "type": "integer"
          },
          "vulnerabilityDistribution": {
            "$ref": "#/components/schemas/vuln.Distribution"
          },
          "vulnerabilityRiskScore": {
            "description": "Image's CVE risk score.\n",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "serverless.LayerInfo": {
        "description": "LayerInfo contains information about a lambda layer",
        "properties": {
          "id": {
            "description": "ID of the layer.\n",
            "type": "string"
          },
          "name": {
            "description": "Name of the layer.\n",
            "type": "string"
          },
          "version": {
            "description": "Version of the layer.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "serverless.Permissions": {
        "description": "Permissions contain service function permissions",
        "properties": {
          "actions": {
            "description": "Actions is API actions of the service that the function has access to.\n",
            "items": {
              "$ref": "#/components/schemas/serverless.ActionResources"
            },
            "type": "array"
          },
          "service": {
            "description": "Service is the service name.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "serverless.RadarData": {
        "description": "RadarData represent all data relevant to the serverless radar",
        "properties": {
          "serverlessRadar": {
            "description": "ServerlessRadar holds all radar entities.\n",
            "items": {
              "$ref": "#/components/schemas/serverless.RadarEntity"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "serverless.RadarEntity": {
        "description": "RadarEntity is the extended serverless radar entity",
        "properties": {
          "_id": {
            "description": "ID is unique identifier of the function (for AWS - ARN).\n",
            "type": "string"
          },
          "accountID": {
            "description": "AccountID is the cloud account ID.\n",
            "type": "string"
          },
          "alias": {
            "description": "Alias states that the current entity is an alias of the function.\n",
            "type": "boolean"
          },
          "applicationName": {
            "description": "ApplicationName is the name of the application the function is associated with.\n",
            "type": "string"
          },
          "associatedVersions": {
            "description": "AssociatedVersions contain the alias associated versions, or empty if the entity isn't an alias.\n",
            "items": {
              "$ref": "#/components/schemas/serverless.AssociatedVersion"
            },
            "type": "array"
          },
          "collections": {
            "description": "Collections are the matched function collections.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "complianceDistribution": {
            "$ref": "#/components/schemas/vuln.Distribution"
          },
          "credentialId": {
            "description": "CredentialID is the id reference of the credential used.\n",
            "type": "string"
          },
          "defended": {
            "description": "Defended denotes weather the function is defended by a serverless defender.\n",
            "type": "boolean"
          },
          "description": {
            "description": "Description is the user provided description of the function.\n",
            "type": "string"
          },
          "incidentCount": {
            "description": "IncidentCount is the number of incidents.\n",
            "type": "integer"
          },
          "invocations": {
            "description": "Invocations is the function invocation count.\n",
            "format": "double",
            "type": "number"
          },
          "lastModified": {
            "description": "LastModified is the modification time of the function.\n",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "Name is the name of the function.\n",
            "type": "string"
          },
          "networkCount": {
            "description": "NetworkCount contain the runtime network events count.\n",
            "type": "integer"
          },
          "permissions": {
            "description": "Permissions are the function permissions.\n",
            "items": {
              "$ref": "#/components/schemas/serverless.Permissions"
            },
            "type": "array"
          },
          "permissionsBoundary": {
            "description": "PermissionsBoundary are limitations of the permissions, acting as AND.\n",
            "items": {
              "$ref": "#/components/schemas/serverless.Permissions"
            },
            "type": "array"
          },
          "processesCount": {
            "description": "ProcessesCount contain the runtime processes events count.\n",
            "type": "integer"
          },
          "provider": {
            "$ref": "#/components/schemas/common.CloudProvider"
          },
          "region": {
            "description": "Region is the region that was scanned, for example: GCP - \"us-east-1\", Azure - \"westus\".\n",
            "type": "string"
          },
          "runtime": {
            "description": "Runtime is runtime environment for the function, i.e. nodejs.\n",
            "type": "string"
          },
          "scanned": {
            "description": "Scanned indicates if the function was scanned for vulnerabilities and compliance.\n",
            "type": "boolean"
          },
          "tags": {
            "description": "Tags are the cloud provider metadata tags.\n",
            "items": {
              "$ref": "#/components/schemas/common.ExternalLabel"
            },
            "type": "array"
          },
          "triggers": {
            "description": "Triggers contain invocation paths for functions.\n",
            "items": {
              "$ref": "#/components/schemas/serverless.Triggers"
            },
            "type": "array"
          },
          "version": {
            "description": "Version is the version of the function, or the alias name if it's an alias.\n",
            "type": "string"
          },
          "vulnerabilityDistribution": {
            "$ref": "#/components/schemas/vuln.Distribution"
          }
        },
        "type": "object"
      },
      "serverless.RadarFilter": {
        "description": "RadarFilter contains filter options for serverless radar entities",
        "properties": {
          "credentials": {
            "description": "Credentials are cloud provider credential ID's with discovered entities.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "provider": {
            "$ref": "#/components/schemas/common.CloudProvider"
          },
          "regions": {
            "description": "Regions are cloud provider regions with discovered entities.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "serverless.Resource": {
        "description": "Resource is a single action resources",
        "properties": {
          "allow": {
            "description": "Allow states if the resource is allowed or denied.\n",
            "type": "boolean"
          },
          "condition": {
            "description": "Conditions contain limitations on resources, such as a specific prefix.\n",
            "items": {
              "$ref": "#/components/schemas/serverless.Condition"
            },
            "type": "array"
          },
          "name": {
            "description": "Name is the resource name.\n",
            "type": "string"
          },
          "negate": {
            "description": "Negate indicates that the policy apply to all except the given resource.\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "serverless.ServiceAPI": {
        "description": "ServiceAPI describes a service API",
        "properties": {
          "api": {
            "description": "API is the service API.\n",
            "type": "string"
          },
          "negate": {
            "description": "Negate indicates the policy apply to all APIs except the given API.\n",
            "type": "boolean"
          },
          "service": {
            "description": "Service is the AWS service.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "serverless.Trigger": {
        "description": "Trigger contains function triggers",
        "properties": {
          "properties": {
            "description": "Properties are the trigger properties. There may be multiple values per key, for example AWS S3 event types: ObjectCreatedByPost, ObjectCreatedByCopy, ObjectCreatedByPut.\n",
            "items": {
              "$ref": "#/components/schemas/shared.KeyValues"
            },
            "type": "array"
          },
          "sourceID": {
            "description": "SourceID is the id of the service instance that caused the trigger. For example AWS S3 bucket ARN, AWS apigateway ARN, etc.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "serverless.Triggers": {
        "description": "Triggers contain a service function triggers",
        "properties": {
          "service": {
            "description": "Service is the service name.\n",
            "type": "string"
          },
          "triggers": {
            "description": "Triggers are the function invocation paths from the service.\n",
            "items": {
              "$ref": "#/components/schemas/serverless.Trigger"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "shared.ActivityType": {
        "description": "ActivityType is the type of user activity",
        "enum": [
          [
            "app restart",
            "app install",
            "app modified",
            "cron modified",
            "system update",
            "system reboot",
            "source modified",
            "source added",
            "iptables changed",
            "secret modified",
            "login",
            "sudo",
            "accounts modified",
            "sensitive files modified",
            "docker"
          ]
        ],
        "type": "string"
      },
      "shared.AgentlessAccountState": {
        "description": "AgentlessAccountState holds the information about the agentless account state",
        "properties": {
          "err": {
            "description": "Err is the description of last error that occurred within the account.\n",
            "type": "string"
          },
          "modified": {
            "description": "Modified holds the timestamp of the last permissions check.\n",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.AgentlessScanSpecification": {
        "description": "AgentlessScanSpecification contains information for setting up an agentless scan for a group of accounts",
        "properties": {
          "accountState": {
            "$ref": "#/components/schemas/shared.AgentlessAccountState"
          },
          "autoScale": {
            "description": "AutoScale indicates that the number of concurrent scanners should be selected automatically.\n",
            "type": "boolean"
          },
          "consoleAddr": {
            "description": "ConsoleAddr is a network-accessible address that scanners can use to publish scan results to Console.\n",
            "type": "string"
          },
          "enabled": {
            "description": "Enabled indicates whether agentless scanning is enabled.\n",
            "type": "boolean"
          },
          "excludedTags": {
            "description": "ExcludedTags are the tags used to exclude instances from the scan.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "hubCredentialID": {
            "description": "HubCredentialID is the ID of the credentials in the credentials store to use for authenticating with the cloud provider on behalf of the scan hub account. Optional.\n",
            "type": "string"
          },
          "proxyAddress": {
            "description": "ProxyAddress is the optional HTTP proxy address for a setup that includes a proxy server.\n",
            "type": "string"
          },
          "regions": {
            "description": "Regions are the cloud provider regions applicable for the scan. Default is all.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "scanNonRunning": {
            "description": "ScanNonRunning indicates whether to scan non running instances.\n",
            "type": "boolean"
          },
          "scanners": {
            "description": "Scanners is the number of concurrent scanners to perform the scan (when auto-scale is off).\n",
            "type": "integer"
          },
          "securityGroup": {
            "description": "SecurityGroup is the security group that scanners should use (for isolation and internet access). Default is empty value to use the cloud account default security group.\n",
            "type": "string"
          },
          "subnet": {
            "description": "Subnet is the network subnet to use for the instance launched for scanning. Default value is empty string, which represents the default subnet in the default VPC.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.AlertThreshold": {
        "description": "AlertThreshold is the vulnerability policy alert threshold\nThreshold values typically vary between 0 and 10 (noninclusive)",
        "properties": {
          "disabled": {
            "description": "Suppresses alerts for all vulnerabilities (true).\n",
            "type": "boolean"
          },
          "value": {
            "description": "Minimum severity to trigger alerts. Supported values range from 0 to 9, where 0=off, 1=low, 4=medium, 7=high, and 9=critical.\n",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "shared.AllowedCVE": {
        "description": "AllowedCVE is a CVE to ignore across the product",
        "properties": {
          "cve": {
            "description": "CVE is the CVE to allow.\n",
            "type": "string"
          },
          "description": {
            "description": "Description is the description of why this CVE is allowed.\n",
            "type": "string"
          },
          "expiration": {
            "description": "Expiration is the expiration date for the allowed CVE.\n",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.AppEmbeddedEmbedRequest": {
        "description": "AppEmbeddedEmbedRequest represents the arguments required for a AppEmbedded defender embed request",
        "properties": {
          "appID": {
            "description": "AppID identifies the app that the embedded app defender defender is protecting.\n",
            "type": "string"
          },
          "consoleAddr": {
            "description": "ConsoleAddr is the console address.\n",
            "type": "string"
          },
          "dataFolder": {
            "description": "DataFolder is the path to the Twistlock data folder in the container.\n",
            "type": "string"
          },
          "dockerfile": {
            "description": "Dockerfile is the Dockerfile to embed AppEmbedded defender into.\n",
            "type": "string"
          },
          "filesystemMonitoring": {
            "description": "FilesystemMonitoring is the flag of filesystem monitoring for this Defender.\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "shared.AppEmbeddedRuntimeProfile": {
        "description": "AppEmbeddedRuntimeProfile represents the app embedded runtime profile",
        "properties": {
          "_id": {
            "description": "ID is the profile ID.\n",
            "type": "string"
          },
          "appID": {
            "description": "App is the app embedded's defender name.\n",
            "type": "string"
          },
          "cloudMetadata": {
            "$ref": "#/components/schemas/common.CloudMetadata"
          },
          "cluster": {
            "description": "Cluster is the ECS Fargate cluster name.\n",
            "type": "string"
          },
          "collections": {
            "description": "Collections are collections to which this profile applies.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "container": {
            "description": "Container is the app embedded container name.\n",
            "type": "string"
          },
          "image": {
            "description": "Image is the image name.\n",
            "type": "string"
          },
          "imageID": {
            "description": "ImageID is the image ID.\n",
            "type": "string"
          },
          "startTime": {
            "description": "StartTime is the time when the defender starts.\n",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.AppFirewallAudit": {
        "description": "AppFirewallAudit represents a firewall audit event",
        "properties": {
          "_id": {
            "description": "ID is internal id representation.\n",
            "type": "string"
          },
          "accountID": {
            "description": "AccountID is the cloud account ID where the audit was generated.\n",
            "type": "string"
          },
          "appID": {
            "description": "AppID is the  application ID.\n",
            "type": "string"
          },
          "attackField": {
            "$ref": "#/components/schemas/waas.HTTPField"
          },
          "attackTechniques": {
            "description": "AttackTechniques are the MITRE attack techniques.\n",
            "items": {
              "$ref": "#/components/schemas/mitre.Technique"
            },
            "type": "array"
          },
          "cluster": {
            "description": "Cluster is the cluster on which the audit was originated.\n",
            "type": "string"
          },
          "collections": {
            "description": "Collections are collections to which this audit applies.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "connectingIPs": {
            "description": "ConnectingIPs are the requests connecting IPs such as proxy and load-balancer.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "containerId": {
            "description": "ContainerId is the firewall container id.\n",
            "type": "string"
          },
          "containerName": {
            "description": "ContainerName is the firewall container name.\n",
            "type": "string"
          },
          "count": {
            "description": "Count is the number of audit occurrences.\n",
            "type": "integer"
          },
          "country": {
            "description": "Country is the source IP country.\n",
            "type": "string"
          },
          "effect": {
            "$ref": "#/components/schemas/waas.Effect"
          },
          "eventID": {
            "description": "EventID is the event identifier of the audit relevant request.\n",
            "type": "string"
          },
          "fqdn": {
            "description": "FQDN is the current hostname's FQDN.\n",
            "type": "string"
          },
          "function": {
            "description": "Function is the name of the serverless function that caused the audit.\n",
            "type": "string"
          },
          "functionID": {
            "description": "FunctionID is the id of the function called.\n",
            "type": "string"
          },
          "host": {
            "description": "Host indicates this audit if for a host firewall or an out of band firewall for a host.\n",
            "type": "boolean"
          },
          "hostname": {
            "description": "Hostname is the current hostname.\n",
            "type": "string"
          },
          "imageName": {
            "description": "ImageName is the firewall image name.\n",
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "$ref": "#/components/schemas/string"
            },
            "description": "Labels are the custom labels associated with the container.\n",
            "type": "object"
          },
          "method": {
            "description": "HTTPMethod is the request HTTP method.\n",
            "type": "string"
          },
          "msg": {
            "description": "Message is the blocking message text.\n",
            "type": "string"
          },
          "ns": {
            "description": "Namespaces are the k8s namespaces.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "os": {
            "description": "OS is the operating system distribution.\n",
            "type": "string"
          },
          "profileId": {
            "description": "ProfileID is the profile of the audit.\n",
            "type": "string"
          },
          "protection": {
            "$ref": "#/components/schemas/waas.Protection"
          },
          "provider": {
            "$ref": "#/components/schemas/common.CloudProvider"
          },
          "rawEvent": {
            "description": "RawEvent contains unparsed function handler event input.\n",
            "type": "string"
          },
          "region": {
            "description": "Region is the name of the region in which the serverless function is located.\n",
            "type": "string"
          },
          "requestHeaderNames": {
            "description": "RequestHeaderNames are the request header names.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "requestHeaders": {
            "description": "RequestHeaders represent the request headers.\n",
            "type": "string"
          },
          "requestHost": {
            "description": "RequestHost is the request host.\n",
            "type": "string"
          },
          "requestID": {
            "description": "RequestID is lambda function invocation request id.\n",
            "type": "string"
          },
          "resource": {
            "$ref": "#/components/schemas/common.RuntimeResource"
          },
          "responseHeaderNames": {
            "description": "ResponseHeaderNames are the response header names.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "ruleAppID": {
            "description": "RuleAppID is the ID of the rule's app that was applied.\n",
            "type": "string"
          },
          "ruleName": {
            "description": "RuleName is the name of the rule that was applied.\n",
            "type": "string"
          },
          "runtime": {
            "$ref": "#/components/schemas/shared.LambdaRuntimeType"
          },
          "statusCode": {
            "description": "StatusCode is the response status code.\n",
            "type": "integer"
          },
          "subnet": {
            "description": "Subnet is the source IP subnet.\n",
            "type": "string"
          },
          "time": {
            "description": "Time is the UTC time of the audit event.\n",
            "format": "date-time",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/waas.AttackType"
          },
          "url": {
            "description": "URL is the requests full URL (partial on server side - path and query only).\n",
            "type": "string"
          },
          "urlPath": {
            "description": "URLPath is the requests url path.\n",
            "type": "string"
          },
          "urlQuery": {
            "description": "URLQuery is the requests url query.\n",
            "type": "string"
          },
          "userAgentHeader": {
            "description": "UserAgentHeader is the requests User-Agent header.\n",
            "type": "string"
          },
          "version": {
            "description": "Version is the defender version.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.Audit": {
        "description": "Audit represents an event in the system",
        "properties": {
          "accountID": {
            "description": "AccountID is the cloud account ID where the audit was created.\n",
            "type": "string"
          },
          "allow": {
            "description": "Allow indicates whether the command was allowe or denied.\n",
            "type": "boolean"
          },
          "api": {
            "description": "API is the api that is being audited.\n",
            "type": "string"
          },
          "cluster": {
            "description": "Cluster is the cluster from which the audit originated.\n",
            "type": "string"
          },
          "collections": {
            "description": "Collections are collections to which this audit applies.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "containerName": {
            "description": "ContainerName is the name of the container.\n",
            "type": "string"
          },
          "fqdn": {
            "description": "FQDN is the fully qualified domain name from which the audit originated.\n",
            "type": "string"
          },
          "hostname": {
            "description": "Hostname is the hostname from which the audit originated.\n",
            "type": "string"
          },
          "imageName": {
            "description": "ImageName is the name of the image.\n",
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "$ref": "#/components/schemas/string"
            },
            "description": "Labels are the labels associated with the target audit (for containers/images).\n",
            "type": "object"
          },
          "msg": {
            "description": "Msg is the message explaining the audit.\n",
            "type": "string"
          },
          "ruleName": {
            "description": "RulesName is contains the name of the rule that was applied, when blocked.\n",
            "type": "string"
          },
          "sourceIP": {
            "description": "SourceIP is the remote agent's source IP.\n",
            "type": "string"
          },
          "time": {
            "description": "Time is the UTC time of the audit event.\n",
            "format": "date-time",
            "type": "string"
          },
          "type": {
            "description": "Type is the audit type.\n",
            "type": "string"
          },
          "user": {
            "description": "User is the user that run the command.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.AwsRegionType": {
        "description": "AwsRegionType is the type of aws region",
        "enum": [
          [
            "regular",
            "gov",
            "china",
            "all"
          ]
        ],
        "type": "string"
      },
      "shared.BackupSpec": {
        "description": "BackupSpec is the backup specification",
        "properties": {
          "id": {
            "description": "ID is the full backup file name, used as the instance id in API calls.\n",
            "type": "string"
          },
          "name": {
            "description": "Name is the backup name.\n",
            "type": "string"
          },
          "release": {
            "description": "Release is the backup release.\n",
            "type": "string"
          },
          "time": {
            "description": "Time is the backup creation time.\n",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.Binary": {
        "description": "Binary represents a detected binary file (ELF)",
        "properties": {
          "altered": {
            "description": "Indicates if the binary was installed from a package manager and modified/replaced (true) or not (false).\n",
            "type": "boolean"
          },
          "cveCount": {
            "description": "Total number of CVEs for this specific binary.\n",
            "type": "integer"
          },
          "deps": {
            "description": "Third-party package files which are used by the binary.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "functionLayer": {
            "description": "ID of the serverless layer in which the package was discovered.\n",
            "type": "string"
          },
          "md5": {
            "description": "Md5 hashset of the binary.\n",
            "type": "string"
          },
          "missingPkg": {
            "description": "Indicates if this binary is not related to any package (true) or not (false).\n",
            "type": "boolean"
          },
          "name": {
            "description": "Name of the binary.\n",
            "type": "string"
          },
          "path": {
            "description": "Relative path of the binary inside the container.\n",
            "type": "string"
          },
          "pkgRootDir": {
            "description": "Path for searching packages used by the binary.\n",
            "type": "string"
          },
          "services": {
            "description": "Names of services which use the binary.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "version": {
            "description": "Version of the binary.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.BlockThreshold": {
        "description": "BlockThreshold is the vulnerability policy block threshold\nThreshold values typically vary between 0 and 10 (noninclusive)",
        "properties": {
          "enabled": {
            "description": "Enables blocking (true).\n",
            "type": "boolean"
          },
          "value": {
            "description": "Minimum severity to trigger blocking. Supported values range from 0 to 9, where 0=off, 1=low, 4=medium, 7=high, and 9=critical.\n",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "shared.CLIScanResult": {
        "description": "CLIScanResult describes a CLI scan result",
        "properties": {
          "_id": {
            "description": "ID of the scan result.\n",
            "type": "string"
          },
          "build": {
            "description": "CI build.\n",
            "type": "string"
          },
          "complianceFailureSummary": {
            "description": "Scan compliance failure summary.\n",
            "type": "string"
          },
          "entityInfo": {
            "$ref": "#/components/schemas/shared.ImageScanResult"
          },
          "jobName": {
            "description": "CI job name.\n",
            "type": "string"
          },
          "pass": {
            "description": "Indicates if the scan passed (true) or failed (false).\n",
            "type": "boolean"
          },
          "time": {
            "description": "Time of the scan.\n",
            "format": "date-time",
            "type": "string"
          },
          "version": {
            "description": "Scanner version.\n",
            "type": "string"
          },
          "vulnFailureSummary": {
            "description": "Scan vulnerability failure summary.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.CPUArch": {
        "description": "CPUArch represents the CPU architecture",
        "type": "integer"
      },
      "shared.CPUArchs": {
        "description": "CPUArchs represents list of cpu architectures",
        "items": {
          "$ref": "#/components/schemas/shared.CPUArch"
        },
        "type": "array"
      },
      "shared.CVEAllowList": {
        "description": "CVEAllowList is a collection of allowed CVE's",
        "properties": {
          "_id": {
            "description": "ID is the id of the feed.\n",
            "type": "string"
          },
          "digest": {
            "description": "Digest is the feed digest.\n",
            "type": "string"
          },
          "rules": {
            "description": "Rules is the list of allowed CVEs.\n",
            "items": {
              "$ref": "#/components/schemas/shared.AllowedCVE"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "shared.CVERule": {
        "description": "CVERule is a vuln rule for specific vulnerability",
        "properties": {
          "description": {
            "description": "Free-form text for documenting the exception.\n",
            "type": "string"
          },
          "effect": {
            "$ref": "#/components/schemas/vuln.Effect"
          },
          "expiration": {
            "$ref": "#/components/schemas/vuln.ExpirationDate"
          },
          "id": {
            "description": "CVE ID.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.CloudDiscoveryEntity": {
        "description": "CloudDiscoveryEntity holds data about a discovered entity",
        "properties": {
          "activeServicesCount": {
            "description": "ActiveServicesCount is the number of active services in ecs cluster.\n",
            "format": "int64",
            "type": "integer"
          },
          "arn": {
            "description": "The Amazon Resource Name (ARN) assigned to the entity.\n",
            "type": "string"
          },
          "containerGroup": {
            "description": "ContainerGroup is the azure aci container group the container belongs to.\n",
            "type": "string"
          },
          "createdAt": {
            "description": "CreatedAt is the time when the entity was created.\n",
            "format": "date-time",
            "type": "string"
          },
          "defended": {
            "description": "Defended indicates if the entity is defended.\n",
            "type": "boolean"
          },
          "endpoints": {
            "description": "Endpoints are the cluster endpoints.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "image": {
            "description": "Image is the image of an aci container.\n",
            "type": "string"
          },
          "lastModified": {
            "description": "LastModified is the modification time of the function.\n",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "Name is the name of the entity.\n",
            "type": "string"
          },
          "nodesCount": {
            "description": "NodesCount is the number of nodes in the cluster (aks, gke).\n",
            "type": "integer"
          },
          "resourceGroup": {
            "description": "ResourceGroup is the the azure resource group containing the entity.\n",
            "type": "string"
          },
          "runningTasksCount": {
            "description": "RunningTasksCount is the number of running tasks in ecs cluster.\n",
            "format": "int64",
            "type": "integer"
          },
          "runtime": {
            "description": "Runtime is runtime environment for the function, i.e. nodejs.\n",
            "type": "string"
          },
          "status": {
            "description": "Status is the current status of entity.\n",
            "type": "string"
          },
          "version": {
            "description": "Version is the version of the entity.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.CloudDiscoveryResult": {
        "description": "CloudDiscoveryResult represents a cloud scan result for a specific cloud provider, service and region",
        "properties": {
          "accountID": {
            "description": "AccountID is the cloud account ID.\n",
            "type": "string"
          },
          "collections": {
            "description": "Collections are the matched result collections.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "credentialId": {
            "description": "CredentialID is the id reference of the credential used.\n",
            "type": "string"
          },
          "defended": {
            "description": "Defended is the number of defended entities (registries, functions, clusters).\n",
            "type": "integer"
          },
          "entities": {
            "description": "Entities holds detailed scan results.\n",
            "items": {
              "$ref": "#/components/schemas/shared.CloudDiscoveryEntity"
            },
            "type": "array"
          },
          "err": {
            "description": "Err holds any error found during a scan.\n",
            "type": "string"
          },
          "project": {
            "description": "Project is the GCP project that was scanned.\n",
            "type": "string"
          },
          "provider": {
            "$ref": "#/components/schemas/common.CloudProvider"
          },
          "region": {
            "description": "Region is the region that was scanned, for example: GCP - \"us-east-1\", Azure - \"westus\".\n",
            "type": "string"
          },
          "registry": {
            "description": "Registry is the Azure registry that was scanned, for example: testcloudscanregistry.azurecr.io.\n",
            "type": "string"
          },
          "serviceType": {
            "$ref": "#/components/schemas/shared.ScanResultType"
          },
          "total": {
            "description": "Total is total number of entities found in cloud scan.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "shared.CloudScanPolicy": {
        "description": "CloudScanPolicy holds policies for cloud scan",
        "properties": {
          "_id": {
            "description": "ID is the cloud policy id.\n",
            "type": "string"
          },
          "disabled": {
            "description": "Indicates if the rule is currently disabled (true) or not (false).\n",
            "type": "boolean"
          },
          "modified": {
            "description": "Datetime when the rule was last modified.\n",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "Name of the rule.\n",
            "type": "string"
          },
          "notes": {
            "description": "Free-form text.\n",
            "type": "string"
          },
          "owner": {
            "description": "User who created or last modified the rule.\n",
            "type": "string"
          },
          "previousName": {
            "description": "Previous name of the rule. Required for rule renaming.\n",
            "type": "string"
          },
          "rules": {
            "description": "Rules are the rules for cloud scan.\n",
            "items": {
              "$ref": "#/components/schemas/shared.CloudScanRule"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "shared.CloudScanRule": {
        "description": "CloudScanRule a rule for discovery/compliance/serverless radar scanning",
        "properties": {
          "agentlessScanSpec": {
            "$ref": "#/components/schemas/shared.AgentlessScanSpecification"
          },
          "awsRegionType": {
            "$ref": "#/components/schemas/shared.AwsRegionType"
          },
          "complianceCheckIDs": {
            "description": "ComplianceCheckIDs are the compliance checks IDs.\n",
            "items": {
              "$ref": "#/components/schemas/int"
            },
            "type": "array"
          },
          "credentialId": {
            "description": "CredentialID is the id reference of the credential.\n",
            "type": "string"
          },
          "discoverAllFunctionVersions": {
            "description": "DiscoverAllFunctionVersions indicates whether serverless discovery and radar scans should scan all function versions or only latest.\n",
            "type": "boolean"
          },
          "discoveryEnabled": {
            "description": "DiscoveryEnabled indicates whether discovery scan is enabled.\n",
            "type": "boolean"
          },
          "serverlessRadarCap": {
            "description": "ServerlessRadarCap is the maximum number of functions to scan in serverless radar.\n",
            "type": "integer"
          },
          "serverlessRadarEnabled": {
            "description": "ServerlessRadarEnabled indicates whether serverless radar scan is enabled.\n",
            "type": "boolean"
          },
          "vmTagsEnabled": {
            "description": "VMTagsEnabled indicates whether fetching VM instance tags is enabled.\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "shared.CodeRepoProviderType": {
        "description": "CodeRepoProviderType is the type of provider for the code repository, e.g., GitHub, GitLab etc",
        "enum": [
          [
            "github",
            "CI"
          ]
        ],
        "type": "string"
      },
      "shared.CodeRepoSettings": {
        "description": "CodeRepoSettings is the settings for scanning remote code repositories",
        "properties": {
          "specifications": {
            "description": "Repository specifications used for scanning.\n",
            "items": {
              "$ref": "#/components/schemas/shared.CodeRepoSpecification"
            },
            "type": "array"
          },
          "webhookUrlSuffix": {
            "description": "Random URL suffix generated for the webhook API.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.CodeRepoSpecification": {
        "description": "CodeRepoSpecification is a specification for scanning specific repositories",
        "properties": {
          "credentialID": {
            "description": "ID of the credentials in the credentials store to use for authenticating with the code repo service provider.\n",
            "type": "string"
          },
          "excludedManifestPaths": {
            "description": "Paths in the repository the scanner ignores when looking for manifest files to evaluate.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "explicitManifestNames": {
            "description": "Additional manifest files for the scanner to evaluate. Explicitly specify manifest filenames when you use non-standard naming schemes. (e.g., prod-requirements.txt).\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "publicOnly": {
            "description": "Indicates whether this specification is meant for (unauthenticated) public-only scanning (true) or private as well (false).\n",
            "type": "boolean"
          },
          "repositories": {
            "description": "Repository names to scan. The format is <owner>/<repo_name>.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "targetPythonVersion": {
            "description": "Python version to consider when resolving Python dependencies. The default value is the latest version.\n",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/shared.CodeRepoProviderType"
          }
        },
        "type": "object"
      },
      "shared.Conditions": {
        "description": "Conditions contains rule conditions. Conditions apply only for their respective policy type",
        "properties": {
          "device": {
            "description": "Allowed volume host device (wildcard). If a \"container create\" command specifies a non matching host device, th action is blocked. Only applies to rules in certain policy types.\n",
            "type": "string"
          },
          "readonly": {
            "description": "Indicates if the condition applies only to read-only commands (i.e., HTTP GET requests) (true) or not (false).\n",
            "type": "boolean"
          },
          "vulnerabilities": {
            "description": "Block and scan severity-based vulnerabilities conditions.\n",
            "items": {
              "$ref": "#/components/schemas/vuln.Condition"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "shared.Connection": {
        "description": "Connection is a radar internet connection",
        "properties": {
          "port": {
            "description": ".\n",
            "type": "integer"
          },
          "protocol": {
            "description": ".\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.ContainerHistoryEvent": {
        "description": "ContainerHistoryEvent is a container process event created by interactive user",
        "properties": {
          "_id": {
            "description": "ID is the history event entity.\n",
            "type": "string"
          },
          "command": {
            "description": "Command is the process that was executed.\n",
            "type": "string"
          },
          "hostname": {
            "description": "Hostname is the hostname on which the command was invoked.\n",
            "type": "string"
          },
          "time": {
            "description": "Time is the time of the event.\n",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.ContainerInfo": {
        "description": "ContainerInfo contains all information gathered on a specific container",
        "properties": {
          "allCompliance": {
            "$ref": "#/components/schemas/vuln.AllCompliance"
          },
          "app": {
            "description": "App is the app that is hosted in the container.\n",
            "type": "string"
          },
          "cloudMetadata": {
            "$ref": "#/components/schemas/common.CloudMetadata"
          },
          "cluster": {
            "description": "Cluster is the provided cluster name.\n",
            "type": "string"
          },
          "complianceDistribution": {
            "$ref": "#/components/schemas/vuln.Distribution"
          },
          "complianceIssues": {
            "description": "ComplianceIssues are all the container compliance issues.\n",
            "items": {
              "$ref": "#/components/schemas/vuln.Vulnerability"
            },
            "type": "array"
          },
          "complianceIssuesCount": {
            "description": ".\n",
            "type": "integer"
          },
          "complianceRiskScore": {
            "description": "ComplianceRiskScore is the container's compliance risk score.\n",
            "format": "float",
            "type": "number"
          },
          "externalLabels": {
            "description": "ExternalLabels is the external labels e.g., kubernetes namespace labels.\n",
            "items": {
              "$ref": "#/components/schemas/common.ExternalLabel"
            },
            "type": "array"
          },
          "id": {
            "description": "Id is the container id.\n",
            "type": "string"
          },
          "image": {
            "description": "Image is the canonical image name.\n",
            "type": "string"
          },
          "imageID": {
            "description": "ImageId is the image id.\n",
            "type": "string"
          },
          "imageName": {
            "description": "Deprecated: The image name as stated in the docker run command.\n",
            "type": "string"
          },
          "infra": {
            "description": "Infra represents any container that belongs to the infrastructure.\n",
            "type": "boolean"
          },
          "installedProducts": {
            "$ref": "#/components/schemas/shared.InstalledProducts"
          },
          "labels": {
            "description": "Labels are the container labels (https://docs.docker.com/engine/userguide/labels-custom-metadata/).\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "name": {
            "description": "Name is the container name.\n",
            "type": "string"
          },
          "namespace": {
            "description": "Namespace is the k8s deployment namespace.\n",
            "type": "string"
          },
          "network": {
            "$ref": "#/components/schemas/shared.ContainerNetwork"
          },
          "networkSettings": {
            "$ref": "#/components/schemas/shared.DockerNetworkInfo"
          },
          "processes": {
            "description": "Processes are the processes that are running inside the container.\n",
            "items": {
              "$ref": "#/components/schemas/shared.ContainerProcess"
            },
            "type": "array"
          },
          "profileID": {
            "description": "ProfileID is the container profile id.\n",
            "type": "string"
          },
          "sizeBytes": {
            "description": ".\n",
            "format": "int64",
            "type": "integer"
          },
          "startTime": {
            "description": "StartTime is the starting time of the container.\n",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.ContainerNetwork": {
        "description": "ContainerNetwork contains details about the container network (ports, IPs, type etc...)",
        "properties": {
          "ports": {
            "description": "Ports are the ports details associated with the container.\n",
            "items": {
              "$ref": "#/components/schemas/shared.ContainerPort"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "shared.ContainerNetworkFirewallProfileAudits": {
        "description": "ContainerNetworkFirewallProfileAudits represents the container network firewall profile audits",
        "properties": {
          "_id": {
            "description": "ProfileID is the runtime profile ID.\n",
            "type": "string"
          },
          "audits": {
            "additionalProperties": {
              "$ref": "#/components/schemas/shared.ContainerNetworkFirewallSubtypeAudits"
            },
            "description": "Audits is a map from the audit sub-type to the audit events list.\n",
            "type": "object"
          },
          "cluster": {
            "description": "Cluster is the cluster from which the audit originated.\n",
            "type": "string"
          },
          "collections": {
            "description": "Collections are collections to which this audit applies.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "imageName": {
            "description": "ImageName is the container image name.\n",
            "type": "string"
          },
          "label": {
            "description": "Label represents the container deployment label.\n",
            "type": "string"
          },
          "os": {
            "description": "OS is the operating system distribution.\n",
            "type": "string"
          },
          "resource": {
            "$ref": "#/components/schemas/common.RuntimeResource"
          },
          "time": {
            "description": "Time is the UTC time of the last audit event.\n",
            "format": "date-time",
            "type": "string"
          },
          "total": {
            "description": "Total is the total count of audits per runtime profile.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "shared.ContainerNetworkFirewallSubtypeAudits": {
        "description": "ContainerNetworkFirewallSubtypeAudits represents the container network firewall sub type audits per profile",
        "properties": {
          "audits": {
            "description": "Audits are the container network firewall audits associated with the sub-type, limited to the determined capacity.\n",
            "items": {
              "$ref": "#/components/schemas/cnnf.ContainerAudit"
            },
            "type": "array"
          },
          "count": {
            "description": "Count is the total count of the sub-type audits.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "shared.ContainerPort": {
        "description": "ContainerPort represents the state of a port in a given container",
        "properties": {
          "container": {
            "description": "Container is the mapped port inside the container.\n",
            "type": "integer"
          },
          "host": {
            "description": "Host is the host port number.\n",
            "type": "integer"
          },
          "hostIP": {
            "description": "HostIP is the host IP.\n",
            "type": "string"
          },
          "listening": {
            "description": "Listening indicates whether the port is in listening mode.\n",
            "type": "boolean"
          },
          "nat": {
            "description": "NAT indicates the port is exposed using NAT.\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "shared.ContainerProcess": {
        "description": "ContainerProcess represents a process inside a container",
        "properties": {
          "name": {
            "description": "Name is a process name.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.ContainerRadarIncomingConnection": {
        "description": "ContainerRadarIncomingConnection is an incoming connection in the network radar",
        "properties": {
          "policyRules": {
            "description": "PolicyRules are the policy rules that are applicable for source/dest. Used for radar display of connections deduced from policy rules.\n",
            "items": {
              "$ref": "#/components/schemas/cnnf.RadarPolicyRule"
            },
            "type": "array"
          },
          "ports": {
            "description": "Ports are all the ports used by the sender.\n",
            "items": {
              "$ref": "#/components/schemas/common.PortData"
            },
            "type": "array"
          },
          "profileHash": {
            "$ref": "#/components/schemas/common.ProfileHash"
          },
          "profileID": {
            "description": "ProfileID is the sender's profile ID.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.ContainerRuntimeProfile": {
        "description": "ContainerRuntimeProfile represents the image runtime profile",
        "properties": {
          "_id": {
            "description": "Id is the profile ID.\n",
            "type": "string"
          },
          "accountIDs": {
            "description": "AccountIDs are the cloud account IDs associated with the container runtime profile.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "archived": {
            "description": "Archive indicates whether this profile is archived.\n",
            "type": "boolean"
          },
          "capabilities": {
            "$ref": "#/components/schemas/runtime.ContainerCapabilities"
          },
          "cluster": {
            "description": "Cluster is the provided cluster name.\n",
            "type": "string"
          },
          "collections": {
            "description": "Collections are collections to which this profile applies.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "created": {
            "description": "Created is the profile creation time.\n",
            "format": "date-time",
            "type": "string"
          },
          "entrypoint": {
            "description": "Entrypoint is the image entrypoint.\n",
            "type": "string"
          },
          "events": {
            "description": "Events are the last historical interactive process events for this profile, they are updated in a designated flow.\n",
            "items": {
              "$ref": "#/components/schemas/shared.ContainerHistoryEvent"
            },
            "type": "array"
          },
          "filesystem": {
            "$ref": "#/components/schemas/runtime.ProfileFilesystem"
          },
          "hash": {
            "$ref": "#/components/schemas/common.ProfileHash"
          },
          "hostNetwork": {
            "description": "HostNetwork whether the instance share the network namespace with the host.\n",
            "type": "boolean"
          },
          "hostPid": {
            "description": "HostPid indicates whether the instance share the pid namespace with the host.\n",
            "type": "boolean"
          },
          "image": {
            "description": "Image is the image name that represents the image.\n",
            "type": "string"
          },
          "imageID": {
            "description": "ImageID is the profile's image ID.\n",
            "type": "string"
          },
          "infra": {
            "description": "InfraContainer indicates this is an infrastructure container.\n",
            "type": "boolean"
          },
          "istio": {
            "description": "Istio states whether it is an istio-monitored profile.\n",
            "type": "boolean"
          },
          "k8s": {
            "$ref": "#/components/schemas/shared.ProfileKubernetesData"
          },
          "label": {
            "description": "Label is the profile's label.\n",
            "type": "string"
          },
          "lastUpdate": {
            "description": "Modified is the last time when this profile was modified.\n",
            "format": "date-time",
            "type": "string"
          },
          "learnedStartup": {
            "description": "LearnedStartup indicates that startup events were learned.\n",
            "type": "boolean"
          },
          "namespace": {
            "description": "Namespace is the k8s deployment namespace.\n",
            "type": "string"
          },
          "network": {
            "$ref": "#/components/schemas/runtime.ProfileNetwork"
          },
          "os": {
            "description": "OS is the profile image OS.\n",
            "type": "string"
          },
          "processes": {
            "$ref": "#/components/schemas/runtime.ProfileProcesses"
          },
          "relearningCause": {
            "description": "RelearningCause is a string that describes the reasoning for a profile to enter the learning mode after\nbeing activated.\n",
            "type": "string"
          },
          "remainingLearningDurationSec": {
            "description": "RemainingLearningDurationSec represents the total time left that the system need to finish learning this image.\n",
            "format": "double",
            "type": "number"
          },
          "state": {
            "$ref": "#/components/schemas/shared.RuntimeProfileState"
          }
        },
        "type": "object"
      },
      "shared.ContainerScanResult": {
        "description": "ContainerScanResult contains the result of a scanning a container",
        "properties": {
          "_id": {
            "description": "Id is the container id.\n",
            "type": "string"
          },
          "collections": {
            "description": "Collections are collections to which this container applies.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "firewallProtection": {
            "$ref": "#/components/schemas/waas.ProtectionStatus"
          },
          "hostname": {
            "description": "Hostname is the hostname on which the container is deployed.\n",
            "type": "string"
          },
          "info": {
            "$ref": "#/components/schemas/shared.ContainerInfo"
          },
          "scanTime": {
            "description": "ScanTime is the container scan time.\n",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.Coordinates": {
        "description": "Coordinates represents a region coordinates type",
        "properties": {
          "latitude": {
            "description": "Latitude coordinate.\n",
            "format": "float",
            "type": "number"
          },
          "longitude": {
            "description": "Longitude coordinate.\n",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "shared.CustomComplianceCheck": {
        "description": "CustomComplianceCheck represents a custom compliance check entry",
        "properties": {
          "_id": {
            "description": "ID is the compliance check ID.\n",
            "type": "integer"
          },
          "disabled": {
            "description": "Indicates if the rule is currently disabled (true) or not (false).\n",
            "type": "boolean"
          },
          "modified": {
            "description": "Datetime when the rule was last modified.\n",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "Name of the rule.\n",
            "type": "string"
          },
          "notes": {
            "description": "Free-form text.\n",
            "type": "string"
          },
          "owner": {
            "description": "User who created or last modified the rule.\n",
            "type": "string"
          },
          "previousName": {
            "description": "Previous name of the rule. Required for rule renaming.\n",
            "type": "string"
          },
          "script": {
            "description": "Script is the custom check script.\n",
            "type": "string"
          },
          "severity": {
            "description": "Severity is the custom check defined severity.\n",
            "type": "string"
          },
          "title": {
            "description": "Title is the custom check title.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.CustomIPFeed": {
        "description": "CustomIPFeed represent the custom IP feed",
        "properties": {
          "_id": {
            "description": "ID is the custom feed id.\n",
            "type": "string"
          },
          "digest": {
            "description": "Digest is an internal digest of the custom ip feed.\n",
            "type": "string"
          },
          "feed": {
            "$ref": "#/components/schemas/shared.IPs"
          },
          "modified": {
            "description": "Modified is the last time the custom feed was modified.\n",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.CustomLabelsSettings": {
        "description": "CustomLabelsSettings are customized label names that are used to augment audit events\nThey can either be docker labels (which appears in the container label specification)\nor k8s/openshift labels (which appears in the pause container that monitors the target container)",
        "properties": {
          "labels": {
            "description": "Labels are the custom labels.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "shared.CustomMalwareFeed": {
        "description": "CustomMalwareFeed represent the custom malware",
        "properties": {
          "_id": {
            "description": "ID is the custom feed id.\n",
            "type": "string"
          },
          "digest": {
            "description": "Digest is an internal digest of the feed.\n",
            "type": "string"
          },
          "feed": {
            "description": "Feed is the list of custom malware signatures.\n",
            "items": {
              "$ref": "#/components/schemas/shared.Malware"
            },
            "type": "array"
          },
          "modified": {
            "description": "Modified is the last time the custom feed was modified.\n",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.CveType": {
        "description": "CveType represents the type of a CVE",
        "enum": [
          [
            "python",
            "gem",
            "nodejs",
            "jar",
            "package",
            "product",
            "app",
            "go"
          ]
        ],
        "type": "string"
      },
      "shared.DefenderInstallBundle": {
        "description": "DefenderInstallBundle represents the install bundle for the defender",
        "properties": {
          "installBundle": {
            "description": "InstallBundle is the base64 bundle of certificates used to communicate with the console.\n",
            "type": "string"
          },
          "wsAddress": {
            "description": "WSAddress is the websocket address (console ) the TAS defender connects to.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.DefenderLicenseDetails": {
        "description": "DefenderLicenseDetails represents a single defender license details",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/defender.Category"
          },
          "count": {
            "description": "Count is the amount of licensed defenders.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "shared.DockerNetworkInfo": {
        "description": "DockerNetworkInfo contains network-related information about a container",
        "properties": {
          "ipAddress": {
            "description": "IPAddress is the container IP.\n",
            "type": "string"
          },
          "macAddress": {
            "description": "MacAddress is the container MAC.\n",
            "type": "string"
          },
          "networks": {
            "description": "Networks are the networks the container is connected to.\n",
            "items": {
              "$ref": "#/components/schemas/shared.NetworkInfo"
            },
            "type": "array"
          },
          "ports": {
            "description": "Ports are the container network binding that are externally mapped.\n",
            "items": {
              "$ref": "#/components/schemas/shared.Port"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "shared.EncodeServerlessRuleOpts": {
        "description": "EncodeServerlessRuleOpts represents the arguments to serverless rule encoding request",
        "properties": {
          "accountID": {
            "description": "AccountID is the cloud account ID.\n",
            "type": "string"
          },
          "consoleAddr": {
            "description": "ConsoleAddr is the remote console address.\n",
            "type": "string"
          },
          "function": {
            "description": "Function is the name of the function.\n",
            "type": "string"
          },
          "provider": {
            "$ref": "#/components/schemas/common.CloudProvider"
          },
          "proxy": {
            "$ref": "#/components/schemas/common.ProxySettings"
          },
          "region": {
            "description": "Region is the function's cloud provider region.\n",
            "type": "string"
          },
          "updateIntervalMs": {
            "description": "UpdateIntervalMs is the interval between defender policy requests from the console in milliseconds.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "shared.EncodedServerlessRule": {
        "description": "EncodedServerlessRule represents a base64-encoded serverless rule",
        "properties": {
          "data": {
            "description": "Data is a base64-encoded serverless runtime rule.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.EntityType": {
        "description": "EntityType represents the type of the resource identifier",
        "enum": [
          [
            "",
            "docker",
            "kubernetes",
            "tas",
            "istio",
            "internet"
          ]
        ],
        "type": "string"
      },
      "shared.FileDetails": {
        "description": "FileDetails contains file details as the file path, hash checksum",
        "properties": {
          "md5": {
            "description": "Hash sum of the file using md5.\n",
            "type": "string"
          },
          "path": {
            "description": "Path of the file.\n",
            "type": "string"
          },
          "sha1": {
            "description": "Hash sum of the file using SHA-1.\n",
            "type": "string"
          },
          "sha256": {
            "description": "Hash sum of the file using SHA256.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.FileIntegrityEvent": {
        "description": "FileIntegrityEvent represents a single file integrity event detected according to the file integrity monitoring rules",
        "properties": {
          "_id": {
            "description": "ID is activity's unique identifier.\n",
            "type": "string"
          },
          "accountID": {
            "description": "AccountID is the cloud account ID.\n",
            "type": "string"
          },
          "cluster": {
            "description": "Cluster is the cluster on which the event was found.\n",
            "type": "string"
          },
          "collections": {
            "description": "Collections are collections to which this event applies.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "description": {
            "description": "Description is a human readable description of the action performed on the path.\n",
            "type": "string"
          },
          "eventType": {
            "$ref": "#/components/schemas/shared.FileIntegrityEventType"
          },
          "fileType": {
            "$ref": "#/components/schemas/runtime.FSFileType"
          },
          "fqdn": {
            "description": "FQDN is the current fully qualified domain name used in audit alerts.\n",
            "type": "string"
          },
          "hostname": {
            "description": "Hostname is the hostname on which the event was found.\n",
            "type": "string"
          },
          "metadata": {
            "$ref": "#/components/schemas/shared.FileMetadata"
          },
          "path": {
            "description": "Path is the absolute path of the event.\n",
            "type": "string"
          },
          "processName": {
            "description": "ProcessName is the name of the process initiated the event.\n",
            "type": "string"
          },
          "ruleName": {
            "description": "RuleName is the name of the applied rule for auditing file integrity rules.\n",
            "type": "string"
          },
          "time": {
            "description": "Time is the time of the event.\n",
            "format": "date-time",
            "type": "string"
          },
          "user": {
            "description": "User is the user initiated the event.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.FileIntegrityEventType": {
        "description": "FileIntegrityEventType represents the type of the file integrity event",
        "enum": [
          [
            "metadata",
            "read",
            "write"
          ]
        ],
        "type": "string"
      },
      "shared.FileMetadata": {
        "description": "FileMetadata represents the metadata of a single file/directory",
        "properties": {
          "gid": {
            "description": "Gid is the ID of the group that owns the file/directory.\n",
            "type": "integer"
          },
          "permissions": {
            "description": "Permissions are the file/directory permission bits.\n",
            "type": "integer"
          },
          "uid": {
            "description": "Uid is the ID of the user that owns the file/directory.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "shared.ForensicSettings": {
        "description": "ForensicSettings are settings for the forensic data collection",
        "properties": {
          "appEmbeddedDiskUsageMb": {
            "description": "AppEmbeddedDiskUsageMb is the maximum amount of disk space used to\nstore the app embedded historical forensic events.\n",
            "type": "integer"
          },
          "collectNetworkFirewall": {
            "description": "CollectNetworkFirewall indicates whether network firewall collection is enabled.\n",
            "type": "boolean"
          },
          "collectNetworkSnapshot": {
            "description": "CollectNetworkSnapshot indicates whether network snapshot collection is enabled.\n",
            "type": "boolean"
          },
          "containerDiskUsageMb": {
            "description": "ContainerDiskUsageMb is the maximum amount of disk space used to\nstore the container historical forensic events.\n",
            "type": "integer"
          },
          "enabled": {
            "description": "Enabled indicates whether host and container forensic data collection is enabled.\n",
            "type": "boolean"
          },
          "hostDiskUsageMb": {
            "description": "HostDiskUsageMb is the maximum amount of disk space used to store\nthe host historical forensic events.\n",
            "type": "integer"
          },
          "incidentSnapshotsCap": {
            "description": "IncidentSnapshotCap is the maximum amount of incident snapshots we store.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "shared.GraceDaysPolicy": {
        "description": "GraceDaysPolicy indicates the grace days policy by severity",
        "properties": {
          "critical": {
            "description": ".\n",
            "type": "integer"
          },
          "enabled": {
            "description": "Enabled is an indication whether the the grace days by severity is enabled.\n",
            "type": "boolean"
          },
          "high": {
            "description": ".\n",
            "type": "integer"
          },
          "low": {
            "description": ".\n",
            "type": "integer"
          },
          "medium": {
            "description": ".\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "shared.HostActivity": {
        "description": "HostActivity holds information for a user activity",
        "properties": {
          "_id": {
            "description": "ID is activity's unique identifier.\n",
            "type": "string"
          },
          "accountID": {
            "description": "AccountID is the cloud account ID.\n",
            "type": "string"
          },
          "affectedServices": {
            "description": "AffectedServices is the affected systemd service.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "cluster": {
            "description": "Cluster is the cluster from which the audit originated.\n",
            "type": "string"
          },
          "collections": {
            "description": "Collections are collections to which this host activity applies.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "command": {
            "description": "Command is the original (with arguments) command the user invoked.\n",
            "type": "string"
          },
          "hostname": {
            "description": "Hostname the activity originated from.\n",
            "type": "string"
          },
          "interactive": {
            "description": "Interactive indicates that the target process was spawned in an interactive session.\n",
            "type": "boolean"
          },
          "modifiedFiles": {
            "description": "ModifiedFiles is the related modified files.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "msg": {
            "description": "Message contains additional non-structured information about the activity, e.g. throttling message.\n",
            "type": "string"
          },
          "ruleName": {
            "description": "RuleName is the name of the rule applied to the host activity.\n",
            "type": "string"
          },
          "service": {
            "description": "Service is the owning systemd service.\n",
            "type": "string"
          },
          "time": {
            "description": "Time is time of the activity.\n",
            "format": "date-time",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/shared.ActivityType"
          },
          "user": {
            "description": "Username of the user that triggered the activity.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.HostAutoDeploySpecification": {
        "description": "HostAutoDeploySpecification  contains the information for host defender auto-deploy",
        "properties": {
          "awsRegionType": {
            "$ref": "#/components/schemas/shared.AwsRegionType"
          },
          "bucketRegion": {
            "description": "BucketRegion is the bucket region for Cloud Storage on GCP.\n",
            "type": "string"
          },
          "collections": {
            "description": "Collections is a list of collections the rule applies to.\n",
            "items": {
              "$ref": "#/components/schemas/collection.Collection"
            },
            "type": "array"
          },
          "consoleHostname": {
            "description": "ConsoleHostname represents the hostname of the console to connect to.\n",
            "type": "string"
          },
          "credentialID": {
            "description": "CredentialID is the service provider authentication data.\n",
            "type": "string"
          },
          "lastModified": {
            "description": "LastModified is the last modified time of the specification.\n",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "Name is the name of the spec.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.HostAutoDeploySpecifications": {
        "description": "HostAutoDeploySpecifications is a list of host auto-deploy specifications",
        "items": {
          "$ref": "#/components/schemas/shared.HostAutoDeploySpecification"
        },
        "type": "array"
      },
      "shared.HostInfo": {
        "description": "HostInfo is a collection of information about the host and it's runtime state",
        "properties": {
          "Secrets": {
            "description": "Secrets are paths to embedded secrets inside the image\nNote: capital letter JSON annotation is kept to avoid converting all images for backward-compatibility support.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "_id": {
            "description": "Image identifier (image ID or repo:tag).\n",
            "type": "string"
          },
          "agentless": {
            "description": "Agentless indicates that the host was scanned with the agentless scanner.\n",
            "type": "boolean"
          },
          "allCompliance": {
            "$ref": "#/components/schemas/vuln.AllCompliance"
          },
          "appEmbedded": {
            "description": "Indicates that this image was scanned by an App-Embedded Defender.\n",
            "type": "boolean"
          },
          "applications": {
            "description": "Products in the image.\n",
            "items": {
              "$ref": "#/components/schemas/vuln.Application"
            },
            "type": "array"
          },
          "baseImage": {
            "description": "Image\u2019s base image name. Used when filtering the vulnerabilities by base images.\n",
            "type": "string"
          },
          "binaries": {
            "description": "Binaries in the image.\n",
            "items": {
              "$ref": "#/components/schemas/shared.Binary"
            },
            "type": "array"
          },
          "cloudMetadata": {
            "$ref": "#/components/schemas/common.CloudMetadata"
          },
          "clusters": {
            "description": "Cluster names.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "collections": {
            "description": "Collections to which this result applies.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "complianceDistribution": {
            "$ref": "#/components/schemas/vuln.Distribution"
          },
          "complianceIssues": {
            "description": "All the compliance issues.\n",
            "items": {
              "$ref": "#/components/schemas/vuln.Vulnerability"
            },
            "type": "array"
          },
          "complianceIssuesCount": {
            "description": "Number of compliance issues.\n",
            "type": "integer"
          },
          "complianceRiskScore": {
            "description": "Compliance risk score for the image.\n",
            "format": "float",
            "type": "number"
          },
          "creationTime": {
            "description": "Date/time when the image was created.\n",
            "format": "date-time",
            "type": "string"
          },
          "distro": {
            "description": "Full name of the distribution.\n",
            "type": "string"
          },
          "ecsClusterName": {
            "description": "ECS cluster name.\n",
            "type": "string"
          },
          "err": {
            "description": "Description of an error that occurred during image health scan.\n",
            "type": "string"
          },
          "externalLabels": {
            "description": "Kubernetes external labels of all containers running this image.\n",
            "items": {
              "$ref": "#/components/schemas/common.ExternalLabel"
            },
            "type": "array"
          },
          "files": {
            "description": "Files in the container.\n",
            "items": {
              "$ref": "#/components/schemas/shared.FileDetails"
            },
            "type": "array"
          },
          "firewallProtection": {
            "$ref": "#/components/schemas/waas.ProtectionStatus"
          },
          "firstScanTime": {
            "description": "Date/time when this image was first scanned (preserved during version updates).\n",
            "format": "date-time",
            "type": "string"
          },
          "history": {
            "description": "Docker image history.\n",
            "items": {
              "$ref": "#/components/schemas/shared.ImageHistory"
            },
            "type": "array"
          },
          "hostDevices": {
            "description": "Map from host network device name to IP address.\n",
            "items": {
              "$ref": "#/components/schemas/common.NetworkDeviceIP"
            },
            "type": "array"
          },
          "hostname": {
            "description": "Name of the host that was scanned.\n",
            "type": "string"
          },
          "hosts": {
            "$ref": "#/components/schemas/shared.ImageHosts"
          },
          "id": {
            "description": "Image ID.\n",
            "type": "string"
          },
          "image": {
            "$ref": "#/components/schemas/shared.Image"
          },
          "installedProducts": {
            "$ref": "#/components/schemas/shared.InstalledProducts"
          },
          "instances": {
            "description": "Details about each occurrence of the image (tag + host).\n",
            "items": {
              "$ref": "#/components/schemas/shared.ImageInstance"
            },
            "type": "array"
          },
          "isARM64": {
            "description": "IsARM64 indicates if the architecture of the image is aarch64.\n",
            "type": "boolean"
          },
          "k8sClusterAddr": {
            "description": "Endpoint of the Kubernetes API server.\n",
            "type": "string"
          },
          "labels": {
            "description": "Image labels.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "layers": {
            "description": "Image's filesystem layers. Each layer is a SHA256 digest of the filesystem diff\nSee: https://windsock.io/explaining-docker-image-ids/.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "missingDistroVulnCoverage": {
            "description": "Indicates if the image OS is covered in the IS (true) or not (false).\n",
            "type": "boolean"
          },
          "namespaces": {
            "description": "k8s namespaces of all the containers running this image.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "osDistro": {
            "description": "Name of the OS distribution.\n",
            "type": "string"
          },
          "osDistroRelease": {
            "description": "OS distribution release.\n",
            "type": "string"
          },
          "osDistroVersion": {
            "description": "OS distribution version.\n",
            "type": "string"
          },
          "packageManager": {
            "description": "Indicates if the package manager is installed for the OS.\n",
            "type": "boolean"
          },
          "packages": {
            "description": "Packages which exist in the image.\n",
            "items": {
              "$ref": "#/components/schemas/shared.Packages"
            },
            "type": "array"
          },
          "pullDuration": {
            "description": "PullDuration is the time it took to pull the image.\n",
            "format": "int64",
            "type": "integer"
          },
          "registryNamespace": {
            "description": "IBM cloud namespace to which the image belongs.\n",
            "type": "string"
          },
          "repoDigests": {
            "description": "Digests of the image. Used for content trust (notary). Has one digest per tag.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "repoTag": {
            "$ref": "#/components/schemas/shared.ImageTag"
          },
          "rhelRepos": {
            "description": "RhelRepositories are the (RPM) repositories IDs from which the packages in this image were installed\nUsed for matching vulnerabilities by Red Hat CPEs.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "riskFactors": {
            "$ref": "#/components/schemas/vuln.RiskFactors"
          },
          "scanDuration": {
            "description": "ScanDuration is the total time it took to scan the image.\n",
            "format": "int64",
            "type": "integer"
          },
          "scanID": {
            "description": "ScanID is the ID of the scan.\n",
            "type": "integer"
          },
          "scanTime": {
            "description": "Date/time of the last scan of the image.\n",
            "format": "date-time",
            "type": "string"
          },
          "scanVersion": {
            "description": "Defender version that published the image.\n",
            "type": "string"
          },
          "startupBinaries": {
            "description": "Binaries which are expected to run when the container is created from this image.\n",
            "items": {
              "$ref": "#/components/schemas/shared.Binary"
            },
            "type": "array"
          },
          "stopped": {
            "description": "Stopped indicates whether the host was running during the agentless scan.\n",
            "type": "boolean"
          },
          "tags": {
            "description": "Tags associated with the given image.\n",
            "items": {
              "$ref": "#/components/schemas/shared.ImageTag"
            },
            "type": "array"
          },
          "topLayer": {
            "description": "SHA256 of the image's last layer that is the last element of the Layers field.\n",
            "type": "string"
          },
          "trustResult": {
            "$ref": "#/components/schemas/trust.ImageResult"
          },
          "trustStatus": {
            "$ref": "#/components/schemas/trust.Status"
          },
          "twistlockImage": {
            "description": "Indicates if the image is a Twistlock image (true) or not (false).\n",
            "type": "boolean"
          },
          "type": {
            "$ref": "#/components/schemas/shared.ScanType"
          },
          "vulnerabilities": {
            "description": "CVE vulnerabilities of the image.\n",
            "items": {
              "$ref": "#/components/schemas/vuln.Vulnerability"
            },
            "type": "array"
          },
          "vulnerabilitiesCount": {
            "description": "Total number of vulnerabilities.\n",
            "type": "integer"
          },
          "vulnerabilityDistribution": {
            "$ref": "#/components/schemas/vuln.Distribution"
          },
          "vulnerabilityRiskScore": {
            "description": "Image's CVE risk score.\n",
            "format": "float",
            "type": "number"
          },
          "wildFireUsage": {
            "$ref": "#/components/schemas/wildfire.Usage"
          }
        },
        "type": "object"
      },
      "shared.HostNetworkFirewallProfileAudits": {
        "description": "HostNetworkFirewallProfileAudits represents the host network firewall profile audits",
        "properties": {
          "_id": {
            "description": "ProfileID is the runtime profile ID.\n",
            "type": "string"
          },
          "audits": {
            "additionalProperties": {
              "$ref": "#/components/schemas/shared.HostNetworkFirewallSubtypeAudits"
            },
            "description": "Audits is a map from the audit sub-type to the audit events list.\n",
            "type": "object"
          },
          "cluster": {
            "description": "Cluster is the cluster from which the audit originated.\n",
            "type": "string"
          },
          "collections": {
            "description": "Collections are collections to which this audit applies.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "imageName": {
            "description": "ImageName is the container image name.\n",
            "type": "string"
          },
          "label": {
            "description": "Label represents the container deployment label.\n",
            "type": "string"
          },
          "os": {
            "description": "OS is the operating system distribution.\n",
            "type": "string"
          },
          "resource": {
            "$ref": "#/components/schemas/common.RuntimeResource"
          },
          "time": {
            "description": "Time is the UTC time of the last audit event.\n",
            "format": "date-time",
            "type": "string"
          },
          "total": {
            "description": "Total is the total count of audits per runtime profile.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "shared.HostNetworkFirewallSubtypeAudits": {
        "description": "HostNetworkFirewallSubtypeAudits represents the host network firewall sub type audits per profile",
        "properties": {
          "audits": {
            "description": "Audits are the host network firewall audits associated with the sub-type, limited to the determined capacity.\n",
            "items": {
              "$ref": "#/components/schemas/cnnf.HostAudit"
            },
            "type": "array"
          },
          "count": {
            "description": "Count is the total count of the sub-type audits.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "shared.HostRadarIncomingConnection": {
        "description": "HostRadarIncomingConnection is the incoming connection between two apps in two hosts",
        "properties": {
          "dstHost": {
            "description": "DstHost is the src hostname.\n",
            "type": "string"
          },
          "policyRules": {
            "description": "PolicyRules are the policy rules that are applicable for source/dest. Used for radar display of connections deduced from policy rules.\n",
            "items": {
              "$ref": "#/components/schemas/cnnf.RadarPolicyRule"
            },
            "type": "array"
          },
          "ports": {
            "description": "Ports are the destination ports.\n",
            "items": {
              "$ref": "#/components/schemas/common.PortData"
            },
            "type": "array"
          },
          "srcHash": {
            "$ref": "#/components/schemas/common.ProfileHash"
          },
          "srcHost": {
            "description": "SrcHost is the src hostname.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.IPs": {
        "description": "IPs represents a list of IPs",
        "items": {
          "$ref": "#/components/schemas/string"
        },
        "type": "array"
      },
      "shared.Image": {
        "description": "Image represents a container image",
        "properties": {
          "created": {
            "description": "Date/time when the image was created.\n",
            "format": "date-time",
            "type": "string"
          },
          "entrypoint": {
            "description": "Combined entrypoint of the image (entrypoint + CMD).\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "env": {
            "description": "Image environment variables.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "healthcheck": {
            "description": "Indicates if health checks are enabled (true) or not (false).\n",
            "type": "boolean"
          },
          "history": {
            "description": "Holds the image history.\n",
            "items": {
              "$ref": "#/components/schemas/shared.ImageHistory"
            },
            "type": "array"
          },
          "id": {
            "description": "ID of the image.\n",
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "$ref": "#/components/schemas/string"
            },
            "description": "Image labels.\n",
            "type": "object"
          },
          "layers": {
            "description": "Image filesystem layers.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "os": {
            "description": "Image os type.\n",
            "type": "string"
          },
          "repoDigest": {
            "description": "Image repo digests.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "repoTags": {
            "description": "Image repo tags.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "user": {
            "description": "Image user.\n",
            "type": "string"
          },
          "workingDir": {
            "description": "Base working directory of the image.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.ImageHistory": {
        "description": "ImageHistory represent a layer in the image's history",
        "properties": {
          "baseLayer": {
            "description": "Indicates if this layer originated from the base image (true) or not (false).\n",
            "type": "boolean"
          },
          "created": {
            "description": "Date/time when the image layer was created.\n",
            "format": "int64",
            "type": "integer"
          },
          "emptyLayer": {
            "description": "Indicates if this instruction didn't create a separate layer (true) or not (false).\n",
            "type": "boolean"
          },
          "id": {
            "description": "ID of the layer.\n",
            "type": "string"
          },
          "instruction": {
            "description": "Docker file instruction and arguments used to create this layer.\n",
            "type": "string"
          },
          "sizeBytes": {
            "description": "Size of the layer (in bytes).\n",
            "format": "int64",
            "type": "integer"
          },
          "tags": {
            "description": "Holds the image tags.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "vulnerabilities": {
            "description": "Vulnerabilities which originated from this layer.\n",
            "items": {
              "$ref": "#/components/schemas/vuln.Vulnerability"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "shared.ImageHost": {
        "description": "ImageHost holds information about image scan result per host",
        "properties": {
          "accountID": {
            "description": "AccountID is the cloud account ID the image is associated with.\n",
            "type": "string"
          },
          "appEmbedded": {
            "description": "AppEmbedded indicates if the host is an app embedded host.\n",
            "type": "boolean"
          },
          "cluster": {
            "description": "Cluster is the cluster on which the image is deployed.\n",
            "type": "string"
          },
          "modified": {
            "description": "Modified is the last scan time.\n",
            "format": "date-time",
            "type": "string"
          },
          "namespaces": {
            "description": "Namespaces are the namespaces on which the image is deployed.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "shared.ImageHosts": {
        "additionalProperties": {
          "$ref": "#/components/schemas/shared.ImageHost"
        },
        "description": "ImageHosts is a fast index for image scan results metadata per host",
        "type": "object"
      },
      "shared.ImageInfo": {
        "description": "ImageInfo contains image information collected during image scan",
        "properties": {
          "Secrets": {
            "description": "Secrets are paths to embedded secrets inside the image\nNote: capital letter JSON annotation is kept to avoid converting all images for backward-compatibility support.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "allCompliance": {
            "$ref": "#/components/schemas/vuln.AllCompliance"
          },
          "applications": {
            "description": "Products in the image.\n",
            "items": {
              "$ref": "#/components/schemas/vuln.Application"
            },
            "type": "array"
          },
          "baseImage": {
            "description": "Image\u2019s base image name. Used when filtering the vulnerabilities by base images.\n",
            "type": "string"
          },
          "binaries": {
            "description": "Binaries in the image.\n",
            "items": {
              "$ref": "#/components/schemas/shared.Binary"
            },
            "type": "array"
          },
          "cloudMetadata": {
            "$ref": "#/components/schemas/common.CloudMetadata"
          },
          "clusters": {
            "description": "Cluster names.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "complianceDistribution": {
            "$ref": "#/components/schemas/vuln.Distribution"
          },
          "complianceIssues": {
            "description": "All the compliance issues.\n",
            "items": {
              "$ref": "#/components/schemas/vuln.Vulnerability"
            },
            "type": "array"
          },
          "complianceIssuesCount": {
            "description": "Number of compliance issues.\n",
            "type": "integer"
          },
          "complianceRiskScore": {
            "description": "Compliance risk score for the image.\n",
            "format": "float",
            "type": "number"
          },
          "creationTime": {
            "description": "Date/time when the image was created.\n",
            "format": "date-time",
            "type": "string"
          },
          "distro": {
            "description": "Full name of the distribution.\n",
            "type": "string"
          },
          "ecsClusterName": {
            "description": "ECS cluster name.\n",
            "type": "string"
          },
          "externalLabels": {
            "description": "Kubernetes external labels of all containers running this image.\n",
            "items": {
              "$ref": "#/components/schemas/common.ExternalLabel"
            },
            "type": "array"
          },
          "files": {
            "description": "Files in the container.\n",
            "items": {
              "$ref": "#/components/schemas/shared.FileDetails"
            },
            "type": "array"
          },
          "firstScanTime": {
            "description": "Date/time when this image was first scanned (preserved during version updates).\n",
            "format": "date-time",
            "type": "string"
          },
          "history": {
            "description": "Docker image history.\n",
            "items": {
              "$ref": "#/components/schemas/shared.ImageHistory"
            },
            "type": "array"
          },
          "hostDevices": {
            "description": "Map from host network device name to IP address.\n",
            "items": {
              "$ref": "#/components/schemas/common.NetworkDeviceIP"
            },
            "type": "array"
          },
          "id": {
            "description": "Image ID.\n",
            "type": "string"
          },
          "image": {
            "$ref": "#/components/schemas/shared.Image"
          },
          "installedProducts": {
            "$ref": "#/components/schemas/shared.InstalledProducts"
          },
          "isARM64": {
            "description": "IsARM64 indicates if the architecture of the image is aarch64.\n",
            "type": "boolean"
          },
          "k8sClusterAddr": {
            "description": "Endpoint of the Kubernetes API server.\n",
            "type": "string"
          },
          "labels": {
            "description": "Image labels.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "layers": {
            "description": "Image's filesystem layers. Each layer is a SHA256 digest of the filesystem diff\nSee: https://windsock.io/explaining-docker-image-ids/.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "missingDistroVulnCoverage": {
            "description": "Indicates if the image OS is covered in the IS (true) or not (false).\n",
            "type": "boolean"
          },
          "namespaces": {
            "description": "k8s namespaces of all the containers running this image.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "osDistro": {
            "description": "Name of the OS distribution.\n",
            "type": "string"
          },
          "osDistroRelease": {
            "description": "OS distribution release.\n",
            "type": "string"
          },
          "osDistroVersion": {
            "description": "OS distribution version.\n",
            "type": "string"
          },
          "packageManager": {
            "description": "Indicates if the package manager is installed for the OS.\n",
            "type": "boolean"
          },
          "packages": {
            "description": "Packages which exist in the image.\n",
            "items": {
              "$ref": "#/components/schemas/shared.Packages"
            },
            "type": "array"
          },
          "registryNamespace": {
            "description": "IBM cloud namespace to which the image belongs.\n",
            "type": "string"
          },
          "repoDigests": {
            "description": "Digests of the image. Used for content trust (notary). Has one digest per tag.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "repoTag": {
            "$ref": "#/components/schemas/shared.ImageTag"
          },
          "rhelRepos": {
            "description": "RhelRepositories are the (RPM) repositories IDs from which the packages in this image were installed\nUsed for matching vulnerabilities by Red Hat CPEs.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "riskFactors": {
            "$ref": "#/components/schemas/vuln.RiskFactors"
          },
          "scanVersion": {
            "description": "Defender version that published the image.\n",
            "type": "string"
          },
          "startupBinaries": {
            "description": "Binaries which are expected to run when the container is created from this image.\n",
            "items": {
              "$ref": "#/components/schemas/shared.Binary"
            },
            "type": "array"
          },
          "tags": {
            "description": "Tags associated with the given image.\n",
            "items": {
              "$ref": "#/components/schemas/shared.ImageTag"
            },
            "type": "array"
          },
          "topLayer": {
            "description": "SHA256 of the image's last layer that is the last element of the Layers field.\n",
            "type": "string"
          },
          "twistlockImage": {
            "description": "Indicates if the image is a Twistlock image (true) or not (false).\n",
            "type": "boolean"
          },
          "vulnerabilities": {
            "description": "CVE vulnerabilities of the image.\n",
            "items": {
              "$ref": "#/components/schemas/vuln.Vulnerability"
            },
            "type": "array"
          },
          "vulnerabilitiesCount": {
            "description": "Total number of vulnerabilities.\n",
            "type": "integer"
          },
          "vulnerabilityDistribution": {
            "$ref": "#/components/schemas/vuln.Distribution"
          },
          "vulnerabilityRiskScore": {
            "description": "Image's CVE risk score.\n",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "shared.ImageInstance": {
        "description": "ImageInstance represents an image on a single host",
        "properties": {
          "host": {
            "description": ".\n",
            "type": "string"
          },
          "image": {
            "description": ".\n",
            "type": "string"
          },
          "modified": {
            "description": ".\n",
            "format": "date-time",
            "type": "string"
          },
          "registry": {
            "description": ".\n",
            "type": "string"
          },
          "repo": {
            "description": ".\n",
            "type": "string"
          },
          "tag": {
            "description": ".\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.ImageScanResult": {
        "description": "ImageScanResult holds the result of an image scan",
        "properties": {
          "Secrets": {
            "description": "Secrets are paths to embedded secrets inside the image\nNote: capital letter JSON annotation is kept to avoid converting all images for backward-compatibility support.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "_id": {
            "description": "Image identifier (image ID or repo:tag).\n",
            "type": "string"
          },
          "agentless": {
            "description": "Agentless indicates that the host was scanned with the agentless scanner.\n",
            "type": "boolean"
          },
          "allCompliance": {
            "$ref": "#/components/schemas/vuln.AllCompliance"
          },
          "appEmbedded": {
            "description": "Indicates that this image was scanned by an App-Embedded Defender.\n",
            "type": "boolean"
          },
          "applications": {
            "description": "Products in the image.\n",
            "items": {
              "$ref": "#/components/schemas/vuln.Application"
            },
            "type": "array"
          },
          "baseImage": {
            "description": "Image\u2019s base image name. Used when filtering the vulnerabilities by base images.\n",
            "type": "string"
          },
          "binaries": {
            "description": "Binaries in the image.\n",
            "items": {
              "$ref": "#/components/schemas/shared.Binary"
            },
            "type": "array"
          },
          "cloudMetadata": {
            "$ref": "#/components/schemas/common.CloudMetadata"
          },
          "clusters": {
            "description": "Cluster names.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "collections": {
            "description": "Collections to which this result applies.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "complianceDistribution": {
            "$ref": "#/components/schemas/vuln.Distribution"
          },
          "complianceIssues": {
            "description": "All the compliance issues.\n",
            "items": {
              "$ref": "#/components/schemas/vuln.Vulnerability"
            },
            "type": "array"
          },
          "complianceIssuesCount": {
            "description": "Number of compliance issues.\n",
            "type": "integer"
          },
          "complianceRiskScore": {
            "description": "Compliance risk score for the image.\n",
            "format": "float",
            "type": "number"
          },
          "creationTime": {
            "description": "Date/time when the image was created.\n",
            "format": "date-time",
            "type": "string"
          },
          "distro": {
            "description": "Full name of the distribution.\n",
            "type": "string"
          },
          "ecsClusterName": {
            "description": "ECS cluster name.\n",
            "type": "string"
          },
          "err": {
            "description": "Description of an error that occurred during image health scan.\n",
            "type": "string"
          },
          "externalLabels": {
            "description": "Kubernetes external labels of all containers running this image.\n",
            "items": {
              "$ref": "#/components/schemas/common.ExternalLabel"
            },
            "type": "array"
          },
          "files": {
            "description": "Files in the container.\n",
            "items": {
              "$ref": "#/components/schemas/shared.FileDetails"
            },
            "type": "array"
          },
          "firewallProtection": {
            "$ref": "#/components/schemas/waas.ProtectionStatus"
          },
          "firstScanTime": {
            "description": "Date/time when this image was first scanned (preserved during version updates).\n",
            "format": "date-time",
            "type": "string"
          },
          "history": {
            "description": "Docker image history.\n",
            "items": {
              "$ref": "#/components/schemas/shared.ImageHistory"
            },
            "type": "array"
          },
          "hostDevices": {
            "description": "Map from host network device name to IP address.\n",
            "items": {
              "$ref": "#/components/schemas/common.NetworkDeviceIP"
            },
            "type": "array"
          },
          "hostname": {
            "description": "Name of the host that was scanned.\n",
            "type": "string"
          },
          "hosts": {
            "$ref": "#/components/schemas/shared.ImageHosts"
          },
          "id": {
            "description": "Image ID.\n",
            "type": "string"
          },
          "image": {
            "$ref": "#/components/schemas/shared.Image"
          },
          "installedProducts": {
            "$ref": "#/components/schemas/shared.InstalledProducts"
          },
          "instances": {
            "description": "Details about each occurrence of the image (tag + host).\n",
            "items": {
              "$ref": "#/components/schemas/shared.ImageInstance"
            },
            "type": "array"
          },
          "isARM64": {
            "description": "IsARM64 indicates if the architecture of the image is aarch64.\n",
            "type": "boolean"
          },
          "k8sClusterAddr": {
            "description": "Endpoint of the Kubernetes API server.\n",
            "type": "string"
          },
          "labels": {
            "description": "Image labels.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "layers": {
            "description": "Image's filesystem layers. Each layer is a SHA256 digest of the filesystem diff\nSee: https://windsock.io/explaining-docker-image-ids/.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "missingDistroVulnCoverage": {
            "description": "Indicates if the image OS is covered in the IS (true) or not (false).\n",
            "type": "boolean"
          },
          "namespaces": {
            "description": "k8s namespaces of all the containers running this image.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "osDistro": {
            "description": "Name of the OS distribution.\n",
            "type": "string"
          },
          "osDistroRelease": {
            "description": "OS distribution release.\n",
            "type": "string"
          },
          "osDistroVersion": {
            "description": "OS distribution version.\n",
            "type": "string"
          },
          "packageManager": {
            "description": "Indicates if the package manager is installed for the OS.\n",
            "type": "boolean"
          },
          "packages": {
            "description": "Packages which exist in the image.\n",
            "items": {
              "$ref": "#/components/schemas/shared.Packages"
            },
            "type": "array"
          },
          "pullDuration": {
            "description": "PullDuration is the time it took to pull the image.\n",
            "format": "int64",
            "type": "integer"
          },
          "registryNamespace": {
            "description": "IBM cloud namespace to which the image belongs.\n",
            "type": "string"
          },
          "repoDigests": {
            "description": "Digests of the image. Used for content trust (notary). Has one digest per tag.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "repoTag": {
            "$ref": "#/components/schemas/shared.ImageTag"
          },
          "rhelRepos": {
            "description": "RhelRepositories are the (RPM) repositories IDs from which the packages in this image were installed\nUsed for matching vulnerabilities by Red Hat CPEs.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "riskFactors": {
            "$ref": "#/components/schemas/vuln.RiskFactors"
          },
          "scanDuration": {
            "description": "ScanDuration is the total time it took to scan the image.\n",
            "format": "int64",
            "type": "integer"
          },
          "scanID": {
            "description": "ScanID is the ID of the scan.\n",
            "type": "integer"
          },
          "scanTime": {
            "description": "Date/time of the last scan of the image.\n",
            "format": "date-time",
            "type": "string"
          },
          "scanVersion": {
            "description": "Defender version that published the image.\n",
            "type": "string"
          },
          "startupBinaries": {
            "description": "Binaries which are expected to run when the container is created from this image.\n",
            "items": {
              "$ref": "#/components/schemas/shared.Binary"
            },
            "type": "array"
          },
          "stopped": {
            "description": "Stopped indicates whether the host was running during the agentless scan.\n",
            "type": "boolean"
          },
          "tags": {
            "description": "Tags associated with the given image.\n",
            "items": {
              "$ref": "#/components/schemas/shared.ImageTag"
            },
            "type": "array"
          },
          "topLayer": {
            "description": "SHA256 of the image's last layer that is the last element of the Layers field.\n",
            "type": "string"
          },
          "trustResult": {
            "$ref": "#/components/schemas/trust.ImageResult"
          },
          "trustStatus": {
            "$ref": "#/components/schemas/trust.Status"
          },
          "twistlockImage": {
            "description": "Indicates if the image is a Twistlock image (true) or not (false).\n",
            "type": "boolean"
          },
          "type": {
            "$ref": "#/components/schemas/shared.ScanType"
          },
          "vulnerabilities": {
            "description": "CVE vulnerabilities of the image.\n",
            "items": {
              "$ref": "#/components/schemas/vuln.Vulnerability"
            },
            "type": "array"
          },
          "vulnerabilitiesCount": {
            "description": "Total number of vulnerabilities.\n",
            "type": "integer"
          },
          "vulnerabilityDistribution": {
            "$ref": "#/components/schemas/vuln.Distribution"
          },
          "vulnerabilityRiskScore": {
            "description": "Image's CVE risk score.\n",
            "format": "float",
            "type": "number"
          },
          "wildFireUsage": {
            "$ref": "#/components/schemas/wildfire.Usage"
          }
        },
        "type": "object"
      },
      "shared.ImageTag": {
        "description": "ImageTag represents an image repository and its associated tag or registry digest",
        "properties": {
          "digest": {
            "description": "Image digest (requires V2 or later registry).\n",
            "type": "string"
          },
          "id": {
            "description": "ID of the image.\n",
            "type": "string"
          },
          "registry": {
            "description": "Registry name to which the image belongs.\n",
            "type": "string"
          },
          "repo": {
            "description": "Repository name to which the image belongs.\n",
            "type": "string"
          },
          "tag": {
            "description": "Image tag.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.Incident": {
        "description": "Incident represents an incident",
        "properties": {
          "_id": {
            "description": "Internal ID of the incident.\n",
            "type": "string"
          },
          "accountID": {
            "description": "Cloud account ID.\n",
            "type": "string"
          },
          "acknowledged": {
            "description": "Indicates if the incident has been acknowledged (true) or not (false).\n",
            "type": "boolean"
          },
          "app": {
            "description": "Application that caused the incident.\n",
            "type": "string"
          },
          "appID": {
            "description": "Application ID.\n",
            "type": "string"
          },
          "audits": {
            "description": "All runtime audits of the incident.\n",
            "items": {
              "$ref": "#/components/schemas/shared.RuntimeAudit"
            },
            "type": "array"
          },
          "category": {
            "$ref": "#/components/schemas/shared.IncidentCategory"
          },
          "cluster": {
            "description": "Cluster on which the incident was found.\n",
            "type": "string"
          },
          "collections": {
            "description": "Collections to which this incident applies.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "containerID": {
            "description": "ID of the container that triggered the incident.\n",
            "type": "string"
          },
          "containerName": {
            "description": "Unique container name.\n",
            "type": "string"
          },
          "customRuleName": {
            "description": "Name of the custom runtime rule that triggered the incident.\n",
            "type": "string"
          },
          "fqdn": {
            "description": "Current hostname's full domain name.\n",
            "type": "string"
          },
          "function": {
            "description": "Name of the serverless function.\n",
            "type": "string"
          },
          "hostname": {
            "description": "Current hostname.\n",
            "type": "string"
          },
          "imageID": {
            "description": "Container image ID.\n",
            "type": "string"
          },
          "imageName": {
            "description": "Container image name.\n",
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "$ref": "#/components/schemas/string"
            },
            "description": "Custom labels associated with the container.\n",
            "type": "object"
          },
          "namespace": {
            "description": "k8s deployment namespace.\n",
            "type": "string"
          },
          "profileID": {
            "description": "Runtime profile ID.\n",
            "type": "string"
          },
          "provider": {
            "$ref": "#/components/schemas/common.CloudProvider"
          },
          "region": {
            "description": "Region of the resource on which the incident was found.\n",
            "type": "string"
          },
          "resourceID": {
            "description": "Unique ID of the resource on which the incident was found.\n",
            "type": "string"
          },
          "runtime": {
            "description": "Runtime of the serverless function.\n",
            "type": "string"
          },
          "serialNum": {
            "description": "Serial number of the incident.\n",
            "type": "integer"
          },
          "shouldCollect": {
            "description": "Indicates if this incident should be collected (true) or not (false).\n",
            "type": "boolean"
          },
          "time": {
            "description": "Time of the incident (in UTC time).\n",
            "format": "date-time",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/shared.IncidentType"
          },
          "vmID": {
            "description": "Azure unique vm ID on which the incident was found.\n",
            "type": "string"
          },
          "windows": {
            "description": "Windows indicates if defender OS type is Windows.\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "shared.IncidentCategory": {
        "description": "IncidentCategory is the incident category",
        "enum": [
          [
            "portScanning",
            "hijackedProcess",
            "dataExfiltration",
            "kubernetes",
            "backdoorAdministrativeAccount",
            "backdoorSSHAccess",
            "cryptoMiner",
            "lateralMovement",
            "bruteForce",
            "customRule",
            "alteredBinary",
            "suspiciousBinary",
            "executionFlowHijackAttempt",
            "reverseShell",
            "malware",
            "cloudProvider"
          ]
        ],
        "type": "string"
      },
      "shared.IncidentType": {
        "description": "IncidentType is the type of the incident",
        "enum": [
          [
            "host",
            "container",
            "function",
            "appEmbedded"
          ]
        ],
        "type": "string"
      },
      "shared.InstalledProducts": {
        "description": "InstalledProducts contains data regarding products running in environment\nTODO #34713: Swarm support was deprecated in Joule, remove swarm node/manager boolean (and related compliance) in Lagrange",
        "properties": {
          "agentless": {
            "description": "Agentless indicates whether the scan was performed with agentless approach.\n",
            "type": "boolean"
          },
          "apache": {
            "description": "Apache indicates the apache server version, empty in case apache not running.\n",
            "type": "string"
          },
          "awsCloud": {
            "description": "AWSCloud indicates whether AWS cloud is used.\n",
            "type": "boolean"
          },
          "crio": {
            "description": "CRI indicates whether the container runtime is CRI (and not docker).\n",
            "type": "boolean"
          },
          "docker": {
            "description": "Docker represents the docker daemon version.\n",
            "type": "string"
          },
          "dockerEnterprise": {
            "description": "DockerEnterprise indicates whether the enterprise version of Docker is installed.\n",
            "type": "boolean"
          },
          "hasPackageManager": {
            "description": "HasPackageManager indicates whether package manager is installed on the OS.\n",
            "type": "boolean"
          },
          "k8sApiServer": {
            "description": "K8sApiServer indicates whether a kubernetes api server is running.\n",
            "type": "boolean"
          },
          "k8sControllerManager": {
            "description": "K8sControllerManager indicates whether a kubernetes controller manager is running.\n",
            "type": "boolean"
          },
          "k8sEtcd": {
            "description": "K8sEtcd indicates whether etcd is running.\n",
            "type": "boolean"
          },
          "k8sFederationApiServer": {
            "description": "K8sFederationApiServer indicates whether a federation api server is running.\n",
            "type": "boolean"
          },
          "k8sFederationControllerManager": {
            "description": "K8sFederationControllerManager indicates whether a federation controller manager is running.\n",
            "type": "boolean"
          },
          "k8sKubelet": {
            "description": "K8sKubelet indicates whether kubelet is running.\n",
            "type": "boolean"
          },
          "k8sProxy": {
            "description": "K8sProxy indicates whether a kubernetes proxy is running.\n",
            "type": "boolean"
          },
          "k8sScheduler": {
            "description": "K8sScheduler indicates whether the a kubernetes scheduler is running.\n",
            "type": "boolean"
          },
          "kubernetes": {
            "description": "Kubernetes represents the kubernetes version.\n",
            "type": "string"
          },
          "openshift": {
            "description": "Openshift indicates whether openshift is deployed.\n",
            "type": "boolean"
          },
          "openshiftVersion": {
            "description": "OpenshiftVersion represents the running openshift version.\n",
            "type": "string"
          },
          "osDistro": {
            "description": "OSDistro specifies the os distribution.\n",
            "type": "string"
          },
          "serverless": {
            "description": "Serverless indicates whether evaluated on a serverless environment.\n",
            "type": "boolean"
          },
          "swarmManager": {
            "description": "SwarmManager indicates whether a swarm manager is running.\n",
            "type": "boolean"
          },
          "swarmNode": {
            "description": "SwarmNode indicates whether the node is part of an active swarm.\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "shared.InternetConnections": {
        "description": "InternetConnections represents the radar internet connections",
        "properties": {
          "incoming": {
            "description": "Incoming is the incoming connections.\n",
            "items": {
              "$ref": "#/components/schemas/shared.Connection"
            },
            "type": "array"
          },
          "outgoing": {
            "description": "Outgoing is the outgoing connections.\n",
            "items": {
              "$ref": "#/components/schemas/shared.Connection"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "shared.JFrogRepoType": {
        "description": "JFrogRepoType represents the type of JFrog Artifactory repository",
        "enum": [
          [
            "local",
            "remote",
            "virtual"
          ]
        ],
        "type": "string"
      },
      "shared.KeyValues": {
        "description": "KeyValues is a generic key values struct",
        "properties": {
          "key": {
            "description": ".\n",
            "type": "string"
          },
          "values": {
            "description": ".\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "shared.KubeClusterRole": {
        "description": "KubeClusterRole is a compact version of Kubernetes ClusterRole\nSee https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.11/#clusterrole-v1-rbac-authorization-k8s-io",
        "properties": {
          "labels": {
            "description": "Labels are the labels associated with the role.\n",
            "items": {
              "$ref": "#/components/schemas/shared.KubeLabel"
            },
            "type": "array"
          },
          "name": {
            "description": "Name is the kubernetes role name.\n",
            "type": "string"
          },
          "roleBinding": {
            "description": "RoleBinding is the name of the role binding used for display.\n",
            "type": "string"
          },
          "rules": {
            "description": "Rules are the policy rules associated with the role.\n",
            "items": {
              "$ref": "#/components/schemas/shared.KubePolicyRule"
            },
            "type": "array"
          },
          "version": {
            "description": "Version is the resource version of the role object maintained by Kubernetes.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.KubeLabel": {
        "description": "KubeLabel represents a label\nThese are stored as an array to allow special characters in key names,\nsee https://docs.mongodb.com/manual/reference/limits/#Restrictions-on-Field-Names\nFor example: kubernetes.io/bootstrapping",
        "properties": {
          "key": {
            "description": "Key is the key of the label.\n",
            "type": "string"
          },
          "value": {
            "description": "Value is the value of the label.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.KubePolicyRule": {
        "description": "KubePolicyRule is a compact version of Kubernetes PolicyRule\nSee https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.11/#policyrule-v1-rbac-authorization-k8s-io",
        "properties": {
          "apiGroups": {
            "description": ".\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "nonResourceURLs": {
            "description": ".\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "resourceNames": {
            "description": ".\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "resources": {
            "description": ".\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "verbs": {
            "description": ".\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "shared.KubeRole": {
        "description": "KubeRole is a compact version of Kubernetes Role\nSee https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.11/#role-v1-rbac-authorization-k8s-io",
        "properties": {
          "labels": {
            "description": "Labels are the labels associated with the role.\n",
            "items": {
              "$ref": "#/components/schemas/shared.KubeLabel"
            },
            "type": "array"
          },
          "name": {
            "description": "Name is the role name.\n",
            "type": "string"
          },
          "namespace": {
            "description": "Namespace is the namespace associated with the role.\n",
            "type": "string"
          },
          "roleBinding": {
            "description": "RoleBinding is the name of the role binding used for display.\n",
            "type": "string"
          },
          "rules": {
            "description": "Rules are the list of rules associated with the cluster role.\n",
            "items": {
              "$ref": "#/components/schemas/shared.KubePolicyRule"
            },
            "type": "array"
          },
          "version": {
            "description": "Version is the resource version of the role object maintained by Kubernetes.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.LambdaRuntimeType": {
        "description": "LambdaRuntimeType represents the runtime type of the serverless function\nThe constants used are taken from: https://docs.aws.amazon.com/lambda/latest/dg/API_CreateFunction.html#SSS-CreateFunction-request-Runtime",
        "enum": [
          [
            "python",
            "python3.6",
            "python3.7",
            "python3.8",
            "python3.9",
            "nodejs12.x",
            "nodejs14.x",
            "dotnetcore2.1",
            "dotnetcore3.1",
            "dotnet6",
            "java8",
            "java11",
            "ruby2.7"
          ]
        ],
        "type": "string"
      },
      "shared.License": {
        "description": "License represent the customer license",
        "properties": {
          "access_token": {
            "description": "AccessToken is the customer access token.\n",
            "type": "string"
          },
          "contract_id": {
            "description": "ContractID is the customer contract ID.\n",
            "type": "string"
          },
          "contract_type": {
            "$ref": "#/components/schemas/shared.LicenseContractType"
          },
          "credits": {
            "description": "Credits the total amount of credits purchased by the customer.\n",
            "type": "integer"
          },
          "customer_id": {
            "description": "CustomerID is the customer ID.\n",
            "type": "string"
          },
          "defender_details": {
            "description": "DefenderDetails represents the defenders license details.\n",
            "items": {
              "$ref": "#/components/schemas/shared.DefenderLicenseDetails"
            },
            "type": "array"
          },
          "defenders": {
            "description": "Deprecated: Defenders is the maximum number of defender allowed in this license. Use DefenderDetails field instead.\n",
            "type": "integer"
          },
          "expiration_date": {
            "description": "ExpirationDate is the license expiration date.\n",
            "format": "date-time",
            "type": "string"
          },
          "issue_date": {
            "description": "IssueDate is the license issue date.\n",
            "format": "date-time",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/shared.LicenseTier"
          },
          "workloads": {
            "description": "Deprecated: Workloads is the number of workloads per license kept for backward compatibility. Use Credits instead.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "shared.LicenseConfig": {
        "description": "LicenseConfig is the compliance policy license configuration",
        "properties": {
          "alertThreshold": {
            "$ref": "#/components/schemas/shared.LicenseThreshold"
          },
          "blockThreshold": {
            "$ref": "#/components/schemas/shared.LicenseThreshold"
          },
          "critical": {
            "description": "Critical is the list of licenses with critical severity.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "high": {
            "description": "High is the list of licenses with high severity.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "low": {
            "description": "Low is the list of licenses with low severity.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "medium": {
            "description": "Medium is the list of licenses with medium severity.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "shared.LicenseContractType": {
        "description": "LicenseContractType is the license contract type",
        "enum": [
          [
            "",
            "host",
            "avg",
            "burndown"
          ]
        ],
        "type": "string"
      },
      "shared.LicenseThreshold": {
        "description": "LicenseThreshold is the license severity threshold to indicate whether to perform an action (alert/block)\nThreshold values typically vary between 0 and 10 (noninclusive)",
        "properties": {
          "enabled": {
            "description": "Enabled indicates that the action is enabled.\n",
            "type": "boolean"
          },
          "value": {
            "description": "Value is the minimum severity score for which the action is enabled.\n",
            "format": "float",
            "type": "number"
          }
        },
        "type": "object"
      },
      "shared.LicenseTier": {
        "description": "LicenseTier represents the license tier of the customer",
        "enum": [
          [
            "",
            "developer",
            "enterprise",
            "evaluation",
            "oem"
          ]
        ],
        "type": "string"
      },
      "shared.LogInspectionEvent": {
        "description": "LogInspectionEvent is a log inspection event detected according to the log inspection rules",
        "properties": {
          "_id": {
            "description": "ID is event's unique identifier.\n",
            "type": "string"
          },
          "accountID": {
            "description": "AccountID is the cloud account ID.\n",
            "type": "string"
          },
          "cluster": {
            "description": "Cluster is the cluster on which the event was found.\n",
            "type": "string"
          },
          "collections": {
            "description": "Collections are collections to which this event applies.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "hostname": {
            "description": "Hostname is the hostname on which the event was found.\n",
            "type": "string"
          },
          "line": {
            "description": "Line is the matching log line.\n",
            "type": "string"
          },
          "logfile": {
            "description": "Logfile is the log file which triggered the event.\n",
            "type": "string"
          },
          "ruleName": {
            "description": "RuleName is the name of the applied rule for auditing log inspection events.\n",
            "type": "string"
          },
          "time": {
            "description": "Time is the time of the event.\n",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.LoggerSetting": {
        "description": "LoggerSetting are a specific logger settings",
        "properties": {
          "allProcEvents": {
            "description": "AllProcEvents indicates whether any new spawned container process should generate an event source entry.\n",
            "type": "boolean"
          },
          "enabled": {
            "description": "Enabled indicates whether log feature is enabled.\n",
            "type": "boolean"
          },
          "verboseScan": {
            "description": "VerboseScan indicates whether detailed scan (Compliance/Vulnerability) result should be written to event logger.\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "shared.LoggingSettings": {
        "description": "LoggingSettings are the logging settings",
        "properties": {
          "consoleAddress": {
            "description": "ConsoleAddress is the console address used by the admin to access the console, used for creating links for runtime events.\n",
            "type": "string"
          },
          "enableMetricsCollection": {
            "description": "EnableMetricsCollection indicates whether metric collections feature is enabled.\n",
            "type": "boolean"
          },
          "includeRuntimeLink": {
            "description": "IncludeRuntimeLink indicates whether link to forensic event should be included in the output.\n",
            "type": "boolean"
          },
          "stdout": {
            "$ref": "#/components/schemas/shared.LoggerSetting"
          },
          "syslog": {
            "$ref": "#/components/schemas/shared.SyslogSettings"
          }
        },
        "type": "object"
      },
      "shared.Malware": {
        "description": "Malware is an executable and its md5",
        "properties": {
          "allowed": {
            "description": "Allowed indicates if this signature is on the allowed list.\n",
            "type": "boolean"
          },
          "md5": {
            "description": ".\n",
            "type": "string"
          },
          "modified": {
            "description": "Modified is the time the malware was added to the DB.\n",
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "description": ".\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.MgmtAudit": {
        "description": "MgmtAudit represents a management audit in the system",
        "properties": {
          "api": {
            "description": "API is the api used in the audit process.\n",
            "type": "string"
          },
          "diff": {
            "description": "Diff is the diff between old and new values.\n",
            "type": "string"
          },
          "failure": {
            "description": "Failure states whether the request failed or not.\n",
            "type": "boolean"
          },
          "sourceIP": {
            "description": "SourceIP is the request's source IP.\n",
            "type": "string"
          },
          "status": {
            "description": "Status is the request's response status.\n",
            "type": "string"
          },
          "time": {
            "description": "Time is the time of the request.\n",
            "format": "date-time",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/shared.MgmtType"
          },
          "username": {
            "description": "Username is the username of the user who performed the action.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.MgmtType": {
        "description": "MgmtType represents management audit types",
        "enum": [
          [
            "login",
            "profile",
            "settings",
            "rule",
            "user",
            "group",
            "credential",
            "tag",
            "role"
          ]
        ],
        "type": "string"
      },
      "shared.NetworkInfo": {
        "description": "NetworkInfo contains data about a container regarding a specific network",
        "properties": {
          "ipAddress": {
            "description": "IPAddress is the container IP.\n",
            "type": "string"
          },
          "macAddress": {
            "description": "MacAddress is the container MAC.\n",
            "type": "string"
          },
          "name": {
            "description": "Name is the network name.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.Package": {
        "description": "Package stores relevant package information",
        "properties": {
          "binaryIdx": {
            "description": "Indexes of the top binaries which use the package.\n",
            "items": {
              "$ref": "#/components/schemas/int16"
            },
            "type": "array"
          },
          "binaryPkgs": {
            "description": "Names of the distro binary packages (packages which are built on the source of the package).\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "cveCount": {
            "description": "Total number of CVEs for this specific package.\n",
            "type": "integer"
          },
          "files": {
            "description": "List of package-related files and their hashes. Only included when the appropriate scan option is set.\n",
            "items": {
              "$ref": "#/components/schemas/shared.FileDetails"
            },
            "type": "array"
          },
          "functionLayer": {
            "description": "ID of the serverless layer in which the package was discovered.\n",
            "type": "string"
          },
          "layerTime": {
            "description": "Image layer to which the package belongs (layer creation time).\n",
            "format": "int64",
            "type": "integer"
          },
          "license": {
            "description": "License information for the package.\n",
            "type": "string"
          },
          "name": {
            "description": "Name of the package.\n",
            "type": "string"
          },
          "path": {
            "description": "Full package path (e.g., JAR or Node.js package path).\n",
            "type": "string"
          },
          "version": {
            "description": "Package version.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.Packages": {
        "description": "Packages is a collection of packages",
        "properties": {
          "pkgs": {
            "description": "List of packages.\n",
            "items": {
              "$ref": "#/components/schemas/shared.Package"
            },
            "type": "array"
          },
          "pkgsType": {
            "$ref": "#/components/schemas/vuln.PackageType"
          }
        },
        "type": "object"
      },
      "shared.Policy": {
        "description": "Policy represents a policy that should be enforced by the Auditor",
        "properties": {
          "_id": {
            "description": "Internal identifier.\n",
            "type": "string"
          },
          "policyType": {
            "$ref": "#/components/schemas/common.PolicyType"
          },
          "rules": {
            "description": "Rules holds all policy rules.\n",
            "items": {
              "$ref": "#/components/schemas/shared.PolicyRule"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "shared.PolicyRule": {
        "description": "PolicyRule is a single rule in the policy",
        "properties": {
          "action": {
            "description": "Action to take.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "alertThreshold": {
            "$ref": "#/components/schemas/shared.AlertThreshold"
          },
          "allCompliance": {
            "description": "Reports the results of all compliance checks (both passed and failed) (true).\n",
            "type": "boolean"
          },
          "auditAllowed": {
            "description": "Specifies if Prisma Cloud audits successful transactions.\n",
            "type": "boolean"
          },
          "blockMsg": {
            "$ref": "#/components/schemas/common.PolicyBlockMsg"
          },
          "blockThreshold": {
            "$ref": "#/components/schemas/shared.BlockThreshold"
          },
          "collections": {
            "description": "List of collections. Used to scope the rule.\n",
            "items": {
              "$ref": "#/components/schemas/collection.Collection"
            },
            "type": "array"
          },
          "condition": {
            "$ref": "#/components/schemas/shared.Conditions"
          },
          "createPR": {
            "description": "CreatePR indicates whether to create a pull request for vulnerability fixes (relevant for code repos).\n",
            "type": "boolean"
          },
          "cveRules": {
            "description": "List of CVE IDs classified for special handling (also known as exceptions).\n",
            "items": {
              "$ref": "#/components/schemas/shared.CVERule"
            },
            "type": "array"
          },
          "disabled": {
            "description": "Indicates if the rule is currently disabled (true) or not (false).\n",
            "type": "boolean"
          },
          "effect": {
            "$ref": "#/components/schemas/common.PolicyEffect"
          },
          "graceDays": {
            "description": "Number of days to suppress the rule's block effect. Measured from date the vuln was fixed. If there's no fix, measured from the date the vuln was published.\n",
            "type": "integer"
          },
          "graceDaysPolicy": {
            "$ref": "#/components/schemas/shared.GraceDaysPolicy"
          },
          "group": {
            "description": "Applicable groups.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "license": {
            "$ref": "#/components/schemas/shared.LicenseConfig"
          },
          "modified": {
            "description": "Datetime when the rule was last modified.\n",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "Name of the rule.\n",
            "type": "string"
          },
          "notes": {
            "description": "Free-form text.\n",
            "type": "string"
          },
          "onlyFixed": {
            "description": "Applies rule only when vendor fixes are available (true).\n",
            "type": "boolean"
          },
          "owner": {
            "description": "User who created or last modified the rule.\n",
            "type": "string"
          },
          "previousName": {
            "description": "Previous name of the rule. Required for rule renaming.\n",
            "type": "string"
          },
          "principal": {
            "description": "Applicable users.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "tags": {
            "description": "List of tags classified for special handling (also known as exceptions).\n",
            "items": {
              "$ref": "#/components/schemas/shared.TagRule"
            },
            "type": "array"
          },
          "verbose": {
            "description": "Displays a detailed message when an operation is blocked (true).\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "shared.Port": {
        "description": "Port is a container port",
        "properties": {
          "containerPort": {
            "description": "ContainerPort is the mapped port inside the container.\n",
            "type": "string"
          },
          "hostIP": {
            "description": "HostIP is the host IP.\n",
            "type": "string"
          },
          "hostPort": {
            "description": "HostPort is the host port.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "shared.ProfileKubernetesData": {
        "description": "ProfileKubernetesData holds Kubernetes data",
        "properties": {
          "clusterRoles": {
            "description": "ClusterRoles are the cluster roles of the associated service account.\n",
            "items": {
              "$ref": "#/components/schemas/shared.KubeClusterRole"
            },
            "type": "array"
          },
          "roles": {
            "description": "Roles are the roles of the associated service account.\n",
            "items": {
              "$ref": "#/components/schemas/shared.KubeRole"
            },
            "type": "array"
          },
          "serviceAccount": {
            "description": "ServiceAccount is the service account used to access Kubernetes apiserver\nThis field will be empty if the container is not running inside of a Pod.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.Progress": {
        "description": "Progress represents the scanning progress",
        "properties": {
          "discovery": {
            "description": "Discovery indicates whether the scan is in discovery phase.\n",
            "type": "boolean"
          },
          "error": {
            "description": "Error is the error that happened during scan.\n",
            "type": "string"
          },
          "hostname": {
            "description": "Hostname is the hostname for which the progress apply.\n",
            "type": "string"
          },
          "id": {
            "description": "ID is the ID of the entity being scanned.\n",
            "type": "string"
          },
          "scanTime": {
            "description": "ScanTime is the time of scan.\n",
            "format": "date-time",
            "type": "string"
          },
          "scanned": {
            "description": "Scanned is the number of entities for which the scan completed.\n",
            "type": "integer"
          },
          "title": {
            "description": "Title is the progress title (set by the scanning process).\n",
            "type": "string"
          },
          "total": {
            "description": "Total is the total amount of entities that should be scanned.\n",
            "type": "integer"
          },
          "type": {
            "$ref": "#/components/schemas/shared.ScanType"
          }
        },
        "type": "object"
      },
      "shared.RegionData": {
        "description": "RegionData contains data regarding a region",
        "properties": {
          "coordinates": {
            "$ref": "#/components/schemas/shared.Coordinates"
          },
          "name": {
            "description": "Name is the region display name.\n",
            "type": "string"
          },
          "region": {
            "description": "Region is the region code name.\n",
            "type": "string"
          },
          "regionType": {
            "$ref": "#/components/schemas/shared.AwsRegionType"
          },
          "supportedServices": {
            "description": "SupportedServices is a list of cloud service types the region supports.\n",
            "items": {
              "$ref": "#/components/schemas/shared.ScanResultType"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "shared.RegionDataByCloudProvider": {
        "additionalProperties": {
          "$ref": "#/components/schemas/-_shared.RegionData"
        },
        "description": "RegionDataByCloudProvider represents the region data per cloud provider",
        "type": "object"
      },
      "shared.RegistryOSType": {
        "description": "RegistryOSType specifies the registry images base OS type",
        "enum": [
          [
            "linux",
            "linuxARM64",
            "windows"
          ]
        ],
        "type": "string"
      },
      "shared.RegistryScanRequest": {
        "description": "RegistryScanRequest represents a registry scan request",
        "properties": {
          "scanID": {
            "description": "ScanID is the ID of the scan.\n",
            "type": "integer"
          },
          "settings": {
            "$ref": "#/components/schemas/shared.RegistrySpecification"
          },
          "tag": {
            "$ref": "#/components/schemas/shared.ImageTag"
          },
          "type": {
            "description": "Type indicates the type of the scan request.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "shared.RegistrySettings": {
        "description": "RegistrySettings contains each registry's unique settings",
        "properties": {
          "harborScannerUrlSuffix": {
            "description": "Relative path to the Harbor scanner endpoint.\n",
            "type": "string"
          },
          "specifications": {
            "description": "Information for connecting to the registries to be scanned.\n",
            "items": {
              "$ref": "#/components/schemas/shared.RegistrySpecification"
            },
            "type": "array"
          },
          "webhookUrlSuffix": {
            "description": "Relative path to the webhook HTTP endpoint.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.RegistrySpecification": {
        "description": "RegistrySpecification contains information for connecting to local/remote registry",
        "properties": {
          "cap": {
            "description": "Specifies the maximum number of images from each repo to fetch and scan, sorted by most recently modified.\n",
            "type": "integer"
          },
          "collections": {
            "description": "Specifies the set of Defenders in-scope for working on a scan job.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "credential": {
            "$ref": "#/components/schemas/cred.Credential"
          },
          "credentialID": {
            "description": "ID of the credentials in the credentials store to use for authenticating with the registry.\n",
            "type": "string"
          },
          "excludedRepositories": {
            "description": "Repositories to exclude from scanning.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "excludedTags": {
            "description": "Tags to exclude from scanning.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "harborDeploymentSecurity": {
            "description": "Indicates whether the Prisma Cloud plugin uses temporary tokens provided by Harbor to scan images in projects where Harbor's deployment security setting is enabled.\n",
            "type": "boolean"
          },
          "jfrogRepoTypes": {
            "description": "JFrog Artifactory repository types to scan.\n",
            "items": {
              "$ref": "#/components/schemas/shared.JFrogRepoType"
            },
            "type": "array"
          },
          "namespace": {
            "description": "IBM Bluemix namespace https://console.bluemix.net/docs/services/Registry/registry_overview.html#registry_planning.\n",
            "type": "string"
          },
          "os": {
            "$ref": "#/components/schemas/shared.RegistryOSType"
          },
          "registry": {
            "description": "Registry address (e.g., https://gcr.io).\n",
            "type": "string"
          },
          "repository": {
            "description": "Repositories to scan.\n",
            "type": "string"
          },
          "scanners": {
            "description": "Number of Defenders that can be utilized for each scan job.\n",
            "type": "integer"
          },
          "tag": {
            "description": "Tags to scan.\n",
            "type": "string"
          },
          "version": {
            "description": "Registry type. Determines the protocol Prisma Cloud uses to communicate with the registry.\n",
            "type": "string"
          },
          "versionPattern": {
            "description": "Pattern heuristic for quickly filtering images by tags without having to query all images for modification dates.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.RuntimeAttackType": {
        "description": "RuntimeAttackType is the sub-category of the attack (e.g., malware process, process not in model, etc...)",
        "enum": [
          [
            "",
            "cloudMetadataProbing",
            "kubeletAPIAccess",
            "kubeletReadonlyAccess",
            "kubectlSpawned",
            "kubectlDownloaded",
            "horizontalPortScanning",
            "verticalPortScanning",
            "explicitlyDeniedIP",
            "customFeedIP",
            "feedIP",
            "unexpectedOutboundPort",
            "suspiciousNetworkActivity",
            "unexpectedListeningPort",
            "explicitlyDeniedListeningPort",
            "explicitlyDeniedOutboundPort",
            "listeningPortModifiedProcess",
            "outboundPortModifiedProcess",
            "feedDNS",
            "explicitlyDeniedDNS",
            "dnsQuery",
            "unexpectedProcess",
            "portScanProcess",
            "malwareProcessCustom",
            "malwareProcessFeed",
            "explicitlyDeniedProcess",
            "modifiedProcess",
            "cryptoMinerProcess",
            "lateralMovementProcess",
            "tmpfsProcess",
            "policyHijacked",
            "reverseShell",
            "suidBinaries",
            "unknownOriginBinary",
            "webShell",
            "administrativeAccount",
            "encryptedBinary",
            "sshAccess",
            "explicitlyDeniedFile",
            "malwareFileCustom",
            "malwareFileFeed",
            "execFileAccess",
            "elfFileAccess",
            "secretFileAccess",
            "regFileAccess",
            "wildfireMalware",
            "unknownOriginBinary",
            "webShell",
            "fileIntegrity",
            "alteredBinary",
            "malwareDownloaded",
            "suspiciousELFHeader",
            "executionFlowHijackAttempt",
            "customRule"
          ]
        ],
        "type": "string"
      },
      "shared.RuntimeAudit": {
        "description": "RuntimeAudit represents a runtime audit event (fires when a runtime policy is violated)",
        "properties": {
          "_id": {
            "description": "Internal ID (used for in-place updates).\n",
            "type": "string"
          },
          "accountID": {
            "description": "ID of the cloud account where the audit was generated.\n",
            "type": "string"
          },
          "app": {
            "description": "Name of the service which violated the host policy.\n",
            "type": "string"
          },
          "appID": {
            "description": "Application ID.\n",
            "type": "string"
          },
          "attackTechniques": {
            "description": "MITRE attack techniques.\n",
            "items": {
              "$ref": "#/components/schemas/mitre.Technique"
            },
            "type": "array"
          },
          "attackType": {
            "$ref": "#/components/schemas/shared.RuntimeAttackType"
          },
          "cluster": {
            "description": "Cluster name.\n",
            "type": "string"
          },
          "collections": {
            "description": "Collections to which this audit applies.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "command": {
            "description": "ScrubbedCommand is the command executed by the process with scrubbed PII.\n",
            "type": "string"
          },
          "container": {
            "description": "Indicates if this is a container audit (true) or host audit (false).\n",
            "type": "boolean"
          },
          "containerId": {
            "description": "ID of the container that violates the rule.\n",
            "type": "string"
          },
          "containerName": {
            "description": "Container name.\n",
            "type": "string"
          },
          "count": {
            "description": "Attack type audits count.\n",
            "type": "integer"
          },
          "country": {
            "description": "Outbound country for outgoing network audits.\n",
            "type": "string"
          },
          "domain": {
            "description": "Domain is the requested domain.\n",
            "type": "string"
          },
          "effect": {
            "$ref": "#/components/schemas/runtime.RuleEffect"
          },
          "err": {
            "description": "Unknown error in the audit process.\n",
            "type": "string"
          },
          "filepath": {
            "description": "Filepath is the path of the modified file.\n",
            "type": "string"
          },
          "fqdn": {
            "description": "Current full domain name used in audit alerts.\n",
            "type": "string"
          },
          "function": {
            "description": "Name of the serverless function that caused the audit.\n",
            "type": "string"
          },
          "functionID": {
            "description": "ID of the function invoked.\n",
            "type": "string"
          },
          "hostname": {
            "description": "Current hostname.\n",
            "type": "string"
          },
          "imageId": {
            "description": "Container image ID.\n",
            "type": "string"
          },
          "imageName": {
            "description": "Container image name.\n",
            "type": "string"
          },
          "interactive": {
            "description": "Indicates if the audit was triggered from a process that was spawned in interactive mode (e.g., docker exec ...) (true) or not (false).\n",
            "type": "boolean"
          },
          "ip": {
            "description": "IP is the connection destination IP address.\n",
            "type": "string"
          },
          "label": {
            "description": "Container deployment label.\n",
            "type": "string"
          },
          "labels": {
            "additionalProperties": {
              "$ref": "#/components/schemas/string"
            },
            "description": "Custom labels which augment the audit data.\n",
            "type": "object"
          },
          "md5": {
            "description": "MD5 is the MD5 of the modified file (only for executables.\n",
            "type": "string"
          },
          "msg": {
            "description": "Blocking message text.\n",
            "type": "string"
          },
          "namespace": {
            "description": "K8s deployment namespace.\n",
            "type": "string"
          },
          "os": {
            "description": "Operating system distribution.\n",
            "type": "string"
          },
          "pid": {
            "description": "ID of the process that caused the audit event.\n",
            "type": "integer"
          },
          "port": {
            "description": "Port is the connection destination port.\n",
            "type": "integer"
          },
          "processPath": {
            "description": "Path of the process that caused the audit event.\n",
            "type": "string"
          },
          "profileId": {
            "description": "Profile of the audit.\n",
            "type": "string"
          },
          "provider": {
            "$ref": "#/components/schemas/common.CloudProvider"
          },
          "rawEvent": {
            "description": "Unparsed function handler event input.\n",
            "type": "string"
          },
          "region": {
            "description": "Region of the resource where the audit was generated.\n",
            "type": "string"
          },
          "requestID": {
            "description": "ID of the lambda function invocation request.\n",
            "type": "string"
          },
          "resourceID": {
            "description": "Unique ID of the resource where the audit was generated.\n",
            "type": "string"
          },
          "ruleName": {
            "description": "Name of the rule that was applied, if blocked.\n",
            "type": "string"
          },
          "runtime": {
            "$ref": "#/components/schemas/shared.LambdaRuntimeType"
          },
          "severity": {
            "$ref": "#/components/schemas/shared.RuntimeSeverity"
          },
          "time": {
            "description": "Time of the audit event (in UTC time).\n",
            "format": "date-time",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/shared.RuntimeType"
          },
          "user": {
            "description": "Service user.\n",
            "type": "string"
          },
          "version": {
            "description": "Defender version.\n",
            "type": "string"
          },
          "vmID": {
            "description": "Azure unique vm ID where the audit was generated.\n",
            "type": "string"
          },
          "wildFireReportURL": {
            "description": "WildFireReportURL is a URL link of the report generated by wildFire.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.RuntimeProfileState": {
        "description": "RuntimeProfileState represents the state of an image profile",
        "enum": [
          [
            "learning",
            "dryRun",
            "learningExtended",
            "manualLearning",
            "manualRelearning",
            "active",
            "manualActive"
          ]
        ],
        "type": "string"
      },
      "shared.RuntimeSecretScrubbingSettings": {
        "description": "RuntimeSecretScrubbingSettings holds the runtime secret scrubbing settings",
        "properties": {
          "customSpecs": {
            "description": "CustomSpecs is a collection of generic sensitive data masking patterns.\n",
            "items": {
              "$ref": "#/components/schemas/runtime.SecretScrubbingSpec"
            },
            "type": "array"
          },
          "skipDefault": {
            "description": "SkipDefault indicates whether default secret scrubbing should be skipped.\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "shared.RuntimeSeverity": {
        "description": "RuntimeSeverity represents the runtime severity",
        "enum": [
          [
            "low",
            "medium",
            "high"
          ]
        ],
        "type": "string"
      },
      "shared.RuntimeType": {
        "description": "RuntimeType represents the runtime protection type",
        "enum": [
          [
            "processes",
            "network",
            "kubernetes",
            "filesystem"
          ]
        ],
        "type": "string"
      },
      "shared.ScanResultType": {
        "description": "ScanResultType represents a cloud scan result type",
        "enum": [
          [
            "aws-ecr",
            "aws-lambda",
            "aws-ec2",
            "aws-eks",
            "aws-ecs",
            "aws-s3",
            "aws-config",
            "aws-cloud-trail",
            "aws-kms",
            "aws-cloud-watch",
            "aws-sns",
            "aws-security-hub",
            "aws-secrets-manager",
            "aws-parameter-store",
            "azure-acr",
            "azure-functions",
            "azure-aks",
            "azure-aci",
            "azure-vm",
            "gcp-gcr",
            "gcp-gcf",
            "gcp-gke",
            "gcp-vm",
            "gcp-artifact"
          ]
        ],
        "type": "string"
      },
      "shared.ScanSettings": {
        "description": "ScanSettings are global settings for image/host/container and registry scanning",
        "properties": {
          "agentlessScanPeriodMs": {
            "description": "AgentlessScanPeriodMS is the agentless scan period in ms - validated for minimum 1 hour or disabled with zero.\n",
            "format": "int64",
            "type": "integer"
          },
          "cloudPlatformsScanPeriodMs": {
            "description": "CloudPlatformsScanPeriodMS is the cloud platforms scan period in ms - validated for minimum 1 hour or disabled with zero.\n",
            "format": "int64",
            "type": "integer"
          },
          "codeReposScanPeriodMs": {
            "description": "CodeReposScanPeriodMS is the code repository scan period in ms - validated for minimum 1 hour or disabled with zero.\n",
            "format": "int64",
            "type": "integer"
          },
          "containersScanPeriodMs": {
            "description": "ContainersScanPeriodMS is the container scan period in ms - validated for minimum 1 hour or disabled with zero.\n",
            "format": "int64",
            "type": "integer"
          },
          "extractArchive": {
            "description": "ExtractArchive indicates whether to search within archive during scan is enabled.\n",
            "type": "boolean"
          },
          "imagesScanPeriodMs": {
            "description": "ImageScanPeriodMS is the image scan period in ms - validated for minimum 1 hour or disabled with zero.\n",
            "format": "int64",
            "type": "integer"
          },
          "includeJsDependencies": {
            "description": "IncludeJsDependencies indicates whether to include packages from the \"dependencies\".\n",
            "type": "boolean"
          },
          "registryScanPeriodMs": {
            "description": "RegistryScanPeriodMS is the registry scan period in ms - validated for minimum 1 hour or disabled with zero.\n",
            "format": "int64",
            "type": "integer"
          },
          "registryScanRetentionDays": {
            "description": "RegistryScanRetentionDays is the number of days to keep deleted registry images.\n",
            "type": "integer"
          },
          "scanRunningImages": {
            "description": "ScanRunningImages indicates only images that are used by containers should be used.\n",
            "type": "boolean"
          },
          "serverlessScanPeriodMs": {
            "description": "ServerlessScanPeriodMS is the serverless vulnerability scan period in ms - validated for minimum 1 hour or disabled with zero.\n",
            "format": "int64",
            "type": "integer"
          },
          "showInfraContainers": {
            "description": "ShowInfraContainers indicates infra containers should be shown.\n",
            "type": "boolean"
          },
          "showNegligibleVulnerabilities": {
            "description": "ShowNegligibleVulnerabilities indicates whether to display negligible vulnerabilities (low severity or will not be fixed).\n",
            "type": "boolean"
          },
          "systemScanPeriodMs": {
            "description": "SystemScanPeriodMS is the host scan period in ms - validated for minimum 1 hour or disabled with zero.\n",
            "format": "int64",
            "type": "integer"
          },
          "tasDropletsScanPeriodMs": {
            "description": "TASDropletsScanPeriodMS is the TAS scan period in ms - validated for minimum 1 hour or disabled with zero.\n",
            "format": "int64",
            "type": "integer"
          },
          "vmScanPeriodMs": {
            "description": "VMScanPeriodMS is the VM image scan period in ms - validated for minimum 1 hour or disabled with zero.\n",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "shared.ScanType": {
        "description": "ScanType represents the scanning type performed",
        "enum": [
          [
            "image",
            "ciImage",
            "container",
            "host",
            "agentlessHost",
            "registry",
            "serverlessScan",
            "ciServerless",
            "vm",
            "tas",
            "ciTas",
            "cloudDiscovery",
            "serverlessRadar",
            "serverlessAutoDeploy",
            "hostAutoDeploy",
            "codeRepo",
            "ciCodeRepo"
          ]
        ],
        "type": "string"
      },
      "shared.SecretStoreType": {
        "description": "SecretStoreType is the secrets store type",
        "enum": [
          [
            "hashicorp",
            "hashicorp010",
            "cyberark",
            "awsParameterStore",
            "awsSecretsManager",
            "azure"
          ]
        ],
        "type": "string"
      },
      "shared.SecretsInjectionType": {
        "description": "SecretsInjectionType is the method used to inject secrets to containers",
        "enum": [
          [
            "envvar",
            "filesystem"
          ]
        ],
        "type": "string"
      },
      "shared.SecretsPolicy": {
        "description": "SecretsPolicy defines policy for distribution of secrets to containers",
        "properties": {
          "_id": {
            "description": "ID is the internal secret policy id.\n",
            "type": "string"
          },
          "rules": {
            "description": "Rules is the list of secret injection rules.\n",
            "items": {
              "$ref": "#/components/schemas/shared.SecretsRule"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "shared.SecretsRule": {
        "description": "SecretsRule defines distribution of secrets to containers",
        "properties": {
          "collections": {
            "description": "Collections is a list of collections the rule applies to.\n",
            "items": {
              "$ref": "#/components/schemas/collection.Collection"
            },
            "type": "array"
          },
          "disabled": {
            "description": "Indicates if the rule is currently disabled (true) or not (false).\n",
            "type": "boolean"
          },
          "injection": {
            "$ref": "#/components/schemas/shared.SecretsInjectionType"
          },
          "modified": {
            "description": "Datetime when the rule was last modified.\n",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "Name of the rule.\n",
            "type": "string"
          },
          "notes": {
            "description": "Free-form text.\n",
            "type": "string"
          },
          "owner": {
            "description": "User who created or last modified the rule.\n",
            "type": "string"
          },
          "previousName": {
            "description": "Previous name of the rule. Required for rule renaming.\n",
            "type": "string"
          },
          "readAllPerm": {
            "description": "ReadAllPerm indicates whether file permissions of injected secrets allow read by root only or by all users.\n",
            "type": "boolean"
          },
          "secrets": {
            "description": "Secrets are the encrypted secrets to inject.\n",
            "items": {
              "$ref": "#/components/schemas/shared.VaultSecret"
            },
            "type": "array"
          },
          "targetDir": {
            "description": "TargetDir is the target directory to inject secret files to if we choose filesystem injection.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.SecretsStore": {
        "description": "SecretsStore represents a secret storage entity",
        "properties": {
          "appID": {
            "description": "AppID is the twistlock application id, as set in Cyberark store.\n",
            "type": "string"
          },
          "caCert": {
            "$ref": "#/components/schemas/common.Secret"
          },
          "clientCert": {
            "$ref": "#/components/schemas/common.Secret"
          },
          "credentialId": {
            "description": "CredentialID is the authentication credential id.\n",
            "type": "string"
          },
          "name": {
            "description": "Name is the name of the secret store defined by the user.\n",
            "type": "string"
          },
          "region": {
            "description": "Region is the secrets store's region.\n",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/shared.SecretStoreType"
          },
          "url": {
            "description": "URL is the secrets store's endpoint point.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.SecretsStores": {
        "description": "SecretsStores are settings for connecting with secrets storage vaults",
        "properties": {
          "refreshPeriodHours": {
            "description": "RefreshPeriodHours is the secret stores refresh time in hours.\n",
            "type": "integer"
          },
          "secretsStores": {
            "description": "Stores is the list of stores to fetch secrets from.\n",
            "items": {
              "$ref": "#/components/schemas/shared.SecretsStore"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "shared.ServerlessAutoDeploySpecification": {
        "description": "ServerlessAutoDeploySpecification contains the information for auto-deploying serverless functions protection",
        "properties": {
          "awsRegionType": {
            "$ref": "#/components/schemas/shared.AwsRegionType"
          },
          "collections": {
            "description": "Collections is a list of collections the rule applies to.\n",
            "items": {
              "$ref": "#/components/schemas/collection.Collection"
            },
            "type": "array"
          },
          "consoleAddr": {
            "description": "ConsoleAddr represents the hostname of the console to connect to.\n",
            "type": "string"
          },
          "credentialID": {
            "description": "CredentialID is the service provider authentication data.\n",
            "type": "string"
          },
          "lastModified": {
            "description": "LastModified is the last modified time of the specification.\n",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "Name is the name of the spec.\n",
            "type": "string"
          },
          "proxy": {
            "$ref": "#/components/schemas/common.ProxySettings"
          },
          "runtimes": {
            "description": "Runtimes is the list of runtimes to which the spec applies.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "shared.ServerlessAutoDeploySpecifications": {
        "description": "ServerlessAutoDeploySpecifications is a list of serverless auto-deploy specifications",
        "items": {
          "$ref": "#/components/schemas/shared.ServerlessAutoDeploySpecification"
        },
        "type": "array"
      },
      "shared.ServerlessBundleRequest": {
        "description": "ServerlessBundleRequest represents the arguments to serverless bundle request",
        "properties": {
          "provider": {
            "$ref": "#/components/schemas/common.CloudProvider"
          },
          "proxyCA": {
            "description": "ProxyCA is the proxy\u2019s CA certificate for Defender to trust.\n",
            "type": "string"
          },
          "runtime": {
            "$ref": "#/components/schemas/shared.LambdaRuntimeType"
          }
        },
        "type": "object"
      },
      "shared.ServerlessScanSpecification": {
        "description": "ServerlessScanSpecification contains information for connecting to serverless provider",
        "properties": {
          "awsRegionType": {
            "$ref": "#/components/schemas/shared.AwsRegionType"
          },
          "cap": {
            "description": "Specifies the maximum number of functions to fetch and scan, ordered by most recently modified.\n",
            "type": "integer"
          },
          "credential": {
            "$ref": "#/components/schemas/cred.Credential"
          },
          "credentialID": {
            "description": "ID of the credentials in the credentials store to use for authenticating with the cloud provider.\n",
            "type": "string"
          },
          "provider": {
            "$ref": "#/components/schemas/common.CloudProvider"
          },
          "scanAllVersions": {
            "description": "Indicates if all image versions should be scanned (by default this option is off and only $LATEST is scanned).\n",
            "type": "boolean"
          },
          "scanLayers": {
            "description": "Indicates if a function's layers should be scanned (on by default).\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "shared.SubnetConnections": {
        "description": "SubnetConnections holds the entity incoming and outgoing connections from/to subnets",
        "properties": {
          "incoming": {
            "additionalProperties": {
              "$ref": "#/components/schemas/cnnf.RadarConnectionInstances"
            },
            "description": "Incoming holds connection from radar entity to subnet.\n",
            "type": "object"
          },
          "outgoing": {
            "additionalProperties": {
              "$ref": "#/components/schemas/cnnf.RadarConnectionInstances"
            },
            "description": "Outgoing holds connection from subnet to radar entity.\n",
            "type": "object"
          }
        },
        "type": "object"
      },
      "shared.SyslogSettings": {
        "description": "SyslogSettings are the syslog settings",
        "properties": {
          "addr": {
            "description": "Addr is the remote address for sending events.\n",
            "type": "string"
          },
          "allProcEvents": {
            "description": "AllProcEvents indicates whether any new spawned container process should generate an event source entry.\n",
            "type": "boolean"
          },
          "enabled": {
            "description": "Enabled indicates whether log feature is enabled.\n",
            "type": "boolean"
          },
          "id": {
            "description": "ID represents the user's custom identifier string.\n",
            "type": "string"
          },
          "verboseScan": {
            "description": "VerboseScan indicates whether detailed scan (Compliance/Vulnerability) result should be written to event logger.\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "shared.TASDropletSpecification": {
        "description": "TASDropletSpecification specify which droplets to scan",
        "properties": {
          "cap": {
            "description": "Cap indicates only the last k images should be fetched.\n",
            "type": "integer"
          },
          "cloudControllerAddress": {
            "description": "CloudControllerAddress is the address of the local cloud controller in TAS env.\n",
            "type": "string"
          },
          "hostname": {
            "description": "Hostname is the hostname of the defender that is used as the blobstore scanner.\n",
            "type": "string"
          },
          "pattern": {
            "description": "Name is the droplet name.\n",
            "type": "string"
          },
          "remote": {
            "description": "Remote indicates whether the blobstore is remote or local.\n",
            "type": "boolean"
          },
          "remoteConfig": {
            "$ref": "#/components/schemas/shared.TASRemoteBlobstoreConfig"
          }
        },
        "type": "object"
      },
      "shared.TASRemoteBlobstoreConfig": {
        "description": "TASRemoteBlobstoreConfig contains remote blobstore details",
        "properties": {
          "blobstoreAddress": {
            "description": "BlobstoreAddress is the address of the remote cloud controller.\n",
            "type": "string"
          },
          "cACert": {
            "description": "CACert Ops manager CA root certificate in case the user chooses not to skip TLS validation.\n",
            "type": "string"
          },
          "credential": {
            "$ref": "#/components/schemas/cred.Credential"
          },
          "credentialID": {
            "description": "CredentialID is the id in the credentials store to use for authenticating with the remote blobstore.\n",
            "type": "string"
          },
          "foundation": {
            "description": " Foundation is the name of TAS foundation.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.Tag": {
        "description": "Tag represents a single tag",
        "properties": {
          "color": {
            "$ref": "#/components/schemas/common.Color"
          },
          "description": {
            "description": "Description is the tag description.\n",
            "type": "string"
          },
          "name": {
            "description": "Name is the tag name.\n",
            "type": "string"
          },
          "vulns": {
            "description": "Vulns are the tagged vulnerabilities.\n",
            "items": {
              "$ref": "#/components/schemas/shared.TagVulnMetadata"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "shared.TagRule": {
        "description": "TagRule is a tag rule for specific vulnerabilities",
        "properties": {
          "description": {
            "description": "Free-form text for documenting the exception.\n",
            "type": "string"
          },
          "effect": {
            "$ref": "#/components/schemas/vuln.Effect"
          },
          "expiration": {
            "$ref": "#/components/schemas/vuln.ExpirationDate"
          },
          "name": {
            "description": "Tag name.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.TagVulnMetadata": {
        "description": "TagVulnMetadata is tag vulnerability metadata",
        "properties": {
          "checkBaseLayer": {
            "description": "CheckBaseLayer Indicates whether to also apply the tag for images that has one of the resources as a base layer.\nField applies only for images.\n",
            "type": "boolean"
          },
          "comment": {
            "description": "Comment is the tag comment.\n",
            "type": "string"
          },
          "id": {
            "description": "ID is the vulnerability ID.\n",
            "type": "string"
          },
          "packageName": {
            "description": "PackageName is the package name.\n",
            "type": "string"
          },
          "resourceType": {
            "$ref": "#/components/schemas/vuln.TagType"
          },
          "resources": {
            "description": "Resources is a list of resources the tag is attached on.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "shared.TrustAudit": {
        "description": "TrustAudit represents a trust audit",
        "properties": {
          "_id": {
            "description": "ID is the registry-repo of the created container.\n",
            "type": "string"
          },
          "accountID": {
            "description": "AccountID is the cloud account ID where the audit was generated.\n",
            "type": "string"
          },
          "cluster": {
            "description": "Cluster is the cluster where the audit was generated.\n",
            "type": "string"
          },
          "count": {
            "description": "Count is the number of times this audit occurred.\n",
            "type": "integer"
          },
          "effect": {
            "$ref": "#/components/schemas/vuln.Effect"
          },
          "imageID": {
            "description": "ImageID is the container image id.\n",
            "type": "string"
          },
          "imageName": {
            "description": "ImageName is the container image name.\n",
            "type": "string"
          },
          "msg": {
            "description": "Message is the blocking message text.\n",
            "type": "string"
          },
          "ruleName": {
            "description": "If blocked, contains the name of the rule that was applied.\n",
            "type": "string"
          },
          "time": {
            "description": "Time is the UTC time of the audit event.\n",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.TrustAudits": {
        "description": "TrustAudits represents the trust profile audits",
        "properties": {
          "_id": {
            "description": "ProfileID is the runtime profile ID.\n",
            "type": "string"
          },
          "audits": {
            "additionalProperties": {
              "$ref": "#/components/schemas/shared.TrustRegistryRepoAudits"
            },
            "description": "Audits is a map from trust status (audits are only for untrusted type) to the audit events list.\n",
            "type": "object"
          },
          "cluster": {
            "description": "Cluster is the cluster from which the audit originated.\n",
            "type": "string"
          },
          "collections": {
            "description": "Collections are collections to which this audit applies.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "imageName": {
            "description": "ImageName is the container image name.\n",
            "type": "string"
          },
          "label": {
            "description": "Label represents the container deployment label.\n",
            "type": "string"
          },
          "os": {
            "description": "OS is the operating system distribution.\n",
            "type": "string"
          },
          "resource": {
            "$ref": "#/components/schemas/common.RuntimeResource"
          },
          "time": {
            "description": "Time is the UTC time of the last audit event.\n",
            "format": "date-time",
            "type": "string"
          },
          "total": {
            "description": "Total is the total count of audits per runtime profile.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "shared.TrustRegistryRepoAudits": {
        "description": "TrustRegistryRepoAudits represents the trust registry/repo audits per profile",
        "properties": {
          "audits": {
            "description": "Audits are the trust audits associated with the registry/repo, limited to the determined capacity.\n",
            "items": {
              "$ref": "#/components/schemas/shared.TrustAudit"
            },
            "type": "array"
          },
          "count": {
            "description": "Count is the total count of the sub-type audits.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "shared.TrustedCertSettings": {
        "description": "TrustedCertSettings are settings for trusted certs",
        "properties": {
          "certs": {
            "description": "Certs are the list of trusted certificates to use in access scenarios.\n",
            "items": {
              "$ref": "#/components/schemas/shared.TrustedCertSignature"
            },
            "type": "array"
          },
          "checkRevocation": {
            "description": "CheckRevocation indicates whether to check the certificate revocation.\n",
            "type": "boolean"
          },
          "enabled": {
            "description": "Enabled indicates whether the trusted certificate feature is enabled.\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "shared.TrustedCertSignature": {
        "description": "TrustedCertSignature represents a trusted cert settings",
        "properties": {
          "cn": {
            "description": "CN is the certificate common name.\n",
            "type": "string"
          },
          "issuer": {
            "description": "Issuer is the certificate issuer.\n",
            "type": "string"
          },
          "notAfter1": {
            "description": "NotAfter is the certificate expiration time\nRemark: the 1 suffix required for backward compatibility (previous values were strings and cannot be serialized).\n",
            "format": "date-time",
            "type": "string"
          },
          "notBefore1": {
            "description": "NotBefore is the minimum time for which the cert is valid\nRemark: the 1 suffix required for backward compatibility (previous values were strings and cannot be serialized).\n",
            "format": "date-time",
            "type": "string"
          },
          "raw": {
            "description": "Raw is the raw certificate (in PEM format).\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.UploadScanResult": {
        "description": "UploadScanResult is the result uploading the scanning result",
        "properties": {
          "scanId": {
            "description": "ID is the scan result ID.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.User": {
        "description": "User represents a local user in Twistlock",
        "properties": {
          "username": {
            "description": "Name of a user.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.VMSpecification": {
        "description": "VMSpecification contains information for setting up and connecting to the image",
        "properties": {
          "cap": {
            "description": "Specifies the maximum number of images to fetch and scan, ordered by most recently modified.\n",
            "type": "integer"
          },
          "consoleAddr": {
            "description": "Network-accessible address that Defender can use to publish scan results to Console.\n",
            "type": "string"
          },
          "credentialID": {
            "description": "ID of the credentials in the credentials store to use for authenticating with the cloud provider.\n",
            "type": "string"
          },
          "enableSecureBoot": {
            "description": "EnableSecureBoot indicates secure boot should be enabled for the instance launched for scanning (currently only supported with GCP).\n",
            "type": "boolean"
          },
          "excludedImages": {
            "description": "Images to exclude from scanning.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "gcpProjectID": {
            "description": "GCP project ID to use for listing VM images instead of the default associated with the GCP credential (optional).\n",
            "type": "string"
          },
          "imageType": {
            "$ref": "#/components/schemas/common.ImageType"
          },
          "images": {
            "description": "The names of images to scan.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "instanceType": {
            "description": "InstanceType is the instance type to use for the instance launched for scanning. For example, the default instance type for AWS is \"m4.large\".\n",
            "type": "string"
          },
          "labels": {
            "description": "The labels to use to target images to scan.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "region": {
            "description": "Cloud provider region.\n",
            "type": "string"
          },
          "scanners": {
            "description": "Number of Defenders that can be utilized for each scan job.\n",
            "type": "integer"
          },
          "subnetID": {
            "description": "SubnetID is the network subnet ID to use for the instance launched for scanning. Default value is empty string, which represents the default subnet in the VPC.\n",
            "type": "string"
          },
          "vpcID": {
            "description": "VPCID is the network VPC ID to use for the instance launched for scanning. Default value is empty string, which represents the default VPC in the region.\n",
            "type": "string"
          },
          "zone": {
            "description": "Cloud provider zone (part of a region). On GCP, designates in which zone to deploy the VM scan instance.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.VMSpecifications": {
        "description": "VMSpecifications is a list of VM specifications",
        "items": {
          "$ref": "#/components/schemas/shared.VMSpecification"
        },
        "type": "array"
      },
      "shared.VaultSecret": {
        "description": "VaultSecret represents a secret held by a secret store",
        "properties": {
          "folder": {
            "description": "Folder is one of the following:\nCyberark: Name of the folder for secrets held in Cyberark store\nHashicorp: The directory path for secrets held in Hashicorp store\nAWS: The name of the secret in AWS Secrets Manager or AWS Parameter Store.\n",
            "type": "string"
          },
          "key": {
            "description": "Key is the secret's identifier in the secrets store.\n",
            "type": "string"
          },
          "name": {
            "description": "Name is the name of the secret as input from the user.\n",
            "type": "string"
          },
          "safe": {
            "description": "Safe is the name of the safe, for secrets held in Cyberark store.\n",
            "type": "string"
          },
          "store": {
            "description": "Store is the name of the secrets store where the secret is held.\n",
            "type": "string"
          },
          "value": {
            "$ref": "#/components/schemas/common.Secret"
          },
          "version": {
            "description": "Version is the Azure secret version.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "shared.WildFirePolicy": {
        "description": "WildFirePolicy is the global wildfire usage policy, set by the client",
        "properties": {
          "complianceEnabled": {
            "description": "ComplianceEnabled indicates whether compliance malware scan will consult WF.\n",
            "type": "boolean"
          },
          "graywareAsMalware": {
            "description": "GraywareAsMalware indicates whether files with WF verdict of Grayware will be treated as malware.\n",
            "type": "boolean"
          },
          "region": {
            "description": "Region is the WF server region to query.\n",
            "type": "string"
          },
          "runtimeEnabled": {
            "description": "RuntimeEnabled indicates whether runtime malware scan will consult WF.\n",
            "type": "boolean"
          },
          "uploadEnabled": {
            "description": "UploadEnabled indicates whether files will be uploaded to WF.\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "shared.WildFireSettings": {
        "description": "WildFireSettings are the settings for WildFire API requests",
        "properties": {
          "apiKey": {
            "description": "APIKey is the key identifier used for WF APIs.\n",
            "type": "string"
          },
          "apiKeyExpiration": {
            "description": "APIKeyExpiration is the expiration time of the API key.\n",
            "format": "date-time",
            "type": "string"
          },
          "lastError": {
            "description": "LastError is the last error that occurred when trying to create/update the wildfire key.\n",
            "type": "string"
          },
          "policy": {
            "$ref": "#/components/schemas/shared.WildFirePolicy"
          }
        },
        "type": "object"
      },
      "string": {
        "type": "string"
      },
      "time.Duration": {
        "format": "int64",
        "type": "integer"
      },
      "time.Time": {
        "format": "date-time",
        "type": "string"
      },
      "trust.Data": {
        "description": "Data holds the image trust data",
        "properties": {
          "groups": {
            "description": "Groups are the trust groups.\n",
            "items": {
              "$ref": "#/components/schemas/trust.Group"
            },
            "type": "array"
          },
          "policy": {
            "$ref": "#/components/schemas/trust.Policy"
          }
        },
        "type": "object"
      },
      "trust.Group": {
        "description": "Group represents a group of images",
        "properties": {
          "_id": {
            "description": "Name of the group.\n",
            "type": "string"
          },
          "disabled": {
            "description": "Indicates if the rule is currently disabled (true) or not (false).\n",
            "type": "boolean"
          },
          "images": {
            "description": "Image names or IDs (e.g., docker.io/library/ubuntu:16.04 / SHA264@...).\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "layers": {
            "description": "Filesystem layers. The image is trusted if its layers have a prefix of the trusted groups layer in the same order.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "modified": {
            "description": "Datetime when the rule was last modified.\n",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "Name of the rule.\n",
            "type": "string"
          },
          "notes": {
            "description": "Free-form text.\n",
            "type": "string"
          },
          "owner": {
            "description": "User who created or last modified the rule.\n",
            "type": "string"
          },
          "previousName": {
            "description": "Previous name of the rule. Required for rule renaming.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "trust.HostStatus": {
        "description": "HostStatus represents an image trust status on a host",
        "properties": {
          "host": {
            "description": "Host name.\n",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/trust.Status"
          }
        },
        "type": "object"
      },
      "trust.ImageResult": {
        "description": "ImageResult represents an aggregated image trust result",
        "properties": {
          "groups": {
            "description": "Trust groups which apply to the image.\n",
            "items": {
              "$ref": "#/components/schemas/trust.Group"
            },
            "type": "array"
          },
          "hostsStatuses": {
            "description": "Image trust status on each host. Can be set to \"trusted\" or \"untrusted\".\n",
            "items": {
              "$ref": "#/components/schemas/trust.HostStatus"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "trust.Policy": {
        "description": "Policy represents the trust policy",
        "properties": {
          "_id": {
            "description": "ID is the trust group policy ID.\n",
            "type": "string"
          },
          "enabled": {
            "description": "Enabled indicates whether the policy is enabled.\n",
            "type": "boolean"
          },
          "rules": {
            "description": "Rules is the list of rules in the policy.\n",
            "items": {
              "$ref": "#/components/schemas/trust.PolicyRule"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "trust.PolicyRule": {
        "description": "PolicyRule represents an trust policy rule",
        "properties": {
          "allowedGroups": {
            "description": "AllowedGroups are the ids of the groups that are whitelisted by this rule.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "blockMsg": {
            "$ref": "#/components/schemas/common.PolicyBlockMsg"
          },
          "collections": {
            "description": "Collections is a list of collections the rule applies to.\n",
            "items": {
              "$ref": "#/components/schemas/collection.Collection"
            },
            "type": "array"
          },
          "deniedGroups": {
            "description": "DeniedGroups are the ids of the groups that are blacklisted by this rule.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "disabled": {
            "description": "Indicates if the rule is currently disabled (true) or not (false).\n",
            "type": "boolean"
          },
          "effect": {
            "$ref": "#/components/schemas/vuln.Effect"
          },
          "modified": {
            "description": "Datetime when the rule was last modified.\n",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "Name of the rule.\n",
            "type": "string"
          },
          "notes": {
            "description": "Free-form text.\n",
            "type": "string"
          },
          "owner": {
            "description": "User who created or last modified the rule.\n",
            "type": "string"
          },
          "previousName": {
            "description": "Previous name of the rule. Required for rule renaming.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "trust.Status": {
        "description": "Status is the trust status for an image",
        "enum": [
          [
            "trusted",
            "untrusted"
          ]
        ],
        "type": "string"
      },
      "types.AccessStats": {
        "description": "AccessStats are stats for the access flows",
        "properties": {
          "docker": {
            "$ref": "#/components/schemas/types.AccessStatsCount"
          },
          "sshd": {
            "$ref": "#/components/schemas/types.AccessStatsCount"
          },
          "sudo": {
            "$ref": "#/components/schemas/types.AccessStatsCount"
          }
        },
        "type": "object"
      },
      "types.AccessStatsCount": {
        "description": "AccessStatsCount stores the total amount of access audits",
        "properties": {
          "allowed": {
            "description": ".\n",
            "type": "integer"
          },
          "denied": {
            "description": ".\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "types.AgentlessResourceTemplatesRequest": {
        "description": "AgentlessResourceTemplatesRequest is the agentless resource templates request for populating\ntemplates that are needed to be applied prior to an agentless scan with the credential",
        "properties": {
          "awsRegionType": {
            "$ref": "#/components/schemas/shared.AwsRegionType"
          },
          "credential": {
            "$ref": "#/components/schemas/cred.Credential"
          },
          "credentialID": {
            "description": "CredentialID is the credential ID to populate the templates for.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "types.AlertProfileOption": {
        "description": "AlertProfileOption describes options available for configuring an alert type",
        "properties": {
          "alertType": {
            "$ref": "#/components/schemas/api.AlertType"
          },
          "hasPolicy": {
            "description": "HasPolicy defines whether the alerts are triggered by policy (e.g., this is false for defender alerts).\n",
            "type": "boolean"
          },
          "name": {
            "description": "Name is the display name for the option.\n",
            "type": "string"
          },
          "rules": {
            "description": "Rules are the rule names for the policy associated with this alert type (only relevant if HasPolicy is true).\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "supportedClients": {
            "description": "SupportedClients are the supported alert clients for this alert (e.g., jira, email).\n",
            "items": {
              "$ref": "#/components/schemas/api.AlertClientType"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "types.AllDefendersUsage": {
        "description": "AllDefendersUsage holds stats about the usage of different modules and the sample time",
        "properties": {
          "appEmbedded": {
            "$ref": "#/components/schemas/types.DefenderUsage"
          },
          "container": {
            "$ref": "#/components/schemas/types.DefenderUsage"
          },
          "host": {
            "$ref": "#/components/schemas/types.DefenderUsage"
          },
          "hostAgentless": {
            "$ref": "#/components/schemas/types.DefenderUsage"
          },
          "period": {
            "description": "Period is the date beginning of the usage period.\n",
            "format": "date-time",
            "type": "string"
          },
          "remainingCredits": {
            "description": "RemainingCredits is the amount of credits left at the beginning of the period.\n",
            "type": "integer"
          },
          "serverless": {
            "$ref": "#/components/schemas/types.ServerlessUsage"
          },
          "waas": {
            "$ref": "#/components/schemas/types.DefenderUsage"
          },
          "waasOutOfBand": {
            "$ref": "#/components/schemas/types.DefenderUsage"
          }
        },
        "type": "object"
      },
      "types.AppFirewallAttackCount": {
        "description": "AppFirewallAttackCount holds app firewall attack type and the amount of audits",
        "properties": {
          "count": {
            "description": "Count is the count for the attack type.\n",
            "type": "integer"
          },
          "type": {
            "$ref": "#/components/schemas/waas.AttackType"
          }
        },
        "type": "object"
      },
      "types.AppFirewallStats": {
        "additionalProperties": {
          "$ref": "#/components/schemas/int"
        },
        "description": "AppFirewallStats are the daily stats for app firewall audits\nTODO #20802 - replace string key with WAAS attack type type when mongo changed to avoid encoding map keys without stringer",
        "type": "object"
      },
      "types.ArtifactoryWebhookRequest": {
        "description": "ArtifactoryWebhookRequest is an artifactory webhook request\nArtifactory doesn't have native webhook support, instead it comes as a plugin\nhttps://github.com/jfrog/artifactory-user-plugins/tree/master/webhook\nThe relevant fields in the this struct were reverse engineered from the webhook groovy code and from the fields that were sent by a real artifactory environment",
        "type": "object"
      },
      "types.AttackTechniqueStats": {
        "additionalProperties": {
          "$ref": "#/components/schemas/int"
        },
        "description": "AttackTechniqueStats represents statistics grouped by attack technique",
        "type": "object"
      },
      "types.AuditTimeslice": {
        "description": "AuditTimeslice counts the number of audit events for a given time period",
        "properties": {
          "count": {
            "description": "Count is the number of audit occurrences.\n",
            "type": "integer"
          },
          "end": {
            "description": "End is the end time of the bucket.\n",
            "format": "date-time",
            "type": "string"
          },
          "start": {
            "description": "Start is the start time of the bucket.\n",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "types.AvailableVulnerabilities": {
        "description": "AvailableVulnerabilities contains all available vulnerabilities types",
        "properties": {
          "complianceVulnerabilities": {
            "description": "Compliance is the list of all available compliance issues.\n",
            "items": {
              "$ref": "#/components/schemas/vuln.Vulnerability"
            },
            "type": "array"
          },
          "cveVulnerabilities": {
            "description": "CVE is all available cve vulnerabilities.\n",
            "items": {
              "$ref": "#/components/schemas/vuln.Vulnerability"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "types.BaseImage": {
        "description": "BaseImage represents an image which is defined as a base image",
        "properties": {
          "creationTime": {
            "description": "CreationTime is the time when the image was created.\n",
            "format": "date-time",
            "type": "string"
          },
          "imageName": {
            "description": "ImageName is the image name repository:tag.\n",
            "type": "string"
          },
          "topLayer": {
            "description": "TopLayer is the SHA256 of the image's last filesystem layer.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "types.BaseImagesRule": {
        "description": "BaseImagesRule holds the base images defined by a single scope",
        "properties": {
          "_id": {
            "description": "Pattern is the scope configuration identification, e.g. image name regex pattern.\n",
            "type": "string"
          },
          "description": {
            "description": "Description is the base images scope description.\n",
            "type": "string"
          },
          "images": {
            "description": "Images holds the base images which matches the scope configuration, capped to 50 image digests per scope.\n",
            "items": {
              "$ref": "#/components/schemas/types.BaseImage"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "types.CVEStats": {
        "description": "CVEStats represents statistics about a CVE type",
        "properties": {
          "count": {
            "description": "Count is the number of CVEs from the specific type.\n",
            "type": "integer"
          },
          "distro": {
            "description": "Distro is the impacted image distro (e.g., ubuntu).\n",
            "type": "string"
          },
          "distro_release": {
            "description": "DistroRelase is the impacted image distro release (bionic).\n",
            "type": "string"
          },
          "modified": {
            "description": "Modified is the max unix timestamp for the specific CVE.\n",
            "format": "int64",
            "type": "integer"
          },
          "type": {
            "description": "Type is the vulnerability type.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "types.CVEVulnerability": {
        "description": "CVEVulnerability holds data on package and files vulnerabilities",
        "properties": {
          "affected_cpes": {
            "$ref": "#/components/schemas/vuln.RHELCpeHashes"
          },
          "app_vuln_id": {
            "description": "AppVulnID is the unique ID of the application vulnerability (app+cve+internal custom ID).\n",
            "type": "string"
          },
          "archs": {
            "$ref": "#/components/schemas/shared.CPUArchs"
          },
          "conditions": {
            "$ref": "#/components/schemas/vuln.Conditions"
          },
          "custom": {
            "description": "Custom indicates if this is a custom vulnerability.\n",
            "type": "boolean"
          },
          "cve": {
            "description": ".\n",
            "type": "string"
          },
          "cvss": {
            "description": ".\n",
            "format": "float",
            "type": "number"
          },
          "description": {
            "description": "Description is the vulnerability description.\n",
            "type": "string"
          },
          "distro": {
            "description": ".\n",
            "type": "string"
          },
          "distro_release": {
            "description": ".\n",
            "type": "string"
          },
          "exploit": {
            "$ref": "#/components/schemas/vuln.ExploitType"
          },
          "fixDate": {
            "description": "FixDate is the date this CVE was fixed (unix timestamp).\n",
            "format": "int64",
            "type": "integer"
          },
          "link": {
            "description": "Link is the link for information about the vulnerability (used for custom vulnerabilities).\n",
            "type": "string"
          },
          "link_id": {
            "description": "LinkId is the id required to construct the vendor link to the CVE.\n",
            "type": "string"
          },
          "modified": {
            "description": "Modified is the last time this CVE was modified (unix timestamp).\n",
            "format": "int64",
            "type": "integer"
          },
          "package": {
            "description": ".\n",
            "type": "string"
          },
          "rules": {
            "$ref": "#/components/schemas/vuln.Rules"
          },
          "severity": {
            "description": ".\n",
            "type": "string"
          },
          "status": {
            "description": "Status is the official vendor state for the CVE.\n",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/shared.CveType"
          },
          "vecStr": {
            "description": "VectorString is the NVD vulnerability string.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "types.CertData": {
        "description": "CertData  is used to add a custom certificate to the product",
        "properties": {
          "certificate": {
            "description": "Data is the certificate pem data.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "types.CertSettings": {
        "description": "CertSettings are the certificates settings",
        "properties": {
          "caExpiration": {
            "description": "CAExpiration holds the expiration date of the CA cert.\n",
            "format": "date-time",
            "type": "string"
          },
          "consoleSAN": {
            "description": "ConsoleSAN if specified, use this list as the SAN for the console server certificate. Used for websocket and API.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "defenderOldCAExpiration": {
            "description": "DefenderOldCAExpiration holds the expiration time of the defender old CA cert.\n",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "types.CertificateSettings": {
        "description": "CertificateSettings are the certificate settings",
        "properties": {
          "accessCaCert": {
            "description": "AccessCACert is a custom CA certificate.\n",
            "type": "string"
          },
          "certificatePeriodDays": {
            "description": "CertificatePeriodDays is the certificates period in days.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "types.ClusterRadarInfo": {
        "description": "ClusterRadarInfo contains cluster information to display on the radar",
        "properties": {
          "cloudProivder": {
            "$ref": "#/components/schemas/common.CloudProvider"
          },
          "hostCount": {
            "description": "HostCount is the number of host running the cluster.\n",
            "type": "integer"
          },
          "name": {
            "description": "Name of the cluster.\n",
            "type": "string"
          },
          "namespaceCount": {
            "description": "Namespace is the number of namespace in the cluster.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "types.ComplianceCategoryStats": {
        "description": "ComplianceCategoryStats holds data regarding a compliance category",
        "properties": {
          "failed": {
            "description": "Failed is the count of impacted resources by the category IDs.\n",
            "type": "integer"
          },
          "name": {
            "$ref": "#/components/schemas/vuln.ComplianceCategory"
          },
          "total": {
            "description": "Total is the count of evaluations of category IDs.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "types.ComplianceDailyStats": {
        "description": "ComplianceDailyStats is the compliance daily stats",
        "properties": {
          "_id": {
            "description": "Date holds the date the data was collected.\n",
            "type": "string"
          },
          "distribution": {
            "$ref": "#/components/schemas/vuln.Distribution"
          },
          "modified": {
            "description": "Modified is the time the data was modified.\n",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "types.ComplianceIDStats": {
        "description": "ComplianceIDStats holds data regarding applied compliance ID",
        "properties": {
          "benchmarkID": {
            "description": "BenchmarkID is the benchmark ID.\n",
            "type": "string"
          },
          "category": {
            "$ref": "#/components/schemas/vuln.ComplianceCategory"
          },
          "description": {
            "description": "Description is the compliance description.\n",
            "type": "string"
          },
          "failed": {
            "description": "Failed is the number of occurrences of compliance ID in resources.\n",
            "type": "integer"
          },
          "id": {
            "description": "ID is the compliance ID.\n",
            "type": "integer"
          },
          "severity": {
            "description": "Severity is the compliance severity.\n",
            "type": "string"
          },
          "templateTitle": {
            "description": "TemplateTitle is the template title.\n",
            "type": "string"
          },
          "total": {
            "description": "Total is the count of resources evaluated with the compliance.\n",
            "type": "integer"
          },
          "type": {
            "$ref": "#/components/schemas/vuln.Type"
          }
        },
        "type": "object"
      },
      "types.ComplianceStats": {
        "description": "ComplianceStats holds compliance data",
        "properties": {
          "categories": {
            "description": "Compliance stats by category.\n",
            "items": {
              "$ref": "#/components/schemas/types.ComplianceCategoryStats"
            },
            "type": "array"
          },
          "daily": {
            "description": "Daily compliance stats.\n",
            "items": {
              "$ref": "#/components/schemas/types.ComplianceDailyStats"
            },
            "type": "array"
          },
          "ids": {
            "description": "Compliance data by check ID.\n",
            "items": {
              "$ref": "#/components/schemas/types.ComplianceIDStats"
            },
            "type": "array"
          },
          "rules": {
            "description": "Compliance stats by policy rules.\n",
            "items": {
              "$ref": "#/components/schemas/types.RuleComplianceStats"
            },
            "type": "array"
          },
          "templates": {
            "description": "Compliance stats by template.\n",
            "items": {
              "$ref": "#/components/schemas/types.ComplianceTemplateStats"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "types.ComplianceTemplateStats": {
        "description": "ComplianceTemplateStats holds data regarding a compliance template",
        "properties": {
          "failed": {
            "description": "Failed is the count of impacted resources by the template IDs.\n",
            "type": "integer"
          },
          "name": {
            "$ref": "#/components/schemas/vuln.ComplianceTemplate"
          },
          "total": {
            "description": "Total is the count of evaluations of template IDs.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "types.ConsoleAuthResponse": {
        "description": "ConsoleAuthResponse represents the console certificates authentication response",
        "properties": {
          "role": {
            "description": "UserRole is the authenticated user role.\n",
            "type": "string"
          },
          "token": {
            "description": "Token is the console authentication response token.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "types.ConsoleCertificateSettings": {
        "description": "ConsoleCertificateSettings are the console certificate settings",
        "properties": {
          "checkRevocation": {
            "description": "CheckRevocation indicates whether cert revocation status is required.\n",
            "type": "boolean"
          },
          "consoleCaCert": {
            "description": "ConsoleCACert is a custom CA certificate for the console.\n",
            "type": "string"
          },
          "consoleCustomCert": {
            "$ref": "#/components/schemas/common.Secret"
          },
          "hpkp": {
            "$ref": "#/components/schemas/types.HPKPSettings"
          }
        },
        "type": "object"
      },
      "types.ContainerRadarData": {
        "description": "ContainerRadarData represent all data relevant to the network radar",
        "properties": {
          "containerCount": {
            "description": "ContainerCount is the total number of containers.\n",
            "type": "integer"
          },
          "radar": {
            "description": "Radar holds all radar entities.\n",
            "items": {
              "$ref": "#/components/schemas/types.ContainerRadarEntity"
            },
            "type": "array"
          },
          "radarSubnets": {
            "description": "RadarSubnets holds all the radar subnets.\n",
            "items": {
              "$ref": "#/components/schemas/cnnf.NetworkEntity"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "types.ContainerRadarEntity": {
        "description": "ContainerRadarEntity is the extended container radar entity (include presentation metadata)",
        "properties": {
          "_id": {
            "description": ".\n",
            "type": "string"
          },
          "allowAll": {
            "$ref": "#/components/schemas/cnnf.AllowAllConnections"
          },
          "appFirewallAttackCounts": {
            "description": "AppFirewallAttackCounts is the counts for the app firewall attacks.\n",
            "items": {
              "$ref": "#/components/schemas/types.AppFirewallAttackCount"
            },
            "type": "array"
          },
          "cluster": {
            "description": "Cluster is the provided cluster name.\n",
            "type": "string"
          },
          "complianceDistribution": {
            "$ref": "#/components/schemas/vuln.Distribution"
          },
          "consul": {
            "description": "Consul states whether it is a consul container.\n",
            "type": "boolean"
          },
          "containerCount": {
            "description": "ContainerCount is the amount of containers per entity.\n",
            "type": "integer"
          },
          "distro": {
            "description": ".\n",
            "type": "string"
          },
          "dns": {
            "description": "DNS states whether this is a DNS node.\n",
            "type": "boolean"
          },
          "filesystemCount": {
            "description": ".\n",
            "type": "integer"
          },
          "firewallProtection": {
            "$ref": "#/components/schemas/waas.ProtectionStatus"
          },
          "geoip": {
            "$ref": "#/components/schemas/runtime.ProfileNetworkGeoIP"
          },
          "hasDNSConnection": {
            "description": "HasDNSConnection states whether the node has DNS connection.\n",
            "type": "boolean"
          },
          "hostCount": {
            "description": ".\n",
            "type": "integer"
          },
          "hostname": {
            "description": ".\n",
            "type": "string"
          },
          "imageID": {
            "description": "ImageID is the entity's image ID.\n",
            "type": "string"
          },
          "imageName": {
            "description": "ImageName is the entity's image name.\n",
            "type": "string"
          },
          "imageNames": {
            "description": "ImageNames are the names of the image associated with the radar entity.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "incidentCount": {
            "description": "IncidentCount is the number of incidents.\n",
            "type": "integer"
          },
          "incomingConnections": {
            "description": "IncomingConnections are the radar entity incoming connections.\n",
            "items": {
              "$ref": "#/components/schemas/shared.ContainerRadarIncomingConnection"
            },
            "type": "array"
          },
          "internet": {
            "$ref": "#/components/schemas/shared.InternetConnections"
          },
          "istio": {
            "description": "Istio states whether it is an istio-monitored entity.\n",
            "type": "boolean"
          },
          "istioAuthorizationPolicies": {
            "description": "IstioAuthorizationPolicies are the Istio authorization policies.\n",
            "items": {
              "$ref": "#/components/schemas/istio.AuthorizationPolicy"
            },
            "type": "array"
          },
          "k8s": {
            "$ref": "#/components/schemas/shared.ProfileKubernetesData"
          },
          "label": {
            "description": "Label is the entity's label.\n",
            "type": "string"
          },
          "labels": {
            "description": "Labels are the radar entity labels.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "learning": {
            "description": "Learning indicates whether the runtime profile associated with the entity is in learning state.\n",
            "type": "boolean"
          },
          "namespace": {
            "description": "Namespace is the kubernetes namespace the entity belongs to (for kubernetes type).\n",
            "type": "string"
          },
          "networkCount": {
            "description": ".\n",
            "type": "integer"
          },
          "processesCount": {
            "description": ".\n",
            "type": "integer"
          },
          "profileHash": {
            "$ref": "#/components/schemas/common.ProfileHash"
          },
          "region": {
            "description": "Region is the cloud provider region.\n",
            "type": "string"
          },
          "resolved": {
            "description": "Resolved indicates if the entity has all data resolved or just contains the ID and hash, used to indicate if the console should be updated on entity resolving.\n",
            "type": "boolean"
          },
          "serviceIP": {
            "description": "ServiceIP the ip of the kubernetes service (for kubernetes type).\n",
            "type": "string"
          },
          "serviceName": {
            "description": "ServiceName is kubernetes service the entity belongs to (for kubernetes type).\n",
            "type": "string"
          },
          "servicePorts": {
            "description": "ServicePorts are the ports the kubernetes service exposes (for kubernetes type).\n",
            "items": {
              "$ref": "#/components/schemas/int"
            },
            "type": "array"
          },
          "subnetConnections": {
            "$ref": "#/components/schemas/shared.SubnetConnections"
          },
          "type": {
            "$ref": "#/components/schemas/shared.EntityType"
          },
          "vulnerabilityDistribution": {
            "$ref": "#/components/schemas/vuln.Distribution"
          },
          "waasStats": {
            "$ref": "#/components/schemas/waas.MonitoringStats"
          }
        },
        "type": "object"
      },
      "types.CredentialUsage": {
        "description": "CredentialUsage represents a single credential usage",
        "properties": {
          "description": {
            "description": "Resource description (e.g., repository name for registry scan).\n",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/cred.UsageType"
          }
        },
        "type": "object"
      },
      "types.DefenderSummary": {
        "description": "DefenderSummary is a summary for a type of defender",
        "properties": {
          "category": {
            "$ref": "#/components/schemas/defender.Category"
          },
          "connected": {
            "description": "Connected counts how many defenders are connected for this category.\n",
            "type": "integer"
          },
          "deployed": {
            "description": "Deployed counts how many defenders are deployed for this category.\n",
            "type": "integer"
          },
          "licensed": {
            "description": "Licensed counts how many defenders are licensed for this category.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "types.DefenderUsage": {
        "description": "DefenderUsage holds the number of defenders and the credits used for a specific defender type",
        "properties": {
          "creditCount": {
            "description": "CreditCount is credits that was used for this defender type.\n",
            "format": "double",
            "type": "number"
          },
          "defendersCount": {
            "description": "DefendersCount is the number of defenders that was used for this defender type.\n",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "types.DefendersVersionCount": {
        "description": "DefendersVersionCount holds the defenders count per each version",
        "properties": {
          "count": {
            "description": "Defenders count per version.\n",
            "type": "integer"
          },
          "version": {
            "description": "Release version.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "types.DiscoveredVM": {
        "description": "DiscoveredVM represents the information about the instance, fetched from the cloud compute interface",
        "properties": {
          "_id": {
            "description": "ID is the instance id. E.g. \"i-5cd23551\".\n",
            "type": "string"
          },
          "accountID": {
            "description": "AccountID is the cloud provider account ID.\n",
            "type": "string"
          },
          "architecture": {
            "description": "Architecture is the architecture of the image.\n",
            "type": "string"
          },
          "arn": {
            "description": "The Amazon Resource Name (ARN) assigned to the instance.\n",
            "type": "string"
          },
          "collections": {
            "description": "Collections is a list of the matched collections.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "createdAt": {
            "description": "CreatedAt is the time when the instance was launched.\n",
            "format": "date-time",
            "type": "string"
          },
          "fqdn": {
            "description": "FQDN is the host's fully qualified domain name . E.g. \"ip-192-0-2-0.us-east-2.compute.internal\".\n",
            "type": "string"
          },
          "hasDefender": {
            "description": "HasDefender indicates that the instance has a defender installed on it.\n",
            "type": "boolean"
          },
          "hostname": {
            "description": "Hostname is the hostname. E.g. \"ip-192-0-2-0\" or \"custom\".\n",
            "type": "string"
          },
          "imageID": {
            "description": "ImageID is the ID of the AMI used to launch the instance. E.g. \"ami-35501205\".\n",
            "type": "string"
          },
          "imageName": {
            "description": "ImageName is the name of the AMI used to launch the instance.\n",
            "type": "string"
          },
          "name": {
            "description": "Name is the instance name.\n",
            "type": "string"
          },
          "os": {
            "description": "OS is the Operating System installed on the instance.\n",
            "type": "string"
          },
          "provider": {
            "$ref": "#/components/schemas/common.CloudProvider"
          },
          "region": {
            "description": "Region is the region the VM is located at.\n",
            "type": "string"
          },
          "tags": {
            "description": "Tags are the tags of the VM instance.\n",
            "items": {
              "$ref": "#/components/schemas/common.ExternalLabel"
            },
            "type": "array"
          },
          "timestamp": {
            "description": "Timestamp is the time in which the instance info was fetched.\n",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "types.EcsTaskDefinitionOptions": {
        "description": "EcsTaskDefinitionOptions holds the ecs deployment options",
        "properties": {
          "cluster": {
            "description": "Cluster is the kubernetes or ecs cluster name.\n",
            "type": "string"
          },
          "collectPodLabels": {
            "description": "CollectPodLabels indicates whether to collect pod related labels resource labels.\n",
            "type": "boolean"
          },
          "consoleAddr": {
            "description": "ConsoleAddr is the console address for defender communication.\n",
            "type": "string"
          },
          "credentialID": {
            "description": "CredentialID is the name of the credential used.\n",
            "type": "string"
          },
          "cri": {
            "description": "CRI indicates defender uses CRI instead of docker.\n",
            "type": "boolean"
          },
          "dockerSocketPath": {
            "description": "DockerSocketPath is the path of the docker socket file.\n",
            "type": "string"
          },
          "gkeAutopilot": {
            "description": "GKEAutopilot indicates the deployment is requested for GKE Autopilot.\n",
            "type": "boolean"
          },
          "hostCustomComplianceEnabled": {
            "description": "HostCustomComplianceEnabled indicates whether host custom compliance checks are enabled.\n",
            "type": "boolean"
          },
          "image": {
            "description": "Image is the full daemonset image name.\n",
            "type": "string"
          },
          "istio": {
            "description": "MonitorIstio indicates whether to monitor Istio.\n",
            "type": "boolean"
          },
          "namespace": {
            "description": "Namespace is the target deamonset namespaces.\n",
            "type": "string"
          },
          "nodeSelector": {
            "description": "NodeSelector is a key/value node selector.\n",
            "type": "string"
          },
          "orchestration": {
            "description": "Orchestration is the orchestration type.\n",
            "type": "string"
          },
          "privileged": {
            "description": "Privileged indicates whether to run defenders as privileged.\n",
            "type": "boolean"
          },
          "projectID": {
            "description": "ProjectID is the kubernetes cluster project ID.\n",
            "type": "string"
          },
          "proxy": {
            "$ref": "#/components/schemas/common.DefenderProxyOpt"
          },
          "region": {
            "description": "Region is the kubernetes cluster location region.\n",
            "type": "string"
          },
          "secretsname": {
            "description": "SecretsName is the name of the secret to pull.\n",
            "type": "string"
          },
          "selinux": {
            "description": "SelinuxEnforced indicates whether selinux is enforced on the target host.\n",
            "type": "boolean"
          },
          "serviceaccounts": {
            "description": "MonitorServiceAccounts indicates whether to monitor service accounts.\n",
            "type": "boolean"
          },
          "taskName": {
            "description": "TaskName is the name used for the task definition.\n",
            "type": "string"
          },
          "uniqueHostname": {
            "description": "UniqueHostname indicates whether to assign unique hostnames.\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "types.EventStats": {
        "description": "EventStats holds counters for all event types",
        "properties": {
          "admissionAudits": {
            "description": ".\n",
            "type": "integer"
          },
          "appEmbeddedAppFirewall": {
            "description": ".\n",
            "type": "integer"
          },
          "appEmbeddedRuntime": {
            "description": ".\n",
            "type": "integer"
          },
          "containerAppFirewall": {
            "description": ".\n",
            "type": "integer"
          },
          "containerNetworkFirewall": {
            "description": ".\n",
            "type": "integer"
          },
          "containerRuntime": {
            "description": ".\n",
            "type": "integer"
          },
          "dockerAccess": {
            "description": ".\n",
            "type": "integer"
          },
          "fileIntegrity": {
            "description": ".\n",
            "type": "integer"
          },
          "hostActivities": {
            "description": ".\n",
            "type": "integer"
          },
          "hostAppFirewall": {
            "description": ".\n",
            "type": "integer"
          },
          "hostNetworkFirewall": {
            "description": ".\n",
            "type": "integer"
          },
          "hostRuntime": {
            "description": ".\n",
            "type": "integer"
          },
          "kubernetesAudits": {
            "description": ".\n",
            "type": "integer"
          },
          "logInspection": {
            "description": ".\n",
            "type": "integer"
          },
          "outOfBandAppFirewall": {
            "description": ".\n",
            "type": "integer"
          },
          "serverlessAppFirewall": {
            "description": ".\n",
            "type": "integer"
          },
          "serverlessRuntime": {
            "description": ".\n",
            "type": "integer"
          },
          "trustAudits": {
            "description": ".\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "types.Group": {
        "description": "Group represents a console group",
        "properties": {
          "_id": {
            "description": "Group name.\n",
            "type": "string"
          },
          "groupId": {
            "description": "Group identifier in the Azure SAML identification process.\n",
            "type": "string"
          },
          "groupName": {
            "description": "Group name.\n",
            "type": "string"
          },
          "lastModified": {
            "description": "Datetime when the group was created or last modified.\n",
            "format": "date-time",
            "type": "string"
          },
          "ldapGroup": {
            "description": "Indicates if the group is an LDAP group (true) or not (false).\n",
            "type": "boolean"
          },
          "oauthGroup": {
            "description": "Indicates if the group is an OAuth group (true) or not (false).\n",
            "type": "boolean"
          },
          "oidcGroup": {
            "description": "Indicates if the group is an OpenID Connect group (true) or not (false).\n",
            "type": "boolean"
          },
          "owner": {
            "description": "User who created or modified the group.\n",
            "type": "string"
          },
          "permissions": {
            "$ref": "#/components/schemas/api.Permissions"
          },
          "role": {
            "description": "Role of the group.\n",
            "type": "string"
          },
          "samlGroup": {
            "description": "Indicates if the group is a SAML group (true) or not (false).\n",
            "type": "boolean"
          },
          "user": {
            "description": "Users in the group.\n",
            "items": {
              "$ref": "#/components/schemas/shared.User"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "types.Groups": {
        "description": "Groups represents a list of groups",
        "items": {
          "$ref": "#/components/schemas/types.Group"
        },
        "type": "array"
      },
      "types.HPKPSettings": {
        "description": "HPKPSettings represents the public key pinning settings",
        "properties": {
          "certs": {
            "description": "Certs are the public certs used for fingerprinting.\n",
            "type": "string"
          },
          "enabled": {
            "description": ".\n",
            "type": "boolean"
          },
          "fingerprints": {
            "description": "SHA256 fingerprints of the certificates.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "types.HostAutoDeploySpecStatus": {
        "description": "HostAutoDeploySpecStatus contains the discovery and deployment status for a particular host auto-deploy spec",
        "properties": {
          "defended": {
            "description": "Defended is the number of already defended VMs.\n",
            "type": "integer"
          },
          "discovered": {
            "description": "Discovered is the number of discovered unprodected VMs.\n",
            "type": "integer"
          },
          "error": {
            "description": "Error is an error logged during the the auto-deploy scan (if occurred).\n",
            "type": "string"
          },
          "errors": {
            "description": "Errors are the errors occurred in the command invocations.\n",
            "items": {
              "$ref": "#/components/schemas/deployment.CommandError"
            },
            "type": "array"
          },
          "failed": {
            "description": "Failed is the number of instances where deployment failed.\n",
            "type": "integer"
          },
          "missingPermissions": {
            "description": "MissingPermissions is the number of instances in regions that the credential don't have permissions to them.\n",
            "type": "integer"
          },
          "name": {
            "description": "Name is the spec name.\n",
            "type": "string"
          },
          "skipped": {
            "description": "Skipped is the number of instances that the deployment was skipped for due to having a running Docker engine or being a worker node in a k8s cluster.\n",
            "type": "integer"
          },
          "unmatched": {
            "description": "Unmatched is the number of discovered instances for which the scope does not apply.\n",
            "type": "integer"
          },
          "unsupported": {
            "description": "Unsupported is the number of instances with missing prerequisites.\n",
            "type": "integer"
          },
          "windows": {
            "description": "Windows is the number of windows instances discovered.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "types.HostAutoDeployStatus": {
        "description": "HostAutoDeployStatus is the status of the deployment tasks per spec during the host auto-deploy action",
        "properties": {
          "scanning": {
            "description": "Scanning indicates whether scanning is running.\n",
            "type": "boolean"
          },
          "status": {
            "description": "Status contains the deploy status for each spec.\n",
            "items": {
              "$ref": "#/components/schemas/types.HostAutoDeploySpecStatus"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "types.HostRadarData": {
        "description": "HostRadarData represent all data relevant to the network radar",
        "properties": {
          "hostCount": {
            "description": "HostCount is the total number of hosts.\n",
            "type": "integer"
          },
          "radar": {
            "description": "Radar holds all radar entities.\n",
            "items": {
              "$ref": "#/components/schemas/types.HostRadarEntity"
            },
            "type": "array"
          },
          "radarSubnets": {
            "description": "RadarSubnets holds all the radar subnets.\n",
            "items": {
              "$ref": "#/components/schemas/cnnf.NetworkEntity"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "types.HostRadarEntity": {
        "description": "HostRadarEntity is the extended host radar entity (include presentation metadata)",
        "properties": {
          "OSDistro": {
            "description": "OSDistro is the OS distro name (e.g., ubuntu).\n",
            "type": "string"
          },
          "_id": {
            "description": "ID is the host name.\n",
            "type": "string"
          },
          "activitiesCount": {
            "description": "ActivitiesCount is the number of activities detected in the host.\n",
            "type": "integer"
          },
          "agentless": {
            "description": "Agentless indicates whether this host was scanned by the agentless scanner.\n",
            "type": "boolean"
          },
          "allowAll": {
            "$ref": "#/components/schemas/cnnf.AllowAllConnections"
          },
          "appFirewallAttackCounts": {
            "description": "AppFirewallAttackCounts is the counts for the app firewall attacks.\n",
            "items": {
              "$ref": "#/components/schemas/types.AppFirewallAttackCount"
            },
            "type": "array"
          },
          "cloudMetadata": {
            "$ref": "#/components/schemas/common.CloudMetadata"
          },
          "cluster": {
            "description": "Cluster is the cluster the host is deployed on.\n",
            "type": "string"
          },
          "complianceDistribution": {
            "$ref": "#/components/schemas/vuln.Distribution"
          },
          "created": {
            "description": "Created is the profile creation time.\n",
            "format": "date-time",
            "type": "string"
          },
          "fileIntegrityCount": {
            "description": "FileIntegrityCount is the number of file integrity events detected in the host.\n",
            "type": "integer"
          },
          "filesystemCount": {
            "description": "FilesystemCount is number of filesystem events triggered by the entity.\n",
            "type": "integer"
          },
          "firewallProtection": {
            "$ref": "#/components/schemas/waas.ProtectionStatus"
          },
          "geoip": {
            "$ref": "#/components/schemas/runtime.ProfileNetworkGeoIP"
          },
          "incidentCount": {
            "description": "IncidentCount is the number of incidents triggered by the entity.\n",
            "type": "integer"
          },
          "incoming": {
            "description": "Incoming are the incoming connections from the host.\n",
            "items": {
              "$ref": "#/components/schemas/shared.HostRadarIncomingConnection"
            },
            "type": "array"
          },
          "internet": {
            "$ref": "#/components/schemas/shared.InternetConnections"
          },
          "labels": {
            "description": "Labels are the labels associated with the profile.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "listeningPorts": {
            "$ref": "#/components/schemas/common.ProfilePortData"
          },
          "logInspectionCount": {
            "description": "LogInspectionCount is the number of log inspection events detected in the host.\n",
            "type": "integer"
          },
          "networkCount": {
            "description": "NetworkCount is number of network events triggered by the entity.\n",
            "type": "integer"
          },
          "outboundPorts": {
            "$ref": "#/components/schemas/common.ProfilePortData"
          },
          "processesCount": {
            "description": "ProcessesCount is the number of processes events triggered by the entity.\n",
            "type": "integer"
          },
          "profileHash": {
            "$ref": "#/components/schemas/common.ProfileHash"
          },
          "subnetConnections": {
            "$ref": "#/components/schemas/shared.SubnetConnections"
          },
          "vulnerabilityDistribution": {
            "$ref": "#/components/schemas/vuln.Distribution"
          },
          "waasStats": {
            "$ref": "#/components/schemas/waas.MonitoringStats"
          }
        },
        "type": "object"
      },
      "types.ImageScanOptions": {
        "description": "ImageScanOptions holds the options for image scanning",
        "properties": {
          "hostname": {
            "description": "Hostname is the optional host name to scan.\n",
            "type": "string"
          },
          "imageTag": {
            "$ref": "#/components/schemas/shared.ImageTag"
          }
        },
        "type": "object"
      },
      "types.ImpactedContainer": {
        "description": "ImpactedContainer contains details of a running container with an impacted image",
        "properties": {
          "container": {
            "description": ".\n",
            "type": "string"
          },
          "factors": {
            "$ref": "#/components/schemas/types.RiskScoreFactors"
          },
          "host": {
            "description": ".\n",
            "type": "string"
          },
          "image": {
            "description": ".\n",
            "type": "string"
          },
          "namespace": {
            "description": ".\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "types.ImpactedOutOfBandEntity": {
        "description": "ImpactedOutOfBandEntity holds the info of an impacted out of band entity",
        "properties": {
          "containerName": {
            "description": "ContainerName is the name of the container or empty for host.\n",
            "type": "string"
          },
          "hostname": {
            "description": "Hostname is the name of the host that was scanned or host on which the container is deployed.\n",
            "type": "string"
          },
          "image": {
            "description": "Image is the image name of the container or empty for host.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "types.ImpactedPackage": {
        "description": "ImpactedPackage holds the vulnerability details for a package",
        "properties": {
          "cvss": {
            "description": "Cvss is the vulnerability cvss score for this package.\n",
            "format": "float",
            "type": "number"
          },
          "package": {
            "description": "Package is the impacted package name and version.\n",
            "type": "string"
          },
          "severity": {
            "description": "Severity is the vulnerability severity for this package.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "types.ImpactedResourceDetails": {
        "description": "ImpactedResourceDetails holds the vulnerability details for a specific impacted resource",
        "properties": {
          "containers": {
            "description": "Containers are the running containers of this image found in the environment.\n",
            "items": {
              "$ref": "#/components/schemas/types.ImpactedContainer"
            },
            "type": "array"
          },
          "functionDetails": {
            "description": "FunctionDetails is a formatted string holding function details.\n",
            "type": "string"
          },
          "packages": {
            "description": "Packages holds vulnerability details per impacted package found in this resource.\n",
            "items": {
              "$ref": "#/components/schemas/types.ImpactedPackage"
            },
            "type": "array"
          },
          "resourceID": {
            "description": "ResourceID is a resource identifier (e.g. image ID, hostname).\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "types.IntelligenceSettings": {
        "description": "IntelligenceSettings are the intelligence service settings",
        "properties": {
          "address": {
            "description": "Address is the intelligence service address.\n",
            "type": "string"
          },
          "customEndpoint": {
            "description": "CustomEndpoint is the user defined custom endpoint.\n",
            "type": "string"
          },
          "customEndpointCACert": {
            "description": "CustomEndpointCACert is the custom CA cert bundle for trusting the custom endpoint.\n",
            "type": "string"
          },
          "customEndpointCredentialID": {
            "description": "CustomEndpointCredentialID is the custom endpoint credential ID.\n",
            "type": "string"
          },
          "customEndpointEnabled": {
            "description": "CustomEndpointEnabled indicates that the user custom endpoint is enabled.\n",
            "type": "boolean"
          },
          "enabled": {
            "description": "Enabled indicates whether intelligence service is enabled.\n",
            "type": "boolean"
          },
          "token": {
            "description": "Token is the token used to access intelligence service.\n",
            "type": "string"
          },
          "uploadDisabled": {
            "description": "UploadDisabled indicates whether logs uploading is disabled.\n",
            "type": "boolean"
          },
          "windowsFeedEnabled": {
            "description": "WindowsFeedEnabled indicates whether windows feed is enabled.\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "types.IntelligenceStatus": {
        "description": "IntelligenceStatus stores the status on the intelligence service",
        "properties": {
          "connected": {
            "description": ".\n",
            "type": "boolean"
          },
          "err": {
            "description": ".\n",
            "type": "string"
          },
          "lastUpdate": {
            "description": ".\n",
            "format": "date-time",
            "type": "string"
          },
          "modified": {
            "description": ".\n",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "types.LatestVersion": {
        "description": "LatestVersion represents the latest remote product version",
        "properties": {
          "latestVersion": {
            "description": "LatestVersion is the latest official product version.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "types.LicenseStats": {
        "description": "LicenseStats holds the console license stats",
        "properties": {
          "avg": {
            "description": "Avg is the average number of credits.\n",
            "format": "double",
            "type": "number"
          },
          "containerDefenders": {
            "description": "ContainerDefenders is the total number of container defenders.\n",
            "type": "integer"
          },
          "dailySamplesDefenders": {
            "description": "DailySamplesDefenders holds the last 30 daily credits averages.\n",
            "items": {
              "$ref": "#/components/schemas/float64"
            },
            "type": "array"
          },
          "exceeded": {
            "description": "Exceeded indicates the number of credits exceeded license.\n",
            "type": "boolean"
          },
          "hostDefenders": {
            "description": "HostDefenders is the total number of host defenders.\n",
            "type": "integer"
          },
          "hourAvg": {
            "description": "HourAvg is the average number of credits per hour.\n",
            "format": "double",
            "type": "number"
          },
          "hourSamples": {
            "description": "HourSamples is the number of hourly samples collected.\n",
            "format": "double",
            "type": "number"
          },
          "monthlyUsage": {
            "description": "MonthlyUsage holds the last 24 monthly usage averages.\n",
            "items": {
              "$ref": "#/components/schemas/types.AllDefendersUsage"
            },
            "type": "array"
          },
          "msg": {
            "description": "Msg is the license exceeded error/warning message to show.\n",
            "type": "string"
          },
          "onDemandCredits": {
            "description": "OnDemandCredits is the number of on demand credits used during the current contract.\n",
            "type": "integer"
          },
          "protectedFunctions": {
            "description": "ProtectedFunctions is the number of serverless functions that have a defender installed.\n",
            "format": "double",
            "type": "number"
          },
          "scannedFunctions": {
            "description": "ScannedFunctions is the number functions being scanned for vulnerabilities and compliance issues without a defender installed.\n",
            "format": "double",
            "type": "number"
          },
          "serverlessTimestamp": {
            "description": "ServerlessTimestamp is the timestamp for the last serverless credit calculation.\n",
            "format": "date-time",
            "type": "string"
          },
          "timestamp": {
            "description": "Timestamp is the last collection timestamp.\n",
            "format": "date-time",
            "type": "string"
          },
          "totalCreditUsage": {
            "description": "TotalCreditUsage is the total amount of credits used from the beginning of the current contract.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "types.LogUploadResponse": {
        "description": "LogUploadResponse returns the result of uploading a file to the intelligence",
        "properties": {
          "remotePath": {
            "description": "Path returned by the intelligence.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "types.LogonSettings": {
        "description": "LogonSettings are settings associated with the login properties",
        "properties": {
          "basicAuthDisabled": {
            "description": "Indicates whether the user can use basic auth.\n",
            "type": "boolean"
          },
          "includeTLS": {
            "description": "IncludeTLS indicates that TLS checks should be included in copy links.\n",
            "type": "boolean"
          },
          "sessionTimeoutSec": {
            "description": "SessionTimeoutSec defines the session timeout in seconds.\n",
            "format": "int64",
            "type": "integer"
          },
          "strongPassword": {
            "description": "StrongPassword indicates whether strong password enforcement is applied.\n",
            "type": "boolean"
          },
          "useSupportCredentials": {
            "description": "UseSupportCredentials indicates whether to include credentials in the URL.\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "types.MgmtAuditFilters": {
        "description": "MgmtAuditFilters are filters for management audit queries",
        "properties": {
          "type": {
            "description": "Type is the management audit type filter.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "username": {
            "description": "Usernames is a filter for specific users.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "types.NetworkFirewallStats": {
        "description": "NetworkFirewallStats stores the total amount of network firewall audits",
        "properties": {
          "alerted": {
            "description": ".\n",
            "type": "integer"
          },
          "blocked": {
            "description": ".\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "types.ProfileStateUpdate": {
        "description": "ProfileStateUpdate is the request for updating profile state",
        "properties": {
          "profileID": {
            "description": "ID is the profile ID to relearn.\n",
            "type": "string"
          },
          "state": {
            "$ref": "#/components/schemas/shared.RuntimeProfileState"
          }
        },
        "type": "object"
      },
      "types.Project": {
        "description": "Project represent the project details",
        "properties": {
          "_id": {
            "description": "ID is the project name (primary index).\n",
            "type": "string"
          },
          "address": {
            "description": "Address is the project address.\n",
            "type": "string"
          },
          "ca": {
            "description": "CACertificate is the remote console CA certificate.\n",
            "items": {
              "$ref": "#/components/schemas/byte"
            },
            "type": "array"
          },
          "creationTime": {
            "description": "CreationTime is the remote project creation time.\n",
            "format": "date-time",
            "type": "string"
          },
          "err": {
            "description": "Err are errors that happened during project synchronization / setup.\n",
            "type": "string"
          },
          "password": {
            "$ref": "#/components/schemas/common.Secret"
          },
          "skipCertificateVerification": {
            "description": "SkipCertificateVerification indicates that the connection to the secondary project is done on insecure channel, this is used when secondary\nproject is behind a proxy or when customer is using custom certs.\n",
            "type": "boolean"
          },
          "username": {
            "description": "Username is the remote project username.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "types.ProjectCredentials": {
        "description": "ProjectCredentials are the supervisor project credentials",
        "properties": {
          "password": {
            "description": "Password is the password used for the deleted project access.\n",
            "type": "string"
          },
          "user": {
            "description": "User is the user used for the deleted project access.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "types.RegistryWebhookRequest": {
        "description": "RegistryWebhookRequest is a registry scanning webhook request.\nSchema supports multiple webhook providers:\nhttps://docs.docker.com/docker-hub/webhooks/\nhttps://docs.docker.com/registry/notifications/",
        "properties": {
          "action": {
            "description": "Action is the webhook action.\n",
            "type": "string"
          },
          "artifactory": {
            "$ref": "#/components/schemas/types.ArtifactoryWebhookRequest"
          },
          "domain": {
            "description": "Domain indicates the artifactory webhook domain (e.g., artifact, docker, build, etc). Used to avoid filter docker events.\n",
            "type": "string"
          },
          "event_type": {
            "description": "EventType is the artifactory webhook action performed (e.g., push).\n",
            "type": "string"
          },
          "type": {
            "description": "Type is the event type (Harbor registry).\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "types.ResourceVulnerabilityStats": {
        "description": "ResourceVulnerabilityStats holds vulnerability stats of a single resource type",
        "properties": {
          "cves": {
            "$ref": "#/components/schemas/vuln.Distribution"
          },
          "impacted": {
            "$ref": "#/components/schemas/vuln.Distribution"
          },
          "vulnerabilities": {
            "description": "All resource vulnerabilities.\n",
            "items": {
              "$ref": "#/components/schemas/types.VulnerabilityInfo"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "types.RiskScoreFactors": {
        "description": "RiskScoreFactors holds factors used to calculate risk score",
        "properties": {
          "internet": {
            "description": "Internet indicates whether a container has internet access.\n",
            "type": "boolean"
          },
          "network": {
            "description": "Network indicates whether a container is listening to ports.\n",
            "type": "boolean"
          },
          "noSecurityProfile": {
            "description": "NoSecurityProfile indicates whether a container has security profile issue.\n",
            "type": "boolean"
          },
          "privilegedContainer": {
            "description": "PrivilegedContainer indicates whether a container runs using the --privileged flag.\n",
            "type": "boolean"
          },
          "rootPrivilege": {
            "description": "RootPrivilege indicates whether a container runs as root.\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "types.RuleComplianceStats": {
        "description": "RuleComplianceStats holds data regarding applied compliance rule",
        "properties": {
          "failed": {
            "description": "Failed is the count of the rule compliance IDs in resources.\n",
            "type": "integer"
          },
          "name": {
            "description": "Name is the name of the applied rule.\n",
            "type": "string"
          },
          "policyType": {
            "$ref": "#/components/schemas/common.PolicyType"
          },
          "total": {
            "description": "Total is the count of evaluations done by rule.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "types.RuntimeStats": {
        "description": "RuntimeStats are stats for runtime flows (sum of audits per flow)",
        "properties": {
          "filesystem": {
            "description": ".\n",
            "type": "integer"
          },
          "kubernetes": {
            "description": ".\n",
            "type": "integer"
          },
          "network": {
            "description": ".\n",
            "type": "integer"
          },
          "processes": {
            "description": ".\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "types.SecretsStatus": {
        "description": "SecretsStatus holds the update status for the secrets",
        "properties": {
          "err": {
            "description": ".\n",
            "type": "string"
          },
          "lastUpdate": {
            "description": ".\n",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "types.SecurityAdvisorConfiguration": {
        "description": "SecurityAdvisorConfiguration is the security configuration associated with security advisor",
        "properties": {
          "accountID": {
            "description": "AccountID is the customer account ID.\n",
            "type": "string"
          },
          "apikey": {
            "description": "APIKey is the security advisor secret.\n",
            "type": "string"
          },
          "findingsURL": {
            "description": "FindingsURL is the url to which findings should be sent.\n",
            "type": "string"
          },
          "providerId": {
            "description": "ProviderID is the id assigned to Twistlock.\n",
            "type": "string"
          },
          "tokenURL": {
            "description": "TokenURL is the url from which token should be fetched.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "types.SecurityAdvisorDashboardResp": {
        "description": "SecurityAdvisorDashboardResp is the response to security advisor dashboard",
        "properties": {
          "url": {
            "description": "URL is the console URL link.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "types.SecurityAdvisorNotes": {
        "description": "SecurityAdvisorNotes security advisor the security advisor finding metadata",
        "properties": {
          "changedSince": {
            "description": "ChangedSince is the last time entries were modified.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "types.ServerlessAutoDeploySpecStatus": {
        "description": "ServerlessAutoDeploySpecStatus contains status for a particular serverless auto-deploy spec",
        "properties": {
          "defended": {
            "description": "Defended is the number of already defended functions.\n",
            "type": "integer"
          },
          "discovered": {
            "description": "Discovered is the number of functions to protect.\n",
            "type": "integer"
          },
          "name": {
            "description": "Name is the spec name.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "types.ServerlessAutoDeployStatus": {
        "description": "ServerlessAutoDeployStatus is the status of the serverless auto-deploy scan",
        "properties": {
          "errors": {
            "description": "Errors is the collection of errors for the auto-deploy scan.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "scanning": {
            "description": "Scanning indicates whether scanning is running.\n",
            "type": "boolean"
          },
          "specs": {
            "description": "Specs contains the status for each spec.\n",
            "items": {
              "$ref": "#/components/schemas/types.ServerlessAutoDeploySpecStatus"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "types.ServerlessRadarStatus": {
        "description": "ServerlessRadarStatus holds the status for serverless radar scans",
        "properties": {
          "err": {
            "description": ".\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "types.ServerlessUsage": {
        "description": "ServerlessUsage holds the number of defenders, invocations and credits used for serverless defenders",
        "properties": {
          "creditCount": {
            "description": "CreditCount is credits that was used for this defender type.\n",
            "format": "double",
            "type": "number"
          },
          "defendersCount": {
            "description": "DefendersCount is the number of defenders that was used for this defender type.\n",
            "format": "double",
            "type": "number"
          },
          "protectedFunctions": {
            "description": "ProtectedFunctions is the number of serverless functions that have a defender installed.\n",
            "format": "double",
            "type": "number"
          },
          "scannedFunctions": {
            "description": "ScannedFunctions is the number functions being scanned for vulnerabilities and compliance issues without a defender installed.\n",
            "format": "double",
            "type": "number"
          }
        },
        "type": "object"
      },
      "types.Settings": {
        "description": "Settings are the global system settings",
        "properties": {
          "WAASLogScrubbingSpecs": {
            "$ref": "#/components/schemas/waas.LogScrubbingSpecs"
          },
          "accessCaCert": {
            "description": "AccessCACert is a custom CA certificate.\n",
            "type": "string"
          },
          "address": {
            "description": "Address is the intelligence service address.\n",
            "type": "string"
          },
          "alerts": {
            "$ref": "#/components/schemas/api.AlertSettings"
          },
          "certSettings": {
            "$ref": "#/components/schemas/types.CertSettings"
          },
          "certificatePeriodDays": {
            "description": "ClientCertificatePeriodDays is the certificates period in days of client certificates.\n",
            "type": "integer"
          },
          "checkRevocation": {
            "description": "CheckRevocation indicates whether cert revocation status is required.\n",
            "type": "boolean"
          },
          "clusteredDB": {
            "$ref": "#/components/schemas/clustereddb.Settings"
          },
          "codeRepoSettings": {
            "$ref": "#/components/schemas/shared.CodeRepoSettings"
          },
          "communicationPort": {
            "description": "MgmtPortHttp is the console http port.\n",
            "type": "integer"
          },
          "consoleCaCert": {
            "description": "ConsoleCACert is a custom CA certificate for the console.\n",
            "type": "string"
          },
          "consoleCustomCert": {
            "$ref": "#/components/schemas/common.Secret"
          },
          "consoleNames": {
            "description": "ConsoleNames is a list of names to use when generating the console SAN certificate.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "customEndpoint": {
            "description": "CustomEndpoint is the user defined custom endpoint.\n",
            "type": "string"
          },
          "customEndpointCACert": {
            "description": "CustomEndpointCACert is the custom CA cert bundle for trusting the custom endpoint.\n",
            "type": "string"
          },
          "customEndpointCredentialID": {
            "description": "CustomEndpointCredentialID is the custom endpoint credential ID.\n",
            "type": "string"
          },
          "customEndpointEnabled": {
            "description": "CustomEndpointEnabled indicates that the user custom endpoint is enabled.\n",
            "type": "boolean"
          },
          "customLabels": {
            "$ref": "#/components/schemas/shared.CustomLabelsSettings"
          },
          "defenderSettings": {
            "$ref": "#/components/schemas/defender.Settings"
          },
          "enabled": {
            "description": "Enabled indicates whether intelligence service is enabled.\n",
            "type": "boolean"
          },
          "forensic": {
            "$ref": "#/components/schemas/shared.ForensicSettings"
          },
          "hasAdmin": {
            "description": "HasAdmin indicates whether the admin account is initialized.\n",
            "type": "boolean"
          },
          "hostAutoDeploy": {
            "$ref": "#/components/schemas/shared.HostAutoDeploySpecifications"
          },
          "hpkp": {
            "$ref": "#/components/schemas/types.HPKPSettings"
          },
          "identitySettings": {
            "$ref": "#/components/schemas/identity.Settings"
          },
          "ldapEnabled": {
            "description": "LdapEnabled indicates whether ldap is enabled.\n",
            "type": "boolean"
          },
          "licenseKey": {
            "description": "LicenseKey is the license key.\n",
            "type": "string"
          },
          "logging": {
            "$ref": "#/components/schemas/shared.LoggingSettings"
          },
          "logon": {
            "$ref": "#/components/schemas/types.LogonSettings"
          },
          "oauthEnabled": {
            "description": "OauthEnabled indicates whether Oauth is enabled.\n",
            "type": "boolean"
          },
          "oidcEnabled": {
            "description": "OidcEnabled indicates whether OpenID connect is enabled.\n",
            "type": "boolean"
          },
          "projects": {
            "$ref": "#/components/schemas/api.ProjectSettings"
          },
          "proxy": {
            "$ref": "#/components/schemas/common.ProxySettings"
          },
          "registry": {
            "$ref": "#/components/schemas/shared.RegistrySettings"
          },
          "runtimeSecretScrubbingSettings": {
            "$ref": "#/components/schemas/shared.RuntimeSecretScrubbingSettings"
          },
          "samlEnabled": {
            "description": "SamlEnabled indicates whether saml is enabled.\n",
            "type": "boolean"
          },
          "scan": {
            "$ref": "#/components/schemas/shared.ScanSettings"
          },
          "secretsStores": {
            "$ref": "#/components/schemas/shared.SecretsStores"
          },
          "securedConsolePort": {
            "description": "MgmtPortHttps is the console https port.\n",
            "type": "integer"
          },
          "serverlessAutoDeploy": {
            "$ref": "#/components/schemas/shared.ServerlessAutoDeploySpecifications"
          },
          "serverlessScan": {
            "description": "ServerlessScan is the serverless scanning settings.\n",
            "items": {
              "$ref": "#/components/schemas/shared.ServerlessScanSpecification"
            },
            "type": "array"
          },
          "tasDroplets": {
            "description": "TASDropletsSpecification is the TAS droplets scanning settings.\n",
            "items": {
              "$ref": "#/components/schemas/shared.TASDropletSpecification"
            },
            "type": "array"
          },
          "telemetry": {
            "$ref": "#/components/schemas/types.TelemetrySettings"
          },
          "token": {
            "description": "Token is the token used to access intelligence service.\n",
            "type": "string"
          },
          "trustedCerts": {
            "description": "TrustedCerts is the list of trusted cert to allow in docker access scenarios.\n",
            "items": {
              "$ref": "#/components/schemas/shared.TrustedCertSignature"
            },
            "type": "array"
          },
          "trustedCertsEnabled": {
            "description": "TrustedCertsEnabled indicates whether to enable the trusted certificate feature.\n",
            "type": "boolean"
          },
          "uploadDisabled": {
            "description": "UploadDisabled indicates whether logs uploading is disabled.\n",
            "type": "boolean"
          },
          "version": {
            "description": "Version is the current console version.\n",
            "type": "string"
          },
          "vms": {
            "$ref": "#/components/schemas/shared.VMSpecifications"
          },
          "webAppsDiscoverySettings": {
            "$ref": "#/components/schemas/waas.WebAppsDiscoverySettings"
          },
          "wildFireSettings": {
            "$ref": "#/components/schemas/shared.WildFireSettings"
          },
          "windowsFeedEnabled": {
            "description": "WindowsFeedEnabled indicates whether windows feed is enabled.\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "types.Stats": {
        "description": "Stats represents the status model that is stored in the DB",
        "properties": {
          "_id": {
            "description": "Id is the metric type.\n",
            "type": "string"
          },
          "access": {
            "$ref": "#/components/schemas/types.AccessStats"
          },
          "appEmbeddedAppFirewall": {
            "$ref": "#/components/schemas/types.AppFirewallStats"
          },
          "container": {
            "$ref": "#/components/schemas/types.RuntimeStats"
          },
          "containerAppFirewall": {
            "$ref": "#/components/schemas/types.AppFirewallStats"
          },
          "containerNetworkFirewall": {
            "$ref": "#/components/schemas/types.NetworkFirewallStats"
          },
          "host": {
            "$ref": "#/components/schemas/types.RuntimeStats"
          },
          "hostAppFirewall": {
            "$ref": "#/components/schemas/types.AppFirewallStats"
          },
          "hostComplianceCount": {
            "description": "HostComplianceCount is the host compliance count.\n",
            "type": "integer"
          },
          "hostNetworkFirewall": {
            "$ref": "#/components/schemas/types.NetworkFirewallStats"
          },
          "incidentsCount": {
            "description": "IncidentsCount is the incidents count.\n",
            "type": "integer"
          },
          "outOfBandAppFirewall": {
            "$ref": "#/components/schemas/types.AppFirewallStats"
          },
          "serverless": {
            "$ref": "#/components/schemas/types.RuntimeStats"
          },
          "serverlessAppFirewall": {
            "$ref": "#/components/schemas/types.AppFirewallStats"
          },
          "time": {
            "description": "UnixTimestamp is the unix timestamp.\n",
            "format": "int64",
            "type": "integer"
          },
          "vulnerabilities": {
            "$ref": "#/components/schemas/types.VulnerabilitiesStats"
          }
        },
        "type": "object"
      },
      "types.Status": {
        "description": "Status stores the status of a specific defender or for global features such as intelligence or LDAP",
        "properties": {
          "_id": {
            "description": "Id is the defender identifier if the status is per defender or the type for global statuses.\n",
            "type": "string"
          },
          "appFirewall": {
            "$ref": "#/components/schemas/defender.FeatureStatus"
          },
          "container": {
            "$ref": "#/components/schemas/defender.ScanStatus"
          },
          "containerNetworkFirewall": {
            "$ref": "#/components/schemas/defender.FeatureStatus"
          },
          "features": {
            "$ref": "#/components/schemas/defender.FeatureStatus"
          },
          "filesystem": {
            "$ref": "#/components/schemas/defender.FeatureStatus"
          },
          "hostAutoDeploy": {
            "$ref": "#/components/schemas/types.HostAutoDeployStatus"
          },
          "hostCustomCompliance": {
            "$ref": "#/components/schemas/defender.FeatureStatus"
          },
          "hostNetworkFirewall": {
            "$ref": "#/components/schemas/defender.FeatureStatus"
          },
          "image": {
            "$ref": "#/components/schemas/defender.ScanStatus"
          },
          "intelligence": {
            "$ref": "#/components/schemas/types.IntelligenceStatus"
          },
          "lastModified": {
            "description": "Datetime the status was last modified.\n",
            "format": "date-time",
            "type": "string"
          },
          "network": {
            "$ref": "#/components/schemas/defender.FeatureStatus"
          },
          "process": {
            "$ref": "#/components/schemas/defender.FeatureStatus"
          },
          "runc": {
            "$ref": "#/components/schemas/defender.FeatureStatus"
          },
          "runtime": {
            "$ref": "#/components/schemas/defender.FeatureStatus"
          },
          "secrets": {
            "$ref": "#/components/schemas/types.SecretsStatus"
          },
          "serverlessAutoDeploy": {
            "$ref": "#/components/schemas/types.ServerlessAutoDeployStatus"
          },
          "serverlessRadar": {
            "$ref": "#/components/schemas/types.ServerlessRadarStatus"
          },
          "tasDroplets": {
            "$ref": "#/components/schemas/defender.ScanStatus"
          },
          "type": {
            "$ref": "#/components/schemas/types.StatusType"
          },
          "upgrade": {
            "$ref": "#/components/schemas/defender.UpgradeStatus"
          }
        },
        "type": "object"
      },
      "types.StatusType": {
        "description": "StatusType holds the status of a given flow (defender/intelligence/etc...)\nTODO: Use type in shared.Status object",
        "enum": [
          [
            "intelligence",
            "secrets",
            "serverlessRadar",
            "serverlessAutoDeploy",
            "hostAutoDeploy"
          ]
        ],
        "type": "string"
      },
      "types.TelemetrySettings": {
        "description": "TelemetrySettings is the telemetry settings",
        "properties": {
          "enabled": {
            "description": "Enabled determines whether the telemetry settings are enabled.\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "types.Trends": {
        "description": "Trends contains data on global trends in the system",
        "properties": {
          "complianceTrend": {
            "description": "ComplianceTrend represents the compliance trend.\n",
            "items": {
              "$ref": "#/components/schemas/types.ComplianceDailyStats"
            },
            "type": "array"
          },
          "defendersSummary": {
            "additionalProperties": {
              "$ref": "#/components/schemas/int"
            },
            "description": "DefendersSummary represents the defenders count of each category.\n",
            "type": "object"
          },
          "vulnerabilitySummary": {
            "$ref": "#/components/schemas/types.VulnerabilitySummary"
          }
        },
        "type": "object"
      },
      "types.UserCollection": {
        "description": "UserCollection holds general collection properties that are accessible to all users",
        "properties": {
          "color": {
            "$ref": "#/components/schemas/common.Color"
          },
          "name": {
            "description": "Unique name associated with this collection.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "types.UserPassword": {
        "description": "UserPassword represents a new user password",
        "properties": {
          "newPassword": {
            "description": "New password to assign to the user who is invoking the API.\n",
            "type": "string"
          },
          "oldPassword": {
            "description": "User's existing password to replace.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "types.UserPreferences": {
        "description": "UserPreferences are the user global project reference that are persistent between versions",
        "properties": {
          "_id": {
            "description": "User is the user name.\n",
            "type": "string"
          },
          "hideGuidedTour": {
            "description": "HideGuidedTour indicates that guided tour should be hidden.\n",
            "type": "boolean"
          },
          "hideProjectDialog": {
            "description": "HideProjectsDialog indicates the initial project selection dialog should be hidden.\n",
            "type": "boolean"
          },
          "waasRulesNotificationDismissed": {
            "description": "WaasRulesNotificationDismiss indicates the time the user dismissed the waas added rules top bar.\n",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "types.UserProject": {
        "description": "UserProject holds general project properties that are accessible to all users",
        "properties": {
          "_id": {
            "description": "ID is the project id.\n",
            "type": "string"
          },
          "address": {
            "description": "Address is project address.\n",
            "type": "string"
          },
          "connected": {
            "description": "Connected indicates if the project is currently disconnected due to an error.\n",
            "type": "boolean"
          },
          "creationTime": {
            "description": "CreationTime is the project creation time.\n",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "types.VulnImpactedResources": {
        "description": "VulnImpactedResources holds details about the resources impacted by vulnerability",
        "properties": {
          "_id": {
            "description": "Id is the CVE ID (index for the impacted resources).\n",
            "type": "string"
          },
          "codeRepos": {
            "description": "CodeRepos is a list of impacted code repositories.\n",
            "items": {
              "$ref": "#/components/schemas/types.ImpactedResourceDetails"
            },
            "type": "array"
          },
          "codeReposCount": {
            "description": "CodeReposCount is the total impacted code repositories count.\n",
            "type": "integer"
          },
          "functions": {
            "description": "Functions is a map between function id to its details.\n",
            "items": {
              "$ref": "#/components/schemas/types.ImpactedResourceDetails"
            },
            "type": "array"
          },
          "functionsCount": {
            "description": "FunctionsCount is the total impacted functions count.\n",
            "type": "integer"
          },
          "hosts": {
            "description": "Hosts is the list of impacted hosts.\n",
            "items": {
              "$ref": "#/components/schemas/types.ImpactedResourceDetails"
            },
            "type": "array"
          },
          "hostsCount": {
            "description": "HostsCount is the total impacted hosts count.\n",
            "type": "integer"
          },
          "images": {
            "description": "Images is the list of impacted hosts.\n",
            "items": {
              "$ref": "#/components/schemas/types.ImpactedResourceDetails"
            },
            "type": "array"
          },
          "imagesCount": {
            "description": "ImagesCount is the total impacted images count.\n",
            "type": "integer"
          },
          "registryImages": {
            "description": "RegistryImages is a list of impacted registry images.\n",
            "items": {
              "$ref": "#/components/schemas/types.ImpactedResourceDetails"
            },
            "type": "array"
          },
          "registryImagesCount": {
            "description": "RegistryImagesCount is the total impacted registry images count.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "types.VulnerabilitiesStats": {
        "description": "VulnerabilitiesStats are measures the total number of vulnerabilities in a specific images",
        "properties": {
          "containerCompliance": {
            "description": "ContainerCompliance is the sum of all compliance issues for all running containers.\n",
            "type": "integer"
          },
          "imageCompliance": {
            "description": "ImageCompliance is the sum of all compliance issues of all running images.\n",
            "type": "integer"
          },
          "imageCve": {
            "description": "ImageCVE is the sum of cve vulnerabilities of all running images.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "types.VulnerabilityInfo": {
        "description": "VulnerabilityInfo holds information about vulnerability used for VulnerabilityExplorer",
        "properties": {
          "cve": {
            "description": "CVE ID.\n",
            "type": "string"
          },
          "description": {
            "description": "Vulnerability description.\n",
            "type": "string"
          },
          "highestCVSS": {
            "description": "HighestCVSS is the highest CVSS score of the vulnerability.\n",
            "format": "float",
            "type": "number"
          },
          "highestRiskFactors": {
            "$ref": "#/components/schemas/types.RiskScoreFactors"
          },
          "highestSeverity": {
            "description": "HighestSeverity is the highest severity of the vulnerability.\n",
            "type": "string"
          },
          "impactedPkgs": {
            "description": "Packages impacted by the vulnerability.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "impactedResourceType": {
            "$ref": "#/components/schemas/vuln.ResourceType"
          },
          "impactedResourcesCnt": {
            "description": "Number of resources impacted by this vulnerability.\n",
            "type": "integer"
          },
          "link": {
            "description": "Link to CVE.\n",
            "type": "string"
          },
          "riskFactors": {
            "$ref": "#/components/schemas/vuln.RiskFactors"
          },
          "riskScore": {
            "description": "Risk score.\n",
            "format": "float",
            "type": "number"
          },
          "status": {
            "description": "CVE status.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "types.VulnerabilityStats": {
        "description": "VulnerabilityStats holds statistics about vulnerabilities issues",
        "properties": {
          "_id": {
            "description": "ID of the vulnerability stats.\n",
            "type": "string"
          },
          "codeRepos": {
            "$ref": "#/components/schemas/types.ResourceVulnerabilityStats"
          },
          "containers": {
            "$ref": "#/components/schemas/types.ResourceVulnerabilityStats"
          },
          "functions": {
            "$ref": "#/components/schemas/types.ResourceVulnerabilityStats"
          },
          "hosts": {
            "$ref": "#/components/schemas/types.ResourceVulnerabilityStats"
          },
          "images": {
            "$ref": "#/components/schemas/types.ResourceVulnerabilityStats"
          },
          "modified": {
            "description": "Date/time when the entity was modified.\n",
            "format": "date-time",
            "type": "string"
          },
          "registryImages": {
            "$ref": "#/components/schemas/types.ResourceVulnerabilityStats"
          }
        },
        "type": "object"
      },
      "types.VulnerabilitySummary": {
        "description": "VulnerabilitySummary represents the stats of each impacted entity",
        "properties": {
          "containers": {
            "$ref": "#/components/schemas/vuln.Distribution"
          },
          "functions": {
            "$ref": "#/components/schemas/vuln.Distribution"
          },
          "hosts": {
            "$ref": "#/components/schemas/vuln.Distribution"
          },
          "images": {
            "$ref": "#/components/schemas/vuln.Distribution"
          },
          "registryImages": {
            "$ref": "#/components/schemas/vuln.Distribution"
          }
        },
        "type": "object"
      },
      "types.XSOARAlerts": {
        "description": "XSOARAlerts is a list of XSOAR alerts",
        "items": {
          "$ref": "#/components/schemas/string"
        },
        "type": "array"
      },
      "uint32": {
        "type": "integer"
      },
      "uint64": {
        "type": "integer"
      },
      "uint8": {
        "type": "integer"
      },
      "vuln.AllCompliance": {
        "description": "AllCompliance contains data regarding passed compliance checks",
        "properties": {
          "compliance": {
            "description": "Compliance are all the passed compliance checks.\n",
            "items": {
              "$ref": "#/components/schemas/vuln.Vulnerability"
            },
            "type": "array"
          },
          "enabled": {
            "description": "Enabled indicates whether passed compliance checks is enabled by policy.\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "vuln.Application": {
        "description": "Application represents a detected application",
        "properties": {
          "knownVulnerabilities": {
            "description": "Total number of vulnerabilities for this application.\n",
            "type": "integer"
          },
          "layerTime": {
            "description": "Image layer to which the application belongs - layer creation time.\n",
            "format": "int64",
            "type": "integer"
          },
          "name": {
            "description": "Name of the application.\n",
            "type": "string"
          },
          "path": {
            "description": "Path of the detected application.\n",
            "type": "string"
          },
          "version": {
            "description": "Version of the application.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "vuln.ComplianceCategory": {
        "description": "ComplianceCategory represents the compliance category",
        "enum": [
          [
            "Docker",
            "Docker (DISA STIG)",
            "Twistlock Labs",
            "Custom",
            "Istio",
            "Linux",
            "Kubernetes",
            "CRI",
            "OpenShift"
          ]
        ],
        "type": "string"
      },
      "vuln.ComplianceTemplate": {
        "description": "ComplianceTemplate represents the compliance template",
        "enum": [
          [
            "PCI",
            "HIPAA",
            "NIST SP 800-190",
            "GDPR",
            "DISA STIG"
          ]
        ],
        "type": "string"
      },
      "vuln.Condition": {
        "description": "Condition are extended options for vulnerability assessment in authorization flows",
        "properties": {
          "block": {
            "description": "Specifies the effect. If true, the effect is block.\n",
            "type": "boolean"
          },
          "id": {
            "description": "Vulnerability ID.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "vuln.Conditions": {
        "description": "Conditions represents a list of CVE rules (used to determine whether a CVE applies to a given package)",
        "items": {
          "$ref": "#/components/schemas/vuln.Rules"
        },
        "type": "array"
      },
      "vuln.CustomVulnerabilities": {
        "description": "CustomVulnerabilities is a collection of custom vulnerabilities\nTBD: this storage usage is not best practice, should be migrate to a 1 document per vulnerability",
        "properties": {
          "_id": {
            "description": "ID is the custom vulnerabilities feed ID.\n",
            "type": "string"
          },
          "digest": {
            "description": "Digest is the internal custom vulnerabilities feed digest.\n",
            "type": "string"
          },
          "rules": {
            "description": "Rules is the list of custom vulnerabilities rules.\n",
            "items": {
              "$ref": "#/components/schemas/vuln.CustomVulnerability"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "vuln.CustomVulnerability": {
        "description": "CustomVulnerability is a user customized vulnerability",
        "properties": {
          "_id": {
            "description": ".\n",
            "type": "string"
          },
          "maxVersionInclusive": {
            "description": ".\n",
            "type": "string"
          },
          "md5": {
            "description": ".\n",
            "type": "string"
          },
          "minVersionInclusive": {
            "description": ".\n",
            "type": "string"
          },
          "name": {
            "description": ".\n",
            "type": "string"
          },
          "package": {
            "description": ".\n",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/vuln.PackageType"
          }
        },
        "type": "object"
      },
      "vuln.Distribution": {
        "description": "Distribution counts the number of vulnerabilities per type",
        "properties": {
          "critical": {
            "description": ".\n",
            "type": "integer"
          },
          "high": {
            "description": ".\n",
            "type": "integer"
          },
          "low": {
            "description": ".\n",
            "type": "integer"
          },
          "medium": {
            "description": ".\n",
            "type": "integer"
          },
          "total": {
            "description": ".\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "vuln.Effect": {
        "description": "Effect specifies relevant action for a vulnerability",
        "enum": [
          [
            "ignore",
            "alert",
            "block"
          ]
        ],
        "type": "string"
      },
      "vuln.ExpirationDate": {
        "description": "ExpirationDate is the vulnerability expiration date",
        "properties": {
          "date": {
            "description": "Date is the vulnerability expiration date.\n",
            "format": "date-time",
            "type": "string"
          },
          "enabled": {
            "description": "Enabled indicates that the grace period is enabled.\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "vuln.ExploitType": {
        "description": "ExploitType represents the type of an exploit",
        "enum": [
          [
            "",
            "exploit-db",
            "exploit-windows"
          ]
        ],
        "type": "string"
      },
      "vuln.PackageType": {
        "description": "PackageType describes the package type",
        "enum": [
          [
            "nodejs",
            "gem",
            "python",
            "jar",
            "package",
            "windows",
            "binary",
            "nuget",
            "go"
          ]
        ],
        "type": "string"
      },
      "vuln.RHELCpeHashes": {
        "description": "RHELCpeHashes represent the CPE hashes associated with a given Red Hat repository",
        "items": {
          "$ref": "#/components/schemas/uint32"
        },
        "type": "array"
      },
      "vuln.ResourceType": {
        "description": "ResourceType represents the resource type",
        "enum": [
          [
            "container",
            "image",
            "host",
            "istio",
            "vm",
            "function",
            "codeRepo",
            "registryImage"
          ]
        ],
        "type": "string"
      },
      "vuln.RiskFactors": {
        "additionalProperties": {
          "$ref": "#/components/schemas/string"
        },
        "description": "RiskFactors maps the existence of vulnerability risk factors",
        "type": "object"
      },
      "vuln.Rules": {
        "description": "Rules represents a list of CVE assessment rules (used to determine whether a CVE applies to a given package)",
        "items": {
          "$ref": "#/components/schemas/string"
        },
        "type": "array"
      },
      "vuln.TagInfo": {
        "description": "TagInfo is the tag info in a specific vulnerability context",
        "properties": {
          "color": {
            "$ref": "#/components/schemas/common.Color"
          },
          "comment": {
            "description": "Tag comment in a specific vulnerability context.\n",
            "type": "string"
          },
          "name": {
            "description": "Name of the tag.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "vuln.TagType": {
        "description": "TagType represents the resource type of the tag",
        "enum": [
          [
            "image",
            "host",
            "function",
            "codeRepo",
            ""
          ]
        ],
        "type": "string"
      },
      "vuln.Type": {
        "description": "Type represents the vulnerability type",
        "enum": [
          [
            "container",
            "image",
            "host_config",
            "daemon_config",
            "daemon_config_files",
            "security_operations",
            "k8s_master",
            "k8s_worker",
            "k8s_federation",
            "linux",
            "windows",
            "istio",
            "serverless",
            "custom",
            "docker_stig",
            "openshift_master",
            "openshift_worker"
          ]
        ],
        "type": "string"
      },
      "vuln.Vulnerability": {
        "description": "Vulnerability is a general schema for vulnerabilities (e.g., for compliance or packages)",
        "properties": {
          "applicableRules": {
            "description": "Rules applied on the package.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "binaryPkgs": {
            "description": "Names of the distro binary package names (packages which are built from the source of the package).\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "block": {
            "description": "Indicates if the vulnerability has a block effect (true) or not (false).\n",
            "type": "boolean"
          },
          "cause": {
            "description": "Additional information regarding the root cause for the vulnerability.\n",
            "type": "string"
          },
          "cri": {
            "description": "Indicates if this is a CRI-specific vulnerability (true) or not (false).\n",
            "type": "boolean"
          },
          "custom": {
            "description": "Indicates if the vulnerability is a custom vulnerability (e.g., openscap, sandbox) (true) or not (false).\n",
            "type": "boolean"
          },
          "cve": {
            "description": "CVE ID of the vulnerability (if applied).\n",
            "type": "string"
          },
          "cvss": {
            "description": "CVSS score of the vulnerability.\n",
            "format": "float",
            "type": "number"
          },
          "description": {
            "description": "Description of the vulnerability.\n",
            "type": "string"
          },
          "discovered": {
            "description": "Date/time when the vulnerability was discovered.\n",
            "format": "date-time",
            "type": "string"
          },
          "exploit": {
            "$ref": "#/components/schemas/vuln.ExploitType"
          },
          "fixDate": {
            "description": "Date/time when the vulnerability was fixed (in Unix time).\n",
            "format": "int64",
            "type": "integer"
          },
          "fixLink": {
            "description": "Link to the vendor's fixed-version information.\n",
            "type": "string"
          },
          "functionLayer": {
            "description": "Specifies the serverless layer ID in which the vulnerability was discovered.\n",
            "type": "string"
          },
          "gracePeriodDays": {
            "description": "Number of grace days left for a vulnerability, based on the configured grace period. Nil if no block vulnerability rule applies.\n",
            "type": "integer"
          },
          "id": {
            "description": "ID of the violation.\n",
            "type": "integer"
          },
          "layerTime": {
            "description": "Date/time of the image layer to which the CVE belongs.\n",
            "format": "int64",
            "type": "integer"
          },
          "link": {
            "description": "Vendor link to the CVE.\n",
            "type": "string"
          },
          "packageName": {
            "description": "Name of the package that caused the vulnerability.\n",
            "type": "string"
          },
          "packageVersion": {
            "description": "Version of the package that caused the vulnerability (or null).\n",
            "type": "string"
          },
          "published": {
            "description": "Date/time when the vulnerability was published (in Unix time).\n",
            "format": "int64",
            "type": "integer"
          },
          "riskFactors": {
            "$ref": "#/components/schemas/vuln.RiskFactors"
          },
          "severity": {
            "description": "Textual representation of the vulnerability's severity.\n",
            "type": "string"
          },
          "status": {
            "description": "Vendor status for the vulnerability.\n",
            "type": "string"
          },
          "templates": {
            "description": "List of templates with which the vulnerability is associated.\n",
            "items": {
              "$ref": "#/components/schemas/vuln.ComplianceTemplate"
            },
            "type": "array"
          },
          "text": {
            "description": "Description of the violation.\n",
            "type": "string"
          },
          "title": {
            "description": "Compliance title.\n",
            "type": "string"
          },
          "twistlock": {
            "description": "Indicates if this is a Twistlock-specific vulnerability (true) or not (false).\n",
            "type": "boolean"
          },
          "type": {
            "$ref": "#/components/schemas/vuln.Type"
          },
          "vecStr": {
            "description": "Textual representation of the metric values used to score the vulnerability.\n",
            "type": "string"
          },
          "vulnTagInfos": {
            "description": "Tag information for the vulnerability.\n",
            "items": {
              "$ref": "#/components/schemas/vuln.TagInfo"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "waas.APIModelID": {
        "description": "APIModelID is the id identifying a unique api model",
        "properties": {
          "appID": {
            "description": "AppID is the app ID.\n",
            "type": "string"
          },
          "ruleID": {
            "description": "RuleID is the rule ID.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "waas.APIObservation": {
        "description": "APIObservation is the API observation deduced from the API model",
        "properties": {
          "appID": {
            "description": "AppID is the app ID.\n",
            "type": "string"
          },
          "hosts": {
            "description": "Hosts are the hosts seen for this API.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "images": {
            "description": "Images are the image names seen for this API.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "learningStarted": {
            "description": "LearningStarted is the start date of learning for this model.\n",
            "format": "date-time",
            "type": "string"
          },
          "outOfBand": {
            "description": "OutOfBand indicates out of band API observation.\n",
            "type": "boolean"
          },
          "paths": {
            "description": "Paths are the API paths.\n",
            "items": {
              "$ref": "#/components/schemas/waas.APIPath"
            },
            "type": "array"
          },
          "ruleID": {
            "description": "RuleID is the rule ID.\n",
            "type": "string"
          },
          "servers": {
            "description": "Servers are the servers seen for this API.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "waas.APIPath": {
        "description": "APIPath defines the data of a single API path",
        "properties": {
          "hits": {
            "description": "Hits are amount of hits on this path.\n",
            "type": "integer"
          },
          "lastSeen": {
            "description": "LastSeen is the date when this path was last seen.\n",
            "format": "date-time",
            "type": "string"
          },
          "path": {
            "description": "Path is the API path.\n",
            "type": "string"
          },
          "requestData": {
            "additionalProperties": {
              "$ref": "#/components/schemas/waas.APIRequest"
            },
            "description": "RequestData is the per-method request data for this path.\n",
            "type": "object"
          }
        },
        "type": "object"
      },
      "waas.APIRequest": {
        "description": "APIRequest represents a single API request and its data",
        "properties": {
          "bodySchema": {
            "$ref": "#/components/schemas/waas.BodySchema"
          },
          "contentType": {
            "description": "ContentType is the request content type.\n",
            "type": "string"
          },
          "method": {
            "description": "Method is the HTTP Method of the API request.\n",
            "type": "string"
          },
          "path": {
            "description": "Path is the path of the API request.\n",
            "type": "string"
          },
          "protected": {
            "description": "Protected indicates that the method+path are protected by WAAS API Protection.\n",
            "type": "boolean"
          },
          "queryParameters": {
            "description": "QueryParameters are the query parameters of the API request.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "responseContentType": {
            "description": "ResponseContentType is the response content type.\n",
            "type": "string"
          },
          "server": {
            "description": "Server is the destination Server (including port and schema) of the API request.\n",
            "type": "string"
          },
          "sourceIP": {
            "description": "SourceIP is the source IP of the API request.\n",
            "type": "string"
          },
          "statusCode": {
            "description": "StatusCode is the response status code.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "waas.APISpec": {
        "description": "APISpec is an API specification",
        "properties": {
          "description": {
            "description": "Description of the app.\n",
            "type": "string"
          },
          "effect": {
            "$ref": "#/components/schemas/waas.Effect"
          },
          "endpoints": {
            "description": "The app's endpoints.\n",
            "items": {
              "$ref": "#/components/schemas/waas.Endpoint"
            },
            "type": "array"
          },
          "fallbackEffect": {
            "$ref": "#/components/schemas/waas.Effect"
          },
          "paths": {
            "description": "Paths of the API's endpoints.\n",
            "items": {
              "$ref": "#/components/schemas/waas.Path"
            },
            "type": "array"
          },
          "queryParamFallbackEffect": {
            "$ref": "#/components/schemas/waas.Effect"
          }
        },
        "type": "object"
      },
      "waas.APIStats": {
        "description": "APIStats contains the API stats that occurred since the last stats dump",
        "properties": {
          "actionCounts": {
            "$ref": "#/components/schemas/waas.ActionStats"
          },
          "attackTypeStats": {
            "$ref": "#/components/schemas/waas.AttackTypeStats"
          },
          "blockedRequests": {
            "description": "BlockedRequests is the number of blocked requests since last dump.\n",
            "type": "integer"
          },
          "forwardedRequests": {
            "description": "ForwardedRequests is the number of forwarded requests since last dump.\n",
            "type": "integer"
          },
          "geoData": {
            "$ref": "#/components/schemas/waas.GeoData"
          },
          "inspectedBodyBytes": {
            "description": "InspectedBodyBytes are the total request and response inspected body bytes.\n",
            "type": "integer"
          },
          "inspectionLimitExceeded": {
            "description": "InspectionLimitExceeded is the total number of requests in which the body size exceeds inspection limit.\n",
            "type": "integer"
          },
          "interstitialPages": {
            "description": "InterstitialPages is the number of interstitial pages served.\n",
            "type": "integer"
          },
          "lastErrs": {
            "description": "LastErrs is the last errors that occurred, storing up to 20 errors.\n",
            "items": {
              "$ref": "#/components/schemas/waas.ReqErrorCtx"
            },
            "type": "array"
          },
          "maxRequestInspectionDuration": {
            "description": "MaxRequestInspectionDuration is the maximum request inspection duration (time spent in waas until request was forwarded).\n",
            "format": "int64",
            "type": "integer"
          },
          "maxResponseSizeBytes": {
            "description": "MaxResponseSizeBytes contains the max response size.\n",
            "type": "integer"
          },
          "parsingErrs": {
            "description": "ParsingErrs is a counter of the parsing errors that occurred.\n",
            "type": "integer"
          },
          "reCAPTCHAs": {
            "description": "ReCAPTCHAs is the number of reCAPTCHA pages served.\n",
            "type": "integer"
          },
          "responseCodeStats": {
            "$ref": "#/components/schemas/waas.ResponseCodeStats"
          },
          "totalErrs": {
            "description": "TotalErrs is a counter of the errors that occurred.\n",
            "type": "integer"
          },
          "totalForwardedRequestsDuration": {
            "description": "TotalForwardedRequestsDuration is the total request duration for forwarded requests.\n",
            "format": "int64",
            "type": "integer"
          },
          "totalRequestInspectionDuration": {
            "description": "TotalRequestInspectionDuration is the total request inspection duration (time spent in waas until request was forwarded).\n",
            "format": "int64",
            "type": "integer"
          },
          "totalRequests": {
            "description": "TotalRequests is the number of incoming requests since last dump.\n",
            "type": "integer"
          },
          "totalResponseSizeBytes": {
            "description": "TotalResponsesSizeBytes is the total APIs response size.\n",
            "type": "integer"
          },
          "totalTimeouts": {
            "description": "TotalTimeouts is the number of timed out responses.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "waas.AccessControls": {
        "description": "AccessControls contains the access controls config (e.g., denied/allowed sources)",
        "properties": {
          "alert": {
            "description": "Alert are the denied sources for which we alert.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "allow": {
            "description": "Allow are the allowed sources for which we don't alert or prevent.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "allowMode": {
            "description": "AllowMode indicates allowlist (true) or denylist (false) mode.\n",
            "type": "boolean"
          },
          "enabled": {
            "description": "Enabled indicates if access controls protection is enabled.\n",
            "type": "boolean"
          },
          "fallbackEffect": {
            "$ref": "#/components/schemas/waas.Effect"
          },
          "prevent": {
            "description": "Prevent are the denied sources.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "waas.ActionStats": {
        "description": "ActionStats contains the WAAS action stats",
        "properties": {
          "alert": {
            "description": "Alerts is the number of Alert actions.\n",
            "type": "integer"
          },
          "ban": {
            "description": "Bans is the number of Ban actions.\n",
            "type": "integer"
          },
          "prevent": {
            "description": "Prevents is the number of Prevent actions.\n",
            "type": "integer"
          },
          "reCAPTCHA": {
            "description": "ReCAPTCHAs is the number of reCAPTCHA actions.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "waas.AppProtectionStats": {
        "description": "AppProtectionStats contains the app protection status statistics",
        "properties": {
          "protected": {
            "description": "Protected indicates the amount of protected WAAS app entities (containers/hosts).\n",
            "type": "integer"
          },
          "unprotected": {
            "description": "Unprotected indicates the amount of unprotected WAAS app entities (containers/hosts).\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "waas.AppStats": {
        "description": "AppStats contains the WAAS app policy statistics",
        "properties": {
          "accessControl": {
            "description": "AccessControl is the total amount of apps with Access Control policy.\n",
            "type": "integer"
          },
          "bot": {
            "description": "Bot is the total amount of apps with Bot Protection policy.\n",
            "type": "integer"
          },
          "customRulesEnabled": {
            "description": "CustomRulesEnabled is the total amount of apps with Custom Rules enabled.\n",
            "type": "integer"
          },
          "dos": {
            "description": "DoS is the total amount of apps with DoS Protection policy.\n",
            "type": "integer"
          },
          "waf": {
            "description": "WAF is the total amount of apps with WAF policy.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "waas.ApplicationSpec": {
        "description": "ApplicationSpec is an application of a firewall instance",
        "properties": {
          "apiSpec": {
            "$ref": "#/components/schemas/waas.APISpec"
          },
          "appID": {
            "description": "Unique ID for the app.\n",
            "type": "string"
          },
          "attackTools": {
            "$ref": "#/components/schemas/waas.ProtectionConfig"
          },
          "banDurationMinutes": {
            "description": "Ban duration, in minutes.\n",
            "type": "integer"
          },
          "body": {
            "$ref": "#/components/schemas/waas.BodyConfig"
          },
          "botProtectionSpec": {
            "$ref": "#/components/schemas/waas.BotProtectionSpec"
          },
          "certificate": {
            "$ref": "#/components/schemas/common.Secret"
          },
          "clickjackingEnabled": {
            "description": "Indicates whether clickjacking protection is enabled (true) or not (false).\n",
            "type": "boolean"
          },
          "cmdi": {
            "$ref": "#/components/schemas/waas.ProtectionConfig"
          },
          "codeInjection": {
            "$ref": "#/components/schemas/waas.ProtectionConfig"
          },
          "csrfEnabled": {
            "description": "Indicates whether Cross-Site Request Forgery (CSRF) protection is enabled (true) or not (false).\n",
            "type": "boolean"
          },
          "customBlockResponse": {
            "$ref": "#/components/schemas/waas.CustomBlockResponseConfig"
          },
          "customRules": {
            "description": "List of custom runtime rules.\n",
            "items": {
              "$ref": "#/components/schemas/customrules.Ref"
            },
            "type": "array"
          },
          "disableEventIDHeader": {
            "description": "Indicates if event ID header should be attached to the response or not.\n",
            "type": "boolean"
          },
          "dosConfig": {
            "$ref": "#/components/schemas/waas.DoSConfig"
          },
          "headerSpecs": {
            "description": "Configuration for inspecting HTTP headers.\n",
            "items": {
              "$ref": "#/components/schemas/waas.HeaderSpec"
            },
            "type": "array"
          },
          "intelGathering": {
            "$ref": "#/components/schemas/waas.IntelGatheringConfig"
          },
          "lfi": {
            "$ref": "#/components/schemas/waas.ProtectionConfig"
          },
          "malformedReq": {
            "$ref": "#/components/schemas/waas.ProtectionConfig"
          },
          "maliciousUpload": {
            "$ref": "#/components/schemas/waas.MaliciousUploadConfig"
          },
          "networkControls": {
            "$ref": "#/components/schemas/waas.NetworkControls"
          },
          "remoteHostForwarding": {
            "$ref": "#/components/schemas/waas.RemoteHostForwardingConfig"
          },
          "responseHeaderSpecs": {
            "description": "Configuration for modifying HTTP response headers.\n",
            "items": {
              "$ref": "#/components/schemas/waas.ResponseHeaderSpec"
            },
            "type": "array"
          },
          "sessionCookieBan": {
            "description": "Indicates if bans in this app are made by session cookie ID (true) or false (not).\n",
            "type": "boolean"
          },
          "sessionCookieEnabled": {
            "description": "Indicates if session cookies are enabled (true) or not (false).\n",
            "type": "boolean"
          },
          "sessionCookieSameSite": {
            "$ref": "#/components/schemas/waas.SameSite"
          },
          "sessionCookieSecure": {
            "description": "Indicates the Secure attribute of the session cookie.\n",
            "type": "boolean"
          },
          "shellshock": {
            "$ref": "#/components/schemas/waas.ProtectionConfig"
          },
          "sqli": {
            "$ref": "#/components/schemas/waas.ProtectionConfig"
          },
          "tlsConfig": {
            "$ref": "#/components/schemas/waas.TLSConfig"
          },
          "xss": {
            "$ref": "#/components/schemas/waas.ProtectionConfig"
          }
        },
        "type": "object"
      },
      "waas.AttackType": {
        "description": "AttackType is the type of the attack",
        "enum": [
          [
            "xss",
            "sqli",
            "cmdi",
            "lfi",
            "codeInjection",
            "deniedIP",
            "deniedCountry",
            "header",
            "violationsExceeded",
            "attackTools",
            "shellshock",
            "disallowedFile",
            "malformedRequest",
            "inspectionLimitExceeded",
            "informationLeak",
            "unexpectedAPI",
            "dos",
            "searchEngineCrawler",
            "businessAnalyticsBot",
            "educationalBot",
            "newsBot",
            "financialBot",
            "contentFeedClient",
            "archivingBot",
            "careerSearchBot",
            "mediaSearchBot",
            "genericBot",
            "webAutomationTool",
            "webScraper",
            "apiLibrary",
            "httpLibrary",
            "sessionValidation",
            "javascriptTimeout",
            "missingCookie",
            "browserImpersonation",
            "botImpersonation",
            "requestAnomalies",
            "userDefinedBot",
            "recaptchaRequired",
            "recaptchaVerificationFailed",
            "customRule"
          ]
        ],
        "type": "string"
      },
      "waas.AttackTypeStats": {
        "description": "AttackTypeStats are the WAAS attack type stats",
        "properties": {
          "accessControl": {
            "description": "AccessControl is the count of access control attacks.\n",
            "type": "integer"
          },
          "apiProtection": {
            "description": "APIProtection is the count of API Protection attacks.\n",
            "type": "integer"
          },
          "attackTools": {
            "description": "AttackTools is the count of attack tool attacks.\n",
            "type": "integer"
          },
          "bots": {
            "description": "Bots is the count of Bot attacks.\n",
            "type": "integer"
          },
          "cmdInjection": {
            "description": "CMDInjection is the count of command injection attacks.\n",
            "type": "integer"
          },
          "codeInjection": {
            "description": "CodeInjection is the count of code injection attacks.\n",
            "type": "integer"
          },
          "customRules": {
            "description": "CustomRules is the count of attacks detected by custom rules.\n",
            "type": "integer"
          },
          "dos": {
            "description": "DoS is the count of DoS attacks.\n",
            "type": "integer"
          },
          "lfi": {
            "description": "LFI is the count of local file injection attacks.\n",
            "type": "integer"
          },
          "sqlInjection": {
            "description": "SQLInjection is the count of SQL injection attacks.\n",
            "type": "integer"
          },
          "waf": {
            "description": "WAF is the count of WAF protection attacks.\n",
            "type": "integer"
          },
          "xss": {
            "description": "XSS is the count of XSS attacks.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "waas.BodyConfig": {
        "description": "BodyConfig represents app configuration related to HTTP Body",
        "properties": {
          "inspectionLimitExceededEffect": {
            "$ref": "#/components/schemas/waas.Effect"
          },
          "inspectionSizeBytes": {
            "description": "InspectionSizeBytes represents the max amount of data to inspect in request body.\n",
            "type": "integer"
          },
          "skip": {
            "description": "Skip indicates that body inspection should be skipped.\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "waas.BodySchema": {
        "description": "BodySchema is the request's body schema",
        "properties": {
          "contentType": {
            "description": "ContentType is the content type the schema represents.\n",
            "type": "string"
          },
          "head": {
            "$ref": "#/components/schemas/waas.BodySchemaNode"
          }
        },
        "type": "object"
      },
      "waas.BodySchemaChildren": {
        "additionalProperties": {
          "$ref": "#/components/schemas/waas.BodySchemaNode"
        },
        "description": "BodySchemaChildren represents a set of body schema children, uniquely identified by the body field's name",
        "type": "object"
      },
      "waas.BodySchemaNode": {
        "description": "BodySchemaNode represents a single body schema node",
        "properties": {
          "children": {
            "$ref": "#/components/schemas/waas.BodySchemaChildren"
          },
          "name": {
            "description": "Name is the body schema item name (key for json, tag name for xml).\n",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/waas.ParamType"
          }
        },
        "type": "object"
      },
      "waas.BotProtectionSpec": {
        "description": "BotProtectionSpec is the bot protections spec",
        "properties": {
          "interstitialPage": {
            "description": "Indicates if an interstitial page is served (true) or not (false).\n",
            "type": "boolean"
          },
          "jsInjectionSpec": {
            "$ref": "#/components/schemas/waas.JSInjectionSpec"
          },
          "knownBotProtectionsSpec": {
            "$ref": "#/components/schemas/waas.KnownBotProtectionsSpec"
          },
          "reCAPTCHASpec": {
            "$ref": "#/components/schemas/waas.ReCAPTCHASpec"
          },
          "sessionValidation": {
            "$ref": "#/components/schemas/waas.Effect"
          },
          "unknownBotProtectionSpec": {
            "$ref": "#/components/schemas/waas.UnknownBotProtectionSpec"
          },
          "userDefinedBots": {
            "description": "Effects to perform when user-defined bots are detected.\n",
            "items": {
              "$ref": "#/components/schemas/waas.UserDefinedBot"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "waas.CertificateMeta": {
        "description": "CertificateMeta is the certificate metadata",
        "properties": {
          "issuerName": {
            "description": "IssuerName is the certificate issuer common name.\n",
            "type": "string"
          },
          "notAfter": {
            "description": "NotAfter is the time the certificate is not valid (expiry time).\n",
            "format": "date-time",
            "type": "string"
          },
          "subjectName": {
            "description": "SubjectName is the certificate subject common name.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "waas.CustomBlockResponseConfig": {
        "description": "CustomBlockResponseConfig is a custom block message config for a policy",
        "properties": {
          "body": {
            "description": "Custom HTML for the block response.\n",
            "type": "string"
          },
          "code": {
            "description": "Custom HTTP response code for the block response.\n",
            "type": "integer"
          },
          "enabled": {
            "description": "Indicates if the custom block response is enabled (true) or not (false).\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "waas.DailyStats": {
        "description": "DailyStats represents the WAAS daily stats",
        "properties": {
          "_id": {
            "description": "Date is date that the daily stats are relevant to.\n",
            "type": "string"
          },
          "actionStats": {
            "$ref": "#/components/schemas/waas.ActionStats"
          },
          "attackTypeStats": {
            "$ref": "#/components/schemas/waas.AttackTypeStats"
          },
          "geoData": {
            "$ref": "#/components/schemas/waas.GeoData"
          },
          "inspectedBytes": {
            "description": "InspectedBytes is total amount body bytes inspected by WAAS.\n",
            "type": "integer"
          },
          "policyChangeCount": {
            "description": "PolicyChangeCount is the amount of policy changes for this day.\n",
            "type": "integer"
          },
          "totalRequests": {
            "description": "TotalRequests is the total request count.\n",
            "type": "integer"
          },
          "unprotectedAppsVulnStats": {
            "$ref": "#/components/schemas/waas.UnprotectedAppsVulnStats"
          }
        },
        "type": "object"
      },
      "waas.Dashboard": {
        "description": "Dashboard contains the data of the WAAS Dashboard",
        "properties": {
          "appProtectionStats": {
            "$ref": "#/components/schemas/waas.AppProtectionStats"
          },
          "dailyStats": {
            "description": "DailyStats are the WAAS daily stats.\n",
            "items": {
              "$ref": "#/components/schemas/waas.DailyStats"
            },
            "type": "array"
          },
          "insights": {
            "description": "Insights are the current WAAS insights.\n",
            "items": {
              "$ref": "#/components/schemas/waas.Insight"
            },
            "type": "array"
          },
          "policyStats": {
            "$ref": "#/components/schemas/waas.PolicyStats"
          }
        },
        "type": "object"
      },
      "waas.DoSConfig": {
        "description": "DoSConfig is a dos policy specification",
        "properties": {
          "alert": {
            "$ref": "#/components/schemas/waas.DoSRates"
          },
          "ban": {
            "$ref": "#/components/schemas/waas.DoSRates"
          },
          "enabled": {
            "description": "Enabled indicates if dos protection is enabled.\n",
            "type": "boolean"
          },
          "excludedNetworkLists": {
            "description": "Network IPs to exclude from DoS tracking.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "matchConditions": {
            "description": "Conditions on which to match to track a request. The conditions are \\\"OR\\\"'d together during the check.\n",
            "items": {
              "$ref": "#/components/schemas/waas.DoSMatchCondition"
            },
            "type": "array"
          },
          "trackSession": {
            "description": "Indicates if the custom session ID generated during bot protection flow is tracked (true) or not (false).\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "waas.DoSMatchCondition": {
        "description": "DoSMatchCondition is used for matching a request for tracking",
        "properties": {
          "fileTypes": {
            "description": "File types for request matching.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "methods": {
            "description": "HTTP methods for request matching.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "responseCodeRanges": {
            "description": "Response codes for the request's response matching.\n",
            "items": {
              "$ref": "#/components/schemas/waas.StatusCodeRange"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "waas.DoSRates": {
        "description": "DoSRates specifies dos requests rates (thresholds)",
        "properties": {
          "average": {
            "description": "Average request rate (requests / second).\n",
            "type": "integer"
          },
          "burst": {
            "description": "Burst request rate (requests / second).\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "waas.Effect": {
        "description": "Effect is the effect that will be used in the rule",
        "enum": [
          [
            "ban",
            "prevent",
            "alert",
            "allow",
            "disable",
            "reCAPTCHA"
          ]
        ],
        "type": "string"
      },
      "waas.Endpoint": {
        "description": "Endpoint is an application endpoint",
        "properties": {
          "basePath": {
            "description": "Base path for the endpoint.\n",
            "type": "string"
          },
          "exposedPort": {
            "description": "Exposed port that the proxy is listening on.\n",
            "type": "integer"
          },
          "grpc": {
            "description": "Indicates if the proxy supports gRPC (true) or not (false).\n",
            "type": "boolean"
          },
          "host": {
            "description": "URL address (name or IP) of the endpoint's API specification (e.g., petstore.swagger.io). The address can be prefixed with a wildcard (e.g., *.swagger.io).\n",
            "type": "string"
          },
          "http2": {
            "description": "Indicates if the proxy supports HTTP/2 (true) or not (false).\n",
            "type": "boolean"
          },
          "internalPort": {
            "description": "Internal port that the application is listening on.\n",
            "type": "integer"
          },
          "tls": {
            "description": "Indicates if the connection is secured (true) or not (false).\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "waas.ExceptionField": {
        "description": "ExceptionField is used to perform the protection exception fields",
        "properties": {
          "key": {
            "description": "Field in HTTP request.\n",
            "type": "string"
          },
          "location": {
            "$ref": "#/components/schemas/waas.ExceptionLocation"
          }
        },
        "type": "object"
      },
      "waas.ExceptionLocation": {
        "description": "ExceptionLocation indicates exception http field location",
        "enum": [
          [
            "path",
            "query",
            "queryValues",
            "cookie",
            "UserAgentHeader",
            "header",
            "body",
            "rawBody",
            "XMLPath",
            "JSONPath"
          ]
        ],
        "type": "string"
      },
      "waas.FileType": {
        "description": "FileType is the type of an uploaded file",
        "enum": [
          [
            "pdf",
            "officeLegacy",
            "officeOoxml",
            "odf",
            "jpeg",
            "png",
            "gif",
            "bmp",
            "ico",
            "avi",
            "mp4",
            "aac",
            "mp3",
            "wav",
            "zip",
            "gzip",
            "rar",
            "7zip"
          ]
        ],
        "type": "string"
      },
      "waas.GeoData": {
        "additionalProperties": {
          "$ref": "#/components/schemas/waas.TrafficStats"
        },
        "description": "GeoData are the per-country traffic stats",
        "type": "object"
      },
      "waas.HSTSConfig": {
        "description": "HSTSConfig is the HTTP Strict Transport Security configuration in order to enforce HSTS header\nsee: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security",
        "properties": {
          "enabled": {
            "description": "Enabled indicates if HSTS enforcement is enabled.\n",
            "type": "boolean"
          },
          "includeSubdomains": {
            "description": "IncludeSubdomains indicates if this rule applies to all of the site's subdomains as well.\n",
            "type": "boolean"
          },
          "maxAgeSeconds": {
            "description": "maxAgeSeconds is the time (in seconds) that the browser should remember that a site is only be accessed using HTTPS.\n",
            "type": "integer"
          },
          "preload": {
            "description": "Preload indicates if it should support preload.\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "waas.HTTPField": {
        "description": "HTTPField is used to perform checks on flags and fields",
        "properties": {
          "key": {
            "description": "Key is the key of the field, if exists (e.g. header and cookie).\n",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/waas.HTTPFieldType"
          },
          "value": {
            "description": "Value is the value of the field, if exists.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "waas.HTTPFieldType": {
        "description": "HTTPFieldType indicates type of http field",
        "enum": [
          [
            "method",
            "xmlBody",
            "jsonBody",
            "formBody",
            "multipartBody",
            "rawBody",
            "protobufBody",
            "query",
            "cookie",
            "header",
            "url"
          ]
        ],
        "type": "string"
      },
      "waas.HeaderSpec": {
        "description": "HeaderSpec is specification for a single header and its allowed or blocked values",
        "properties": {
          "allow": {
            "description": "Indicates if the flow is to be allowed (true) or blocked (false).\n",
            "type": "boolean"
          },
          "effect": {
            "$ref": "#/components/schemas/waas.Effect"
          },
          "name": {
            "description": "Header name.\n",
            "type": "string"
          },
          "required": {
            "description": "Indicates if the header must be present (true) or not (false).\n",
            "type": "boolean"
          },
          "values": {
            "description": "Wildcard expressions that represent the header value.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "waas.Insight": {
        "description": "Insight represents an insight on the dashboard",
        "properties": {
          "message": {
            "description": "Message is the display message of the insight.\n",
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/waas.InsightType"
          }
        },
        "type": "object"
      },
      "waas.InsightType": {
        "description": "InsightType is the insight type",
        "enum": [
          [
            "vulnerableUnprotectedApps",
            "expiredCertificate",
            "upcomingCertificateExpiry",
            "noAPIProtection"
          ]
        ],
        "type": "string"
      },
      "waas.IntelGatheringConfig": {
        "description": "IntelGatheringConfig is the configuration for intelligence gathering protections",
        "properties": {
          "infoLeakageEffect": {
            "$ref": "#/components/schemas/waas.Effect"
          },
          "removeFingerprintsEnabled": {
            "description": "Indicates if server fingerprints should be removed (true) or not (false).\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "waas.JSInjectionSpec": {
        "description": "JSInjectionSpec is the js injection protection spec",
        "properties": {
          "enabled": {
            "description": "Indicates if JavaScript injection is enabled (true) or not (false).\n",
            "type": "boolean"
          },
          "timeoutEffect": {
            "$ref": "#/components/schemas/waas.Effect"
          }
        },
        "type": "object"
      },
      "waas.KnownBotProtectionsSpec": {
        "description": "KnownBotProtectionsSpec is the known bot protections spec",
        "properties": {
          "archiving": {
            "$ref": "#/components/schemas/waas.Effect"
          },
          "businessAnalytics": {
            "$ref": "#/components/schemas/waas.Effect"
          },
          "careerSearch": {
            "$ref": "#/components/schemas/waas.Effect"
          },
          "contentFeedClients": {
            "$ref": "#/components/schemas/waas.Effect"
          },
          "educational": {
            "$ref": "#/components/schemas/waas.Effect"
          },
          "financial": {
            "$ref": "#/components/schemas/waas.Effect"
          },
          "mediaSearch": {
            "$ref": "#/components/schemas/waas.Effect"
          },
          "news": {
            "$ref": "#/components/schemas/waas.Effect"
          },
          "searchEngineCrawlers": {
            "$ref": "#/components/schemas/waas.Effect"
          }
        },
        "type": "object"
      },
      "waas.LogScrubbingSpec": {
        "description": "LogScrubbingSpec defined a single log scrubbing specification",
        "properties": {
          "disabled": {
            "description": "Indicates if the rule is currently disabled (true) or not (false).\n",
            "type": "boolean"
          },
          "key": {
            "description": "Field in HTTP request.\n",
            "type": "string"
          },
          "location": {
            "$ref": "#/components/schemas/waas.ExceptionLocation"
          },
          "modified": {
            "description": "Datetime when the rule was last modified.\n",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "Name of the rule.\n",
            "type": "string"
          },
          "notes": {
            "description": "Free-form text.\n",
            "type": "string"
          },
          "owner": {
            "description": "User who created or last modified the rule.\n",
            "type": "string"
          },
          "placeholder": {
            "description": "Placeholder is the placeholder text to replace the matched field content.\n",
            "type": "string"
          },
          "previousName": {
            "description": "Previous name of the rule. Required for rule renaming.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "waas.LogScrubbingSpecs": {
        "description": "LogScrubbingSpecs is the log scrubbing specifications",
        "items": {
          "$ref": "#/components/schemas/waas.LogScrubbingSpec"
        },
        "type": "array"
      },
      "waas.MaliciousUploadConfig": {
        "description": "MaliciousUploadConfig is the configuration for file upload protection",
        "properties": {
          "allowedExtensions": {
            "description": "Allowed file extensions.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "allowedFileTypes": {
            "description": "Allowed file types.\n",
            "items": {
              "$ref": "#/components/schemas/waas.FileType"
            },
            "type": "array"
          },
          "effect": {
            "$ref": "#/components/schemas/waas.Effect"
          }
        },
        "type": "object"
      },
      "waas.Method": {
        "description": "Method is a method information",
        "properties": {
          "method": {
            "description": "Type of HTTP request (e.g., PUT, GET, etc.).\n",
            "type": "string"
          },
          "parameters": {
            "description": "Parameters that are part of the HTTP request.\n",
            "items": {
              "$ref": "#/components/schemas/waas.Param"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "waas.MinTLSVersion": {
        "description": "MinTLSVersion is the list of acceptable TLS versions",
        "enum": [
          [
            "1.0",
            "1.1",
            "1.2",
            "1.3"
          ]
        ],
        "type": "string"
      },
      "waas.MonitoringStats": {
        "description": "MonitoringStats are the waas per-profile monitoring stats",
        "properties": {
          "aggregationStart": {
            "description": "AggregationStart indicates when stats aggregation started.\n",
            "format": "date-time",
            "type": "string"
          },
          "lastUpdate": {
            "description": "LastUpdate indicates when the stats were last updated.\n",
            "format": "date-time",
            "type": "string"
          },
          "profileID": {
            "description": "ProfileID is the profile ID.\n",
            "type": "string"
          },
          "stats": {
            "$ref": "#/components/schemas/waas.APIStats"
          }
        },
        "type": "object"
      },
      "waas.NetworkControls": {
        "description": "NetworkControls contains the network controls config (e.g., access controls for IPs and countries)",
        "properties": {
          "advancedProtectionEffect": {
            "$ref": "#/components/schemas/waas.Effect"
          },
          "countries": {
            "$ref": "#/components/schemas/waas.AccessControls"
          },
          "exceptionSubnets": {
            "description": "Network lists for which requests completely bypass WAAS checks and protections.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "subnets": {
            "$ref": "#/components/schemas/waas.AccessControls"
          }
        },
        "type": "object"
      },
      "waas.NetworkList": {
        "description": "NetworkList represent network list of IP/CIDR in waas",
        "properties": {
          "_id": {
            "description": "Unique ID.\n",
            "type": "string"
          },
          "description": {
            "description": "Description of the network list.\n",
            "type": "string"
          },
          "disabled": {
            "description": "Indicates if the rule is currently disabled (true) or not (false).\n",
            "type": "boolean"
          },
          "modified": {
            "description": "Datetime when the rule was last modified.\n",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "Name of the rule.\n",
            "type": "string"
          },
          "notes": {
            "description": "Free-form text.\n",
            "type": "string"
          },
          "owner": {
            "description": "User who created or last modified the rule.\n",
            "type": "string"
          },
          "previousName": {
            "description": "Previous name of the rule. Required for rule renaming.\n",
            "type": "string"
          },
          "subnets": {
            "description": "List of the IPv4 addresses and IP CIDR blocks.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "waas.OpenAPIScan": {
        "description": "OpenAPIScan represents the OpenAPI file scan",
        "properties": {
          "_id": {
            "description": "ID is the scan identifier.\n",
            "type": "string"
          },
          "issueResults": {
            "description": "IssueResults are the scanned issues results.\n",
            "items": {
              "$ref": "#/components/schemas/waas.OpenAPIScanIssueResult"
            },
            "type": "array"
          },
          "scanInfo": {
            "$ref": "#/components/schemas/waas.OpenAPIScanInfo"
          },
          "scanStartTime": {
            "description": "ScanStartTime is the scan started.\n",
            "format": "date-time",
            "type": "string"
          },
          "severityDistribution": {
            "$ref": "#/components/schemas/waas.OpenAPIScanIssuesSeverityDistribution"
          },
          "specInfo": {
            "$ref": "#/components/schemas/waas.OpenAPISpecInfo"
          }
        },
        "type": "object"
      },
      "waas.OpenAPIScanInfo": {
        "description": "OpenAPIScanInfo is the OpenAPI scan info",
        "properties": {
          "appID": {
            "description": "AppID is the WAAS app id the file was imported from.\n",
            "type": "string"
          },
          "policyType": {
            "$ref": "#/components/schemas/common.PolicyType"
          },
          "ruleID": {
            "description": "RuleID is the WAAS rule id the file was imported from.\n",
            "type": "string"
          },
          "source": {
            "$ref": "#/components/schemas/waas.OpenAPIScanSource"
          }
        },
        "type": "object"
      },
      "waas.OpenAPIScanIssueMetadata": {
        "description": "OpenAPIScanIssueMetadata represents the static metadata of an API definition issue\nFields reflect the KICS metadata,\nExample: https://github.com/Checkmarx/kics/blob/master/assets/queries/openAPI/general/items_undefined/metadata.json",
        "properties": {
          "category": {
            "description": "Category is the issue category.\n",
            "type": "string"
          },
          "descriptionText": {
            "description": "DescriptionText is the issue description.\n",
            "type": "string"
          },
          "descriptionUrl": {
            "description": "DescriptionURL is the issue information url.\n",
            "type": "string"
          },
          "id": {
            "description": "ID is the unique identifier of the issue metadata.\n",
            "type": "string"
          },
          "override": {
            "additionalProperties": {
              "$ref": "#/components/schemas/waas.OpenAPIScanIssueMetadata"
            },
            "description": "Override is the list of possible override fields by OpenAPI version.\n",
            "type": "object"
          },
          "queryName": {
            "description": "Name is the issue name.\n",
            "type": "string"
          },
          "severity": {
            "$ref": "#/components/schemas/waas.OpenAPIScanIssueSeverity"
          }
        },
        "type": "object"
      },
      "waas.OpenAPIScanIssueResult": {
        "description": "OpenAPIScanIssueResult represents a specific issue result in the OpenAPI spec file\nFields reflect the KICS rego queries result,\nExample: https://github.com/Checkmarx/kics/blob/master/assets/queries/openAPI/general/items_undefined/query.rego",
        "properties": {
          "_id": {
            "description": "ID is the issue result ID.\n",
            "type": "integer"
          },
          "category": {
            "description": "Category is the issue category.\n",
            "type": "string"
          },
          "descriptionText": {
            "description": "DescriptionText is the issue description.\n",
            "type": "string"
          },
          "descriptionUrl": {
            "description": "DescriptionURL is the issue information url.\n",
            "type": "string"
          },
          "id": {
            "description": "ID is the unique identifier of the issue metadata.\n",
            "type": "string"
          },
          "override": {
            "additionalProperties": {
              "$ref": "#/components/schemas/waas.OpenAPIScanIssueMetadata"
            },
            "description": "Override is the list of possible override fields by OpenAPI version.\n",
            "type": "object"
          },
          "queryName": {
            "description": "Name is the issue name.\n",
            "type": "string"
          },
          "searchKey": {
            "description": "SearchKey is the issue location in the spec file.\n",
            "type": "string"
          },
          "severity": {
            "$ref": "#/components/schemas/waas.OpenAPIScanIssueSeverity"
          },
          "status": {
            "description": "Status is the issue status.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "waas.OpenAPIScanIssueSeverity": {
        "description": "OpenAPIScanIssueSeverity is the OpenAPI spec file issue severity",
        "enum": [
          [
            "INFO",
            "LOW",
            "MEDIUM",
            "HIGH"
          ]
        ],
        "type": "string"
      },
      "waas.OpenAPIScanIssueStatus": {
        "description": "OpenAPIScanIssueStatus represents an OpenAPI file issue status",
        "properties": {
          "id": {
            "description": "ID is the issue result ID.\n",
            "type": "integer"
          },
          "status": {
            "description": "Status is the issue status.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "waas.OpenAPIScanIssuesSeverityDistribution": {
        "description": "OpenAPIScanIssuesSeverityDistribution counts the number of issues per severity type",
        "properties": {
          "high": {
            "description": "High is the high severity issues count.\n",
            "type": "integer"
          },
          "info": {
            "description": "Info is the info severity issues count.\n",
            "type": "integer"
          },
          "low": {
            "description": "Low is the low severity issues count.\n",
            "type": "integer"
          },
          "medium": {
            "description": "Medium is the medium severity issues count.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "waas.OpenAPIScanSource": {
        "description": "OpenAPIScanSource is the scan trigger source",
        "enum": [
          [
            "app",
            "cli",
            "manual"
          ]
        ],
        "type": "string"
      },
      "waas.OpenAPISpecInfo": {
        "description": "OpenAPISpecInfo is the OpenAPI spec info",
        "properties": {
          "content": {
            "description": "Content is the OpenAPI spec content.\n",
            "items": {
              "$ref": "#/components/schemas/byte"
            },
            "type": "array"
          },
          "contentType": {
            "description": "ContentType is the OpenAPI spec file content type.\n",
            "type": "string"
          },
          "fileName": {
            "description": "FileName is the OpenAPI spec file name.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "waas.OutOfBoundMode": {
        "description": "OutOfBoundMode holds the app firewall out-of-band mode",
        "enum": [
          [
            "",
            "Observation",
            "Protection"
          ]
        ],
        "type": "string"
      },
      "waas.Param": {
        "description": "Param contains a parameter information",
        "properties": {
          "allowEmptyValue": {
            "description": "Indicates if an empty value is allowed (true) or not (false).\n",
            "type": "boolean"
          },
          "array": {
            "description": "Indicates if multiple values of the specified type are allowed (true) or not (false).\n",
            "type": "boolean"
          },
          "explode": {
            "description": "Indicates if arrays should generate separate parameters for each array item or object property.\n",
            "type": "boolean"
          },
          "location": {
            "$ref": "#/components/schemas/waas.ParamLocation"
          },
          "max": {
            "description": "Maximum allowable value for a numeric parameter.\n",
            "format": "double",
            "type": "number"
          },
          "min": {
            "description": "Minimum allowable value for a numeric parameter.\n",
            "format": "double",
            "type": "number"
          },
          "name": {
            "description": "Name of the parameter.\n",
            "type": "string"
          },
          "required": {
            "description": "Indicates if the parameter is required (true) or not (false).\n",
            "type": "boolean"
          },
          "style": {
            "$ref": "#/components/schemas/waas.ParamStyle"
          },
          "type": {
            "$ref": "#/components/schemas/waas.ParamType"
          }
        },
        "type": "object"
      },
      "waas.ParamLocation": {
        "description": "ParamLocation is the location of a parameter",
        "enum": [
          [
            "path",
            "query",
            "cookie",
            "header",
            "body",
            "json",
            "xml",
            "formData",
            "multipart"
          ]
        ],
        "type": "string"
      },
      "waas.ParamStyle": {
        "description": "ParamStyle is a param format style, defined by OpenAPI specification\nIt describes how the parameter value will be serialized depending on the type of the parameter value.\nRef: https://swagger.io/docs/specification/serialization/\nhttps://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.0.md#style-examples",
        "enum": [
          [
            "simple",
            "spaceDelimited",
            "tabDelimited",
            "pipeDelimited",
            "form",
            "matrix",
            "label"
          ]
        ],
        "type": "string"
      },
      "waas.ParamType": {
        "description": "ParamType is the type of a parameter, defined by OpenAPI specification\nRef: https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types",
        "enum": [
          [
            "integer",
            "number",
            "string",
            "boolean",
            "array",
            "object"
          ]
        ],
        "type": "string"
      },
      "waas.Path": {
        "description": "Path is an API path information",
        "properties": {
          "methods": {
            "description": "Supported operations for the path (e.g., PUT, GET, etc.).\n",
            "items": {
              "$ref": "#/components/schemas/waas.Method"
            },
            "type": "array"
          },
          "path": {
            "description": "Relative path to an endpoint such as \\\"/pet/{petId}\\\".\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "waas.Policy": {
        "description": "Policy represents the policy",
        "properties": {
          "_id": {
            "description": "Unique internal ID.\n",
            "type": "string"
          },
          "maxPort": {
            "description": "Maximum port number to use in the application firewall.\n",
            "type": "integer"
          },
          "minPort": {
            "description": "Minimum port number to use in the application firewall.\n",
            "type": "integer"
          },
          "rules": {
            "description": "Rules in the policy.\n",
            "items": {
              "$ref": "#/components/schemas/waas.Rule"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "waas.PolicyStats": {
        "description": "PolicyStats contains the WAAS policy statistics",
        "properties": {
          "appStats": {
            "$ref": "#/components/schemas/waas.AppStats"
          },
          "apps": {
            "description": "Apps is the total amount of apps in the WAAS policies.\n",
            "type": "integer"
          },
          "rules": {
            "description": "Rules is the total amount of rules in the WAAS policies.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "waas.Protection": {
        "description": "Protection is the type of protection",
        "enum": [
          [
            "firewall",
            "dos",
            "bot",
            "custom",
            "accessControl"
          ]
        ],
        "type": "string"
      },
      "waas.ProtectionConfig": {
        "description": "ProtectionConfig represents a WAAS protection config",
        "properties": {
          "effect": {
            "$ref": "#/components/schemas/waas.Effect"
          },
          "exceptionFields": {
            "description": "Exceptions.\n",
            "items": {
              "$ref": "#/components/schemas/waas.ExceptionField"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "waas.ProtectionStatus": {
        "description": "ProtectionStatus describes the status of the WAAS protection",
        "properties": {
          "enabled": {
            "description": "Enabled indicates if WAAS proxy protection is enabled (true) or not (false).\n",
            "type": "boolean"
          },
          "outOfBandMode": {
            "$ref": "#/components/schemas/waas.OutOfBoundMode"
          },
          "ports": {
            "description": "Ports indicates http open ports associated with the container.\n",
            "items": {
              "$ref": "#/components/schemas/int"
            },
            "type": "array"
          },
          "supported": {
            "description": "Supported indicates if WAAS protection is supported (true) or not (false).\n",
            "type": "boolean"
          },
          "tlsPorts": {
            "description": "TLSPorts indicates https open ports associated with the container.\n",
            "items": {
              "$ref": "#/components/schemas/int"
            },
            "type": "array"
          },
          "unprotectedProcesses": {
            "description": "UnprotectedProcesses holds the processes that support HTTP/HTTPS without WAAS protection.\n",
            "items": {
              "$ref": "#/components/schemas/waas.UnprotectedProcess"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "waas.ReCAPTCHASpec": {
        "description": "ReCAPTCHASpec is the reCAPTCHA spec",
        "properties": {
          "allSessions": {
            "description": "Indicates if the reCAPTCHA page is served at the start of every new session (true) or not (false).\n",
            "type": "boolean"
          },
          "enabled": {
            "description": "Indicates if reCAPTCHA integration is enabled (true) or not (false).\n",
            "type": "boolean"
          },
          "secretKey": {
            "$ref": "#/components/schemas/common.Secret"
          },
          "siteKey": {
            "description": "ReCAPTCHA site key to use when invoking the reCAPTCHA service.\n",
            "type": "string"
          },
          "successExpirationHours": {
            "description": "Duration for which the indication of reCAPTCHA success is kept. Maximum value is 30 days * 24 = 720 hours.\n",
            "type": "integer"
          },
          "type": {
            "$ref": "#/components/schemas/waas.ReCAPTCHAType"
          }
        },
        "type": "object"
      },
      "waas.ReCAPTCHAType": {
        "description": "ReCAPTCHAType is the reCAPTCHA configured type",
        "enum": [
          [
            "checkbox",
            "invisible"
          ]
        ],
        "type": "string"
      },
      "waas.RemoteHostForwardingConfig": {
        "description": "RemoteHostForwardingConfig defines a remote host to forward requests to",
        "properties": {
          "enabled": {
            "description": "Indicates if remote host forwarding is enabled (true) or not (false).\n",
            "type": "boolean"
          },
          "target": {
            "description": "Remote host to forward requests to.\n",
            "type": "string"
          }
        },
        "type": "object"
      },
      "waas.ReqErrorCtx": {
        "description": "ReqErrorCtx is the request error context",
        "properties": {
          "defender": {
            "description": "Defender is the defender name from which the error originated.\n",
            "type": "string"
          },
          "err": {
            "description": "Err is the API error.\n",
            "type": "string"
          },
          "requestInspectionDuration": {
            "description": "RequestInspectionDuration is the request inspection handling time by the WAAS plugins (time spent in WAAS before forwarding the request and handling the response).\n",
            "format": "int64",
            "type": "integer"
          },
          "requestStart": {
            "description": "RequestStart is the request start time.\n",
            "format": "date-time",
            "type": "string"
          },
          "route": {
            "description": "Route is the API route.\n",
            "type": "string"
          },
          "serveDuration": {
            "description": "ServeDuration is the total request handling time including forwarding and response until the error.\n",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "waas.RequestAnomalies": {
        "description": "RequestAnomalies is the request anomalies spec",
        "properties": {
          "effect": {
            "$ref": "#/components/schemas/waas.Effect"
          },
          "threshold": {
            "$ref": "#/components/schemas/waas.RequestAnomalyThreshold"
          }
        },
        "type": "object"
      },
      "waas.RequestAnomalyThreshold": {
        "description": "RequestAnomalyThreshold is the score threshold for which request anomaly violation is triggered",
        "enum": [
          [
            "3",
            "6",
            "9"
          ]
        ],
        "type": "integer"
      },
      "waas.ResponseCodeStats": {
        "description": "ResponseCodeStats holds counts of different response types\nCategories taken from: https://developer.mozilla.org/en-US/docs/Web/HTTP/Status",
        "properties": {
          "clientErrors": {
            "description": "ClientErrors are the codes in the 400-499 range.\n",
            "type": "integer"
          },
          "informational": {
            "description": "Informational are the codes in the 100-199 range.\n",
            "type": "integer"
          },
          "redirects": {
            "description": "Redirects are the codes in the 300-399 range.\n",
            "type": "integer"
          },
          "serverErrors": {
            "description": "ServerErrors are the codes in the 500-599 range.\n",
            "type": "integer"
          },
          "successful": {
            "description": "Successful are the codes in the 200-299 range.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "waas.ResponseHeaderSpec": {
        "description": "ResponseHeaderSpec is specification for a single response header to modify",
        "properties": {
          "name": {
            "description": "Header name (will be canonicalized when possible).\n",
            "type": "string"
          },
          "override": {
            "description": "Indicates whether to override existing values (true) or add to them (false).\n",
            "type": "boolean"
          },
          "values": {
            "description": "New header values.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "waas.Rule": {
        "description": "Rule represents a single rule that is associated with a container firewall",
        "properties": {
          "allowMalformedHttpHeaderNames": {
            "description": "AllowMalformedHttpHeaderNames indicates if validation of http request header names should allow non-compliant characters.\n",
            "type": "boolean"
          },
          "applicationsSpec": {
            "description": "List of API specifications in the rule.\n",
            "items": {
              "$ref": "#/components/schemas/waas.ApplicationSpec"
            },
            "type": "array"
          },
          "autoProtectPorts": {
            "description": "AutoProtectPorts indicates if http ports should be automatically detected and protected.\n",
            "type": "boolean"
          },
          "collections": {
            "description": "List of collections. Used to scope the rule.\n",
            "items": {
              "$ref": "#/components/schemas/collection.Collection"
            },
            "type": "array"
          },
          "disabled": {
            "description": "Indicates if the rule is currently disabled (true) or not (false).\n",
            "type": "boolean"
          },
          "modified": {
            "description": "Datetime when the rule was last modified.\n",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "Name of the rule.\n",
            "type": "string"
          },
          "notes": {
            "description": "Free-form text.\n",
            "type": "string"
          },
          "owner": {
            "description": "User who created or last modified the rule.\n",
            "type": "string"
          },
          "previousName": {
            "description": "Previous name of the rule. Required for rule renaming.\n",
            "type": "string"
          },
          "readTimeoutSeconds": {
            "description": "ReadTimeout is the timeout of request reads in seconds, when no value is specified (0) the timeout is 5 seconds.\n",
            "type": "integer"
          },
          "skipAPILearning": {
            "description": "SkipAPILearning indicates if API discovery is to be skipped (true) or not (false).\n",
            "type": "boolean"
          },
          "trafficMirroring": {
            "$ref": "#/components/schemas/waas.TrafficMirroringConfig"
          },
          "windows": {
            "description": "Indicates whether the operating system of the app is windows, default is Linux.\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "waas.SameSite": {
        "description": "SameSite allows a server to define a cookie attribute making it impossible for\nthe browser to send this cookie along with cross-site requests. The main\ngoal is to mitigate the risk of cross-origin information leakage, and provide\nsome protection against cross-site request forgery attacks.\n\nSee https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite for details",
        "enum": [
          [
            "Lax",
            "Strict",
            "None"
          ]
        ],
        "type": "string"
      },
      "waas.StatusCodeRange": {
        "description": "StatusCodeRange represents a status code range",
        "properties": {
          "end": {
            "description": "End of the range. Can be omitted if using a single status code.\n",
            "type": "integer"
          },
          "start": {
            "description": "Start of the range. Can also be used for a single, non-range value.\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "waas.TLSConfig": {
        "description": "TLSConfig holds the user TLS configuration and the certificate data",
        "properties": {
          "HSTSConfig": {
            "$ref": "#/components/schemas/waas.HSTSConfig"
          },
          "metadata": {
            "$ref": "#/components/schemas/waas.CertificateMeta"
          },
          "minTLSVersion": {
            "$ref": "#/components/schemas/waas.MinTLSVersion"
          }
        },
        "type": "object"
      },
      "waas.TrafficMirroringConfig": {
        "description": "TrafficMirroringConfig is the traffic mirroring configuration",
        "properties": {
          "enabled": {
            "description": "Enabled indicates if traffic mirroring is enabled.\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "waas.TrafficStats": {
        "description": "TrafficStats are traffic stats",
        "properties": {
          "attacks": {
            "description": ".\n",
            "type": "integer"
          },
          "requests": {
            "description": ".\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "waas.UnknownBotProtectionSpec": {
        "description": "UnknownBotProtectionSpec is the unknown bot protection spec",
        "properties": {
          "apiLibraries": {
            "$ref": "#/components/schemas/waas.Effect"
          },
          "botImpersonation": {
            "$ref": "#/components/schemas/waas.Effect"
          },
          "browserImpersonation": {
            "$ref": "#/components/schemas/waas.Effect"
          },
          "generic": {
            "$ref": "#/components/schemas/waas.Effect"
          },
          "httpLibraries": {
            "$ref": "#/components/schemas/waas.Effect"
          },
          "requestAnomalies": {
            "$ref": "#/components/schemas/waas.RequestAnomalies"
          },
          "webAutomationTools": {
            "$ref": "#/components/schemas/waas.Effect"
          },
          "webScrapers": {
            "$ref": "#/components/schemas/waas.Effect"
          }
        },
        "type": "object"
      },
      "waas.UnprotectedAppsVulnStats": {
        "description": "UnprotectedAppsVulnStats contains vulnerability statistics of unprotected web apps",
        "properties": {
          "critical": {
            "description": ".\n",
            "type": "integer"
          },
          "high": {
            "description": ".\n",
            "type": "integer"
          },
          "low": {
            "description": ".\n",
            "type": "integer"
          },
          "medium": {
            "description": ".\n",
            "type": "integer"
          },
          "none": {
            "description": ".\n",
            "type": "integer"
          }
        },
        "type": "object"
      },
      "waas.UnprotectedContainersWebApps": {
        "description": "UnprotectedContainersWebApps contains the result of scanning unprotected containers summary",
        "properties": {
          "_id": {
            "description": "Image is the image name.\n",
            "type": "string"
          },
          "count": {
            "description": "Count is the sum of containers using this image.\n",
            "type": "integer"
          },
          "ports": {
            "description": "Ports is the open http ports on containers using this image.\n",
            "items": {
              "$ref": "#/components/schemas/int"
            },
            "type": "array"
          },
          "tlsPorts": {
            "description": "TLSPorts is the open https ports on containers using this image.\n",
            "items": {
              "$ref": "#/components/schemas/int"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "waas.UnprotectedHostsWebApps": {
        "description": "UnprotectedHostsWebApps contains the result of scanning unprotected hosts summary",
        "properties": {
          "hostname": {
            "description": "Hostname is the host name.\n",
            "type": "string"
          },
          "unprotectedProcesses": {
            "description": "UnprotectedProcesses is processes that uses HTTP/HTTPs but are unprotected by WAAS.\n",
            "items": {
              "$ref": "#/components/schemas/waas.UnprotectedProcess"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "waas.UnprotectedProcess": {
        "description": "UnprotectedProcess holds unprotected processes alongside the port",
        "properties": {
          "port": {
            "description": "Port is the process port.\n",
            "type": "integer"
          },
          "process": {
            "description": "Process is the process name.\n",
            "type": "string"
          },
          "tls": {
            "description": "TLS is the port TLS indication.\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "waas.UserDefinedBot": {
        "description": "UserDefinedBot indicates a user-defined bot and its effect",
        "properties": {
          "effect": {
            "$ref": "#/components/schemas/waas.Effect"
          },
          "headerName": {
            "description": "Header name which defines the bot.\n",
            "type": "string"
          },
          "headerValues": {
            "description": "Header values corresponding to the header name. Can contain wildcards.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          },
          "name": {
            "description": "Name of the bot.\n",
            "type": "string"
          },
          "subnets": {
            "description": "Subnets where the bot originates. Specify using network lists.\n",
            "items": {
              "$ref": "#/components/schemas/string"
            },
            "type": "array"
          }
        },
        "type": "object"
      },
      "waas.WebAppsDiscoverySettings": {
        "description": "WebAppsDiscoverySettings is the web apps discovery settings",
        "properties": {
          "disabled": {
            "description": "Disabled indicates whether web apps discovery is disabled.\n",
            "type": "boolean"
          }
        },
        "type": "object"
      },
      "wildfire.Usage": {
        "description": "Usage holds wildfire usage stats, period for the usage varies with context",
        "properties": {
          "bytes": {
            "description": "Bytes is the total number of bytes uploaded to the WildFire API.\n",
            "format": "int64",
            "type": "integer"
          },
          "queries": {
            "description": "Queries is the number of queries to the WildFire API.\n",
            "format": "int64",
            "type": "integer"
          },
          "uploads": {
            "description": "Uploads is the number of uploads to the WildFire API.\n",
            "format": "int64",
            "type": "integer"
          }
        },
        "type": "object"
      }
    }
  },
  "info": {
    "title": "Prisma Cloud Compute API",
    "version": "22.06.179"
  },
  "openapi": "3.0.3",
  "paths": {
    "/api/v1/registry/webhook/webhook": {
      "delete": {
        "description": "RegistryWebhook listen to registry updates\n",
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Registry",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "none",
          "saas": true,
          "self-hosted": true
        }
      },
      "post": {
        "description": "RegistryWebhook listen to registry updates\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/types.RegistryWebhookRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Registry",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "none",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v1/settings/license": {
      "post": {
        "description": "SetLicense sets the Twistlock license\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api.LicenseRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Settings",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "privilegedOperations",
          "saas": false,
          "self-hosted": true
        }
      }
    },
    "/api/v1/signup": {
      "post": {
        "description": "Signup signs a new admin user\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api.AuthenticationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Signup",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "none",
          "saas": false,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/_ping": {
      "get": {
        "description": "Ping responds to ping requests to the console\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_uint8"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "_ping",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "none",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/audits/incidents": {
      "get": {
        "description": "Incidents returns all incidents according to the query specification\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results from a start datetime.\n",
            "in": "query",
            "name": "from",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Filters results from an end datetime.\n",
            "in": "query",
            "name": "to",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Filters results by hostname where the incident occurred.\n",
            "in": "query",
            "name": "hostname",
            "schema": {
              "description": "Filters results by hostname where the incident occurred.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by incident category.\n",
            "in": "query",
            "name": "category",
            "schema": {
              "description": "Filters results by incident category.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by incident type.\n",
            "in": "query",
            "name": "type",
            "schema": {
              "description": "Filters results by incident type.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by runtime profile ID.\n",
            "in": "query",
            "name": "profileID",
            "schema": {
              "description": "Filters results by runtime profile ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by incidents that have been acknowledged.\n",
            "in": "query",
            "name": "acknowledged",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filters results by region (for functions).\n",
            "in": "query",
            "name": "region",
            "schema": {
              "description": "Filters results by region (for functions).\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by cluster name.\n",
            "in": "query",
            "name": "cluster",
            "schema": {
              "description": "Filters results by cluster name.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by ID.\n",
            "in": "query",
            "name": "id",
            "schema": {
              "description": "Filters results by ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by app IDs.\n",
            "in": "query",
            "name": "appID",
            "schema": {
              "description": "Filters results by app IDs.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by container IDs.\n",
            "in": "query",
            "name": "containerID",
            "schema": {
              "description": "Filters results by container IDs.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by custom rule names.\n",
            "in": "query",
            "name": "customRuleName",
            "schema": {
              "description": "Filters results by custom rule names.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_shared.Incident"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Audits",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorRuntimeIncidents",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/audits/incidents/download": {
      "get": {
        "description": "DownloadIncidents downloads incidents according to the specified query\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results from a start datetime.\n",
            "in": "query",
            "name": "from",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Filters results from an end datetime.\n",
            "in": "query",
            "name": "to",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Filters results by hostname where the incident occurred.\n",
            "in": "query",
            "name": "hostname",
            "schema": {
              "description": "Filters results by hostname where the incident occurred.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by incident category.\n",
            "in": "query",
            "name": "category",
            "schema": {
              "description": "Filters results by incident category.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by incident type.\n",
            "in": "query",
            "name": "type",
            "schema": {
              "description": "Filters results by incident type.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by runtime profile ID.\n",
            "in": "query",
            "name": "profileID",
            "schema": {
              "description": "Filters results by runtime profile ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by incidents that have been acknowledged.\n",
            "in": "query",
            "name": "acknowledged",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filters results by region (for functions).\n",
            "in": "query",
            "name": "region",
            "schema": {
              "description": "Filters results by region (for functions).\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by cluster name.\n",
            "in": "query",
            "name": "cluster",
            "schema": {
              "description": "Filters results by cluster name.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by ID.\n",
            "in": "query",
            "name": "id",
            "schema": {
              "description": "Filters results by ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by app IDs.\n",
            "in": "query",
            "name": "appID",
            "schema": {
              "description": "Filters results by app IDs.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by container IDs.\n",
            "in": "query",
            "name": "containerID",
            "schema": {
              "description": "Filters results by container IDs.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by custom rule names.\n",
            "in": "query",
            "name": "customRuleName",
            "schema": {
              "description": "Filters results by custom rule names.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Audits",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorRuntimeIncidents",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/authenticate": {
      "post": {
        "description": "Authenticate is the authentication endpoint\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api.AuthenticationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.AuthenticationResponse"
                }
              }
            },
            "description": "AuthenticationResponse returns the result of calling the authentication endpoint"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Authenticate",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "none",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/authenticate-client": {
      "post": {
        "description": "AuthenticateClient checks the client certificate supplied\nand authorizes the user according to the username passed via the certificate CN or UPN fields\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/types.ConsoleAuthResponse"
                }
              }
            },
            "description": "ConsoleAuthResponse represents the console certificates authentication response"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Authenticate-Client",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "none",
          "saas": false,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/authenticate/identity-redirect-url": {
      "get": {
        "description": "IdentityRedirectURL returns the redirect URL for the given authentication provider\n",
        "parameters": [
          {
            "description": "Type is the auth provider type.\n",
            "in": "query",
            "name": "type",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Redirect will redirect to the specified identity provider authentication flow.\n",
            "in": "query",
            "name": "redirect",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/identity.RedirectURLResponse"
                }
              }
            },
            "description": "RedirectURLResponse is the response for identity redirect endpoint"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Authenticate",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "none",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/cloud/discovery": {
      "get": {
        "description": "CloudDiscoveryResults returns the cloud scan result\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Provider is the provider filter.\n",
            "in": "query",
            "name": "provider",
            "schema": {
              "description": "Provider is the provider filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "CredentialID is the account filter.\n",
            "in": "query",
            "name": "credentialID",
            "schema": {
              "description": "CredentialID is the account filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_shared.CloudDiscoveryResult"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Cloud",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorCloud",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/cloud/discovery/download": {
      "get": {
        "description": "DownloadCloudDiscovery downloads the cloud scan data to CSVs\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Provider is the provider filter.\n",
            "in": "query",
            "name": "provider",
            "schema": {
              "description": "Provider is the provider filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "CredentialID is the account filter.\n",
            "in": "query",
            "name": "credentialID",
            "schema": {
              "description": "CredentialID is the account filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Cloud",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorCloud",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/cloud/discovery/scan": {
      "post": {
        "description": "DoCloudDiscoveryScan starts a new cloud scan\n",
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Cloud",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorCloud",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/cloud/discovery/stop": {
      "post": {
        "description": "StopCloudDiscoveryScan stops a cloud scan in progress\n",
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Cloud",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorCloud",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/cloud/discovery/vms": {
      "get": {
        "description": "DiscoveredVMs returns discovered cloud VM instances\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Provider is the provider filter.\n",
            "in": "query",
            "name": "provider",
            "schema": {
              "description": "Provider is the provider filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Region is the region filter.\n",
            "in": "query",
            "name": "region",
            "schema": {
              "description": "Region is the region filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "HasDefender indicates only VMs with or without a defender should return.\n",
            "in": "query",
            "name": "hasDefender",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_types.DiscoveredVM"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Cloud",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorCloud",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/clustered-db": {
      "get": {
        "description": "ClusteredDBStatus returns the clustered DB status\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/clustereddb.StatusResponse"
                }
              }
            },
            "description": "StatusResponse represents the response to a clustered DB status request"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Clustered-Db",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "privilegedOperations",
          "saas": true,
          "self-hosted": true
        }
      },
      "post": {
        "description": "AddClusteredDBMember adds a member to the clustered DB pool\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/clustereddb.AddMemberRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Clustered-Db",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "privilegedOperations",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/clustered-db/settings": {
      "post": {
        "description": "SetClusteredDBSettings sets the clustered DB settings\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/clustereddb.Settings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Clustered-Db",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "privilegedOperations",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/clustered-db/{id}": {
      "delete": {
        "description": "RemoveClusteredDBMember removes a member from the clustered DB pool\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Clustered-Db",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "privilegedOperations",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/coderepos-ci": {
      "post": {
        "description": "AddCICodeRepo adds a CI code repo scan result\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/coderepos.ScanResult"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Coderepos-Ci",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorCI",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/coderepos-ci/evaluate": {
      "post": {
        "description": "ResolveCodeRepos adds vulnerability data for the given code repo scan result\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/coderepos.ScanResult"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/coderepos.ScanResult"
                }
              }
            },
            "description": "ScanResult holds a specific repository data"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Coderepos-Ci",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorCI",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/collections": {
      "get": {
        "description": "Collections returns a list of references to the used collections\n",
        "parameters": [
          {
            "description": "ExcludePrisma indicates to exclude Prisma collections.\n",
            "in": "query",
            "name": "excludePrisma",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_collection.Collection"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Collections",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "collections",
          "saas": true,
          "self-hosted": true
        }
      },
      "post": {
        "description": "AddCollection adds the given collection\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/collection.Collection"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Collections",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "collections",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/collections/{id}": {
      "delete": {
        "description": "DeleteCollection deletes a collection\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Collections",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "collections",
          "saas": true,
          "self-hosted": true
        }
      },
      "put": {
        "description": "UpdateCollection updates a collection\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/collection.Collection"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Collections",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "collections",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/collections/{id}/usages": {
      "get": {
        "description": "CollectionUsages returns all usages of the queried collection\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_collection.Usage"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Collections",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "collections",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/containers": {
      "get": {
        "description": "Containers returns the container scan results\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Hosts is used to filter containers by host.\n",
            "in": "query",
            "name": "hostname",
            "schema": {
              "description": "Hosts is used to filter containers by host.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Images is used to filter containers by image name.\n",
            "in": "query",
            "name": "image",
            "schema": {
              "description": "Images is used to filter containers by image name.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "ImageIDs is used to filter containers by image ids.\n",
            "in": "query",
            "name": "imageId",
            "schema": {
              "description": "ImageIDs is used to filter containers by image ids.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "IDs is used to filter container by container ID.\n",
            "in": "query",
            "name": "id",
            "schema": {
              "description": "IDs is used to filter container by container ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "ProfileIDs is used to filter container by runtime profile ID.\n",
            "in": "query",
            "name": "profileId",
            "schema": {
              "description": "ProfileIDs is used to filter container by runtime profile ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Namespaces are the namespaces to filter.\n",
            "in": "query",
            "name": "namespaces",
            "schema": {
              "description": "Namespaces are the namespaces to filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "FirewallSupported is used to fetch containers with app firewall supported.\n",
            "in": "query",
            "name": "firewallSupported",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Clusters is used to filter containers by cluster name.\n",
            "in": "query",
            "name": "clusters",
            "schema": {
              "description": "Clusters is used to filter containers by cluster name.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "ComplianceIDs is used to filter containers by compliance IDs.\n",
            "in": "query",
            "name": "complianceIDs",
            "schema": {
              "description": "ComplianceIDs is used to filter containers by compliance IDs.\n",
              "items": {
                "$ref": "#/components/schemas/int"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_shared.ContainerScanResult"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Containers",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorImages",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/containers/count": {
      "get": {
        "description": "ContainerCount returns the total number of containers\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Hosts is used to filter containers by host.\n",
            "in": "query",
            "name": "hostname",
            "schema": {
              "description": "Hosts is used to filter containers by host.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Images is used to filter containers by image name.\n",
            "in": "query",
            "name": "image",
            "schema": {
              "description": "Images is used to filter containers by image name.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "ImageIDs is used to filter containers by image ids.\n",
            "in": "query",
            "name": "imageId",
            "schema": {
              "description": "ImageIDs is used to filter containers by image ids.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "IDs is used to filter container by container ID.\n",
            "in": "query",
            "name": "id",
            "schema": {
              "description": "IDs is used to filter container by container ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "ProfileIDs is used to filter container by runtime profile ID.\n",
            "in": "query",
            "name": "profileId",
            "schema": {
              "description": "ProfileIDs is used to filter container by runtime profile ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Namespaces are the namespaces to filter.\n",
            "in": "query",
            "name": "namespaces",
            "schema": {
              "description": "Namespaces are the namespaces to filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "FirewallSupported is used to fetch containers with app firewall supported.\n",
            "in": "query",
            "name": "firewallSupported",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Clusters is used to filter containers by cluster name.\n",
            "in": "query",
            "name": "clusters",
            "schema": {
              "description": "Clusters is used to filter containers by cluster name.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "ComplianceIDs is used to filter containers by compliance IDs.\n",
            "in": "query",
            "name": "complianceIDs",
            "schema": {
              "description": "ComplianceIDs is used to filter containers by compliance IDs.\n",
              "items": {
                "$ref": "#/components/schemas/int"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/int"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Containers",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorImages",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/containers/download": {
      "get": {
        "description": "DownloadContainers downloads the container scan results\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Hosts is used to filter containers by host.\n",
            "in": "query",
            "name": "hostname",
            "schema": {
              "description": "Hosts is used to filter containers by host.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Images is used to filter containers by image name.\n",
            "in": "query",
            "name": "image",
            "schema": {
              "description": "Images is used to filter containers by image name.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "ImageIDs is used to filter containers by image ids.\n",
            "in": "query",
            "name": "imageId",
            "schema": {
              "description": "ImageIDs is used to filter containers by image ids.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "IDs is used to filter container by container ID.\n",
            "in": "query",
            "name": "id",
            "schema": {
              "description": "IDs is used to filter container by container ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "ProfileIDs is used to filter container by runtime profile ID.\n",
            "in": "query",
            "name": "profileId",
            "schema": {
              "description": "ProfileIDs is used to filter container by runtime profile ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Namespaces are the namespaces to filter.\n",
            "in": "query",
            "name": "namespaces",
            "schema": {
              "description": "Namespaces are the namespaces to filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "FirewallSupported is used to fetch containers with app firewall supported.\n",
            "in": "query",
            "name": "firewallSupported",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Clusters is used to filter containers by cluster name.\n",
            "in": "query",
            "name": "clusters",
            "schema": {
              "description": "Clusters is used to filter containers by cluster name.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "ComplianceIDs is used to filter containers by compliance IDs.\n",
            "in": "query",
            "name": "complianceIDs",
            "schema": {
              "description": "ComplianceIDs is used to filter containers by compliance IDs.\n",
              "items": {
                "$ref": "#/components/schemas/int"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Containers",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorImages",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/containers/names": {
      "get": {
        "description": "ContainerNames returns container names according to the query specification\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Hosts is used to filter containers by host.\n",
            "in": "query",
            "name": "hostname",
            "schema": {
              "description": "Hosts is used to filter containers by host.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Images is used to filter containers by image name.\n",
            "in": "query",
            "name": "image",
            "schema": {
              "description": "Images is used to filter containers by image name.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "ImageIDs is used to filter containers by image ids.\n",
            "in": "query",
            "name": "imageId",
            "schema": {
              "description": "ImageIDs is used to filter containers by image ids.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "IDs is used to filter container by container ID.\n",
            "in": "query",
            "name": "id",
            "schema": {
              "description": "IDs is used to filter container by container ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "ProfileIDs is used to filter container by runtime profile ID.\n",
            "in": "query",
            "name": "profileId",
            "schema": {
              "description": "ProfileIDs is used to filter container by runtime profile ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Namespaces are the namespaces to filter.\n",
            "in": "query",
            "name": "namespaces",
            "schema": {
              "description": "Namespaces are the namespaces to filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "FirewallSupported is used to fetch containers with app firewall supported.\n",
            "in": "query",
            "name": "firewallSupported",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Clusters is used to filter containers by cluster name.\n",
            "in": "query",
            "name": "clusters",
            "schema": {
              "description": "Clusters is used to filter containers by cluster name.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "ComplianceIDs is used to filter containers by compliance IDs.\n",
            "in": "query",
            "name": "complianceIDs",
            "schema": {
              "description": "ComplianceIDs is used to filter containers by compliance IDs.\n",
              "items": {
                "$ref": "#/components/schemas/int"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_string"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Containers",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorImages",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/containers/scan": {
      "post": {
        "description": "ScanContainers triggers a scan to all containers\n",
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Containers",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorImages",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/credentials": {
      "get": {
        "description": "Credentials returns all credentials according to the options\n",
        "parameters": [
          {
            "description": "Cloud indicates whether to fetch cloud credentials (AWS/GCP/Azure) or other types of credentials.\n",
            "in": "query",
            "name": "cloud",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_cred.Credential"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Credentials",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "manageCreds",
          "saas": true,
          "self-hosted": true
        }
      },
      "post": {
        "description": "UpdateCredential adds or updates a credential\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cred.Credential"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Credentials",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "manageCreds",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/credentials/{id}": {
      "delete": {
        "description": "DeleteCredential deletes the specified credential\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Credentials",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "manageCreds",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/credentials/{id}/usages": {
      "get": {
        "description": "CredentialUsages returns the given credential usages across the product\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_types.CredentialUsage"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Credentials",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "manageCreds",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/current/collections": {
      "get": {
        "description": "UserCollections returns collections in the current project that the user has permission to access\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_types.UserCollection"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Current",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "accessUI",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/current/projects": {
      "get": {
        "description": "UserProjects gets current user projects\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_types.UserProject"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Current",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "accessUI",
          "saas": false,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/custom-compliance": {
      "get": {
        "description": "SetCustomComplianceCheck returns the applicable custom compliance checks\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_shared.CustomComplianceCheck"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Custom-Compliance",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyComplianceCustomRules",
          "saas": true,
          "self-hosted": true
        }
      },
      "put": {
        "description": "UpsertCustomComplianceCheck sets the custom compliance checks in the db and returns the generated check ID\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/shared.CustomComplianceCheck"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shared.CustomComplianceCheck"
                }
              }
            },
            "description": "CustomComplianceCheck represents a custom compliance check entry"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Custom-Compliance",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyComplianceCustomRules",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/custom-compliance/{id}": {
      "delete": {
        "description": "DeleteCustomComplianceCheck removes the given check from the custom compliance checks list\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Custom-Compliance",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyComplianceCustomRules",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/custom-rules": {
      "get": {
        "description": "CustomRules returns the custom rules\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_customrules.Rule"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Custom-Rules",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyCustomRules",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/custom-rules/{id}": {
      "delete": {
        "description": "DeleteCustomRule deletes a custom rule\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Custom-Rules",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyCustomRules",
          "saas": true,
          "self-hosted": true
        }
      },
      "put": {
        "description": "UpdateCustomRule creates/edits a custom rule\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/customrules.Rule"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Custom-Rules",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyCustomRules",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/defenders": {
      "get": {
        "description": "Defenders returns the defenders by the query specification\nTODO #32709: defenders might be using custom certificates, making the expiry calculation here incorrect\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Name of a specific Defender to retrieve.\n",
            "in": "query",
            "name": "hostname",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Roles are the defender api.Roles to filter.\n",
            "in": "query",
            "name": "role",
            "schema": {
              "description": "Roles are the defender api.Roles to filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Indicates whether to return only connected Defenders (true) or disconnected Defenders (false).\n",
            "in": "query",
            "name": "connected",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates the Defender types to return (e.g., docker, dockerWindows, cri, etc).\n",
            "in": "query",
            "name": "type",
            "schema": {
              "description": "Indicates the Defender types to return (e.g., docker, dockerWindows, cri, etc).\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Indicates whether to return a list of Defenders that are running the latest version of Prisma Cloud (true)\nor defenders with older versions (false).\n",
            "in": "query",
            "name": "latest",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "SupportedVersion indicates only Defenders of supported versions should be fetched.\n",
            "in": "query",
            "name": "supportedVersion",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by cluster name.\n",
            "in": "query",
            "name": "cluster",
            "schema": {
              "description": "Scopes the query by cluster name.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by TAS cluster IDs.\n",
            "in": "query",
            "name": "tasClusterIDs",
            "schema": {
              "description": "Scopes the query by TAS cluster IDs.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query to defenders which are using old certificate.\n",
            "in": "query",
            "name": "usingOldCA",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query to defenders which are using expired certificate.\n",
            "in": "query",
            "name": "usingExpiredCA",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by provider type.\n",
            "in": "query",
            "name": "provider",
            "schema": {
              "description": "Scopes the query by provider type.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Indicates whether to return only defenders running on ARM64 architecture.\n",
            "in": "query",
            "name": "isARM64",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_defender.Defender"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Defenders",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "manageDefenders",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/defenders/app-embedded": {
      "post": {
        "description": "EmbedAppEmbeddedDefender returns an augmented Dockerfile + embedded defender dependencies as a ZIP file\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/shared.AppEmbeddedEmbedRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Defenders",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "manageDefenders",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/defenders/daemonset.yaml": {
      "post": {
        "description": "GenerateDaemonSet generates the defender daemonset k8s yaml\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/common.DaemonSetOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_uint8"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Defenders",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "manageDefenders",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/defenders/download": {
      "get": {
        "description": "DownloadDefenders downloads all defender data\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Name of a specific Defender to retrieve.\n",
            "in": "query",
            "name": "hostname",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Roles are the defender api.Roles to filter.\n",
            "in": "query",
            "name": "role",
            "schema": {
              "description": "Roles are the defender api.Roles to filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Indicates whether to return only connected Defenders (true) or disconnected Defenders (false).\n",
            "in": "query",
            "name": "connected",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates the Defender types to return (e.g., docker, dockerWindows, cri, etc).\n",
            "in": "query",
            "name": "type",
            "schema": {
              "description": "Indicates the Defender types to return (e.g., docker, dockerWindows, cri, etc).\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Indicates whether to return a list of Defenders that are running the latest version of Prisma Cloud (true)\nor defenders with older versions (false).\n",
            "in": "query",
            "name": "latest",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "SupportedVersion indicates only Defenders of supported versions should be fetched.\n",
            "in": "query",
            "name": "supportedVersion",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by cluster name.\n",
            "in": "query",
            "name": "cluster",
            "schema": {
              "description": "Scopes the query by cluster name.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by TAS cluster IDs.\n",
            "in": "query",
            "name": "tasClusterIDs",
            "schema": {
              "description": "Scopes the query by TAS cluster IDs.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query to defenders which are using old certificate.\n",
            "in": "query",
            "name": "usingOldCA",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query to defenders which are using expired certificate.\n",
            "in": "query",
            "name": "usingExpiredCA",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by provider type.\n",
            "in": "query",
            "name": "provider",
            "schema": {
              "description": "Scopes the query by provider type.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Indicates whether to return only defenders running on ARM64 architecture.\n",
            "in": "query",
            "name": "isARM64",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Defenders",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "manageDefenders",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/defenders/fargate.json": {
      "post": {
        "description": "FargateTask receives fargate task definition, augments all required data and returns new task definition\n",
        "parameters": [
          {
            "description": "ConsoleAddr is the remote console address.\n",
            "in": "query",
            "name": "consoleaddr",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "DefenderType is the type of the defender to create the install bundle for.\n",
            "in": "query",
            "name": "defenderType",
            "schema": {
              "description": "Type is the type to be given at startup",
              "enum": [
                [
                  "none",
                  "docker",
                  "dockerWindows",
                  "containerdWindows",
                  "swarm",
                  "daemonset",
                  "serverLinux",
                  "serverWindows",
                  "cri",
                  "fargate",
                  "appEmbedded",
                  "tas",
                  "serverless",
                  "ecs"
                ]
              ],
              "type": "string"
            }
          },
          {
            "description": "Interpreter is a custom interpreter set by the user to run the fargate defender entrypoint script.\n",
            "in": "query",
            "name": "interpreter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "CloudFormation indicates if the given fargate task definition is in Cloud Formation format.\n",
            "in": "query",
            "name": "cloudFormation",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "FilesystemMonitoring is the filesystem monitoring flag.\n",
            "in": "query",
            "name": "filesystemMonitoring",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "ExtractEntrypoint indicates if entrypoint will be extracted automatically.\n",
            "in": "query",
            "name": "extractEntrypoint",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "RegistryType is the registry type for fetching image details needed to create fargate task definition (e.g., dockerhub).\n",
            "in": "query",
            "name": "registryType",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "RegistryCredentialID of the credentials in the credentials store to use for authenticating with the registry.\n",
            "in": "query",
            "name": "registryCredentialID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/appembedded.FargateTask"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/appembedded.FargateTask"
                }
              }
            },
            "description": "FargateTask represents the generic fargate task AWS template"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Defenders",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "manageDefenders",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/defenders/helm/twistlock-defender-helm.tar.gz": {
      "post": {
        "description": "DefenderHelmChart generates a defender helm chart\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/common.DaemonSetOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Defenders",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "manageDefenders",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/defenders/image-name": {
      "get": {
        "description": "DefenderImage returns the path to the official defender image\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/string"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Defenders",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "manageDefenders",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/defenders/install-bundle": {
      "get": {
        "description": "DefenderInstallBundle returns the install bundle according to the provided configuration\n",
        "parameters": [
          {
            "description": "ConsoleAddr is the remote console address.\n",
            "in": "query",
            "name": "consoleaddr",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "DefenderType is the type of the defender to create the install bundle for.\n",
            "in": "query",
            "name": "defenderType",
            "schema": {
              "description": "Type is the type to be given at startup",
              "enum": [
                [
                  "none",
                  "docker",
                  "dockerWindows",
                  "containerdWindows",
                  "swarm",
                  "daemonset",
                  "serverLinux",
                  "serverWindows",
                  "cri",
                  "fargate",
                  "appEmbedded",
                  "tas",
                  "serverless",
                  "ecs"
                ]
              ],
              "type": "string"
            }
          },
          {
            "description": "Interpreter is a custom interpreter set by the user to run the fargate defender entrypoint script.\n",
            "in": "query",
            "name": "interpreter",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "CloudFormation indicates if the given fargate task definition is in Cloud Formation format.\n",
            "in": "query",
            "name": "cloudFormation",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "FilesystemMonitoring is the filesystem monitoring flag.\n",
            "in": "query",
            "name": "filesystemMonitoring",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "ExtractEntrypoint indicates if entrypoint will be extracted automatically.\n",
            "in": "query",
            "name": "extractEntrypoint",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "RegistryType is the registry type for fetching image details needed to create fargate task definition (e.g., dockerhub).\n",
            "in": "query",
            "name": "registryType",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "RegistryCredentialID of the credentials in the credentials store to use for authenticating with the registry.\n",
            "in": "query",
            "name": "registryCredentialID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shared.DefenderInstallBundle"
                }
              }
            },
            "description": "DefenderInstallBundle represents the install bundle for the defender"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Defenders",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "manageDefenders",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/defenders/names": {
      "get": {
        "description": "DefenderNames returns the defenders names by the query specification\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Name of a specific Defender to retrieve.\n",
            "in": "query",
            "name": "hostname",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Roles are the defender api.Roles to filter.\n",
            "in": "query",
            "name": "role",
            "schema": {
              "description": "Roles are the defender api.Roles to filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Indicates whether to return only connected Defenders (true) or disconnected Defenders (false).\n",
            "in": "query",
            "name": "connected",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates the Defender types to return (e.g., docker, dockerWindows, cri, etc).\n",
            "in": "query",
            "name": "type",
            "schema": {
              "description": "Indicates the Defender types to return (e.g., docker, dockerWindows, cri, etc).\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Indicates whether to return a list of Defenders that are running the latest version of Prisma Cloud (true)\nor defenders with older versions (false).\n",
            "in": "query",
            "name": "latest",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "SupportedVersion indicates only Defenders of supported versions should be fetched.\n",
            "in": "query",
            "name": "supportedVersion",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by cluster name.\n",
            "in": "query",
            "name": "cluster",
            "schema": {
              "description": "Scopes the query by cluster name.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by TAS cluster IDs.\n",
            "in": "query",
            "name": "tasClusterIDs",
            "schema": {
              "description": "Scopes the query by TAS cluster IDs.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query to defenders which are using old certificate.\n",
            "in": "query",
            "name": "usingOldCA",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query to defenders which are using expired certificate.\n",
            "in": "query",
            "name": "usingExpiredCA",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by provider type.\n",
            "in": "query",
            "name": "provider",
            "schema": {
              "description": "Scopes the query by provider type.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Indicates whether to return only defenders running on ARM64 architecture.\n",
            "in": "query",
            "name": "isARM64",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_string"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Defenders",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "manageDefenders",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/defenders/serverless/bundle": {
      "post": {
        "description": "DownloadServerlessBundle returns a ZIP with serverless defender bundle\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/shared.ServerlessBundleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Defenders",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "manageDefenders",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/defenders/summary": {
      "get": {
        "description": "DefendersSummary returns the number of defenders in each defender category\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_types.DefenderSummary"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Defenders",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "manageDefenders",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/defenders/upgrade": {
      "post": {
        "description": "UpgradeDefenders upgrades all linux defenders\nRemark: only connected defenders are updated\n",
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Defenders",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "manageDefenders",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/defenders/{id}": {
      "delete": {
        "description": "DeleteDefender deletes the specified defender\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Defenders",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "manageDefenders",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/defenders/{id}/features": {
      "post": {
        "description": "UpdateDefenderFeatures update the specified defender features\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/defender.Features"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/defender.Defender"
                }
              }
            },
            "description": "Defender is an update about an agent starting"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Defenders",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "manageDefenders",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/defenders/{id}/restart": {
      "post": {
        "description": "RestartDefender restarts a specific defender\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Defenders",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "manageDefenders",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/defenders/{id}/upgrade": {
      "post": {
        "description": "UpgradeDefender upgrades a specific defender\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Defenders",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "manageDefenders",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/feeds/bundle": {
      "put": {
        "description": "UploadOfflineIntelligenceFeeds uploads the offline intelligence feeds bundle\n",
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Feeds",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorVuln",
          "saas": false,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/feeds/custom/malware": {
      "get": {
        "description": "CustomMalwareFeed returns the custom malware feed\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shared.CustomMalwareFeed"
                }
              }
            },
            "description": "CustomMalwareFeed represent the custom malware"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Feeds",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "user",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/groups": {
      "get": {
        "description": "Groups returns all user groups, if request was sent from secondary project - only project's groups are returned\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/types.Groups"
                }
              }
            },
            "description": "Groups represents a list of groups"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Groups",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "auth",
          "saas": true,
          "self-hosted": true
        }
      },
      "post": {
        "description": "UpdateGroup adds or update a group\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/types.Group"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Groups",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "auth",
          "saas": false,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/groups/names": {
      "get": {
        "description": "GroupNames returns all group names\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_string"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Groups",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "auth",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/groups/{id}": {
      "delete": {
        "description": "DeleteGroup deletes the given group name\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Groups",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "auth",
          "saas": false,
          "self-hosted": true
        }
      },
      "put": {
        "description": "UpdateGroup adds or update a group\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/types.Group"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Groups",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "auth",
          "saas": false,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/hosts": {
      "get": {
        "description": "Hosts returns the hosts scan result\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by hostname.\n",
            "in": "query",
            "name": "hostname",
            "schema": {
              "description": "Filters results by hostname.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by OS distro.\n",
            "in": "query",
            "name": "distro",
            "schema": {
              "description": "Filters results by OS distro.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by cloud provider.\n",
            "in": "query",
            "name": "provider",
            "schema": {
              "description": "Filters results by cloud provider.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Indicates if only minimal image data is to be sent (i.e., vulnerabilities, compliance, and extended image metadata should be skipped) (true) or not (false).\n",
            "in": "query",
            "name": "compact",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Filters results by cluster name.\n",
            "in": "query",
            "name": "clusters",
            "schema": {
              "description": "Filters results by cluster name.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by compliance ID.\n",
            "in": "query",
            "name": "complianceIDs",
            "schema": {
              "description": "Filters results by compliance ID.\n",
              "items": {
                "$ref": "#/components/schemas/int"
              },
              "type": "array"
            }
          },
          {
            "description": "Agentless is used to fetch hosts that were scanned by the agentless scanner.\n",
            "in": "query",
            "name": "agentless",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Stopped is used to fetch hosts that were not running during the agentless scan.\n",
            "in": "query",
            "name": "stopped",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_shared.ImageScanResult"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Hosts",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorHosts",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/hosts/download": {
      "get": {
        "description": "DownloadHosts downloads the hosts data\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by hostname.\n",
            "in": "query",
            "name": "hostname",
            "schema": {
              "description": "Filters results by hostname.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by OS distro.\n",
            "in": "query",
            "name": "distro",
            "schema": {
              "description": "Filters results by OS distro.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by cloud provider.\n",
            "in": "query",
            "name": "provider",
            "schema": {
              "description": "Filters results by cloud provider.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Indicates if only minimal image data is to be sent (i.e., vulnerabilities, compliance, and extended image metadata should be skipped) (true) or not (false).\n",
            "in": "query",
            "name": "compact",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Filters results by cluster name.\n",
            "in": "query",
            "name": "clusters",
            "schema": {
              "description": "Filters results by cluster name.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by compliance ID.\n",
            "in": "query",
            "name": "complianceIDs",
            "schema": {
              "description": "Filters results by compliance ID.\n",
              "items": {
                "$ref": "#/components/schemas/int"
              },
              "type": "array"
            }
          },
          {
            "description": "Agentless is used to fetch hosts that were scanned by the agentless scanner.\n",
            "in": "query",
            "name": "agentless",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Stopped is used to fetch hosts that were not running during the agentless scan.\n",
            "in": "query",
            "name": "stopped",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Hosts",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorHosts",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/hosts/evaluate": {
      "post": {
        "description": "ResolveHosts adds vulnerability data for the given host\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api.ResolveImagesReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.ResolveImagesResp"
                }
              }
            },
            "description": "ResolveImagesResp represents the images resolution API output"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Hosts",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorCI",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/hosts/info": {
      "get": {
        "description": "HostsInfo returns information about all deployed hosts\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by hostname.\n",
            "in": "query",
            "name": "hostname",
            "schema": {
              "description": "Filters results by hostname.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by OS distro.\n",
            "in": "query",
            "name": "distro",
            "schema": {
              "description": "Filters results by OS distro.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by cloud provider.\n",
            "in": "query",
            "name": "provider",
            "schema": {
              "description": "Filters results by cloud provider.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Indicates if only minimal image data is to be sent (i.e., vulnerabilities, compliance, and extended image metadata should be skipped) (true) or not (false).\n",
            "in": "query",
            "name": "compact",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Filters results by cluster name.\n",
            "in": "query",
            "name": "clusters",
            "schema": {
              "description": "Filters results by cluster name.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by compliance ID.\n",
            "in": "query",
            "name": "complianceIDs",
            "schema": {
              "description": "Filters results by compliance ID.\n",
              "items": {
                "$ref": "#/components/schemas/int"
              },
              "type": "array"
            }
          },
          {
            "description": "Agentless is used to fetch hosts that were scanned by the agentless scanner.\n",
            "in": "query",
            "name": "agentless",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Stopped is used to fetch hosts that were not running during the agentless scan.\n",
            "in": "query",
            "name": "stopped",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_shared.HostInfo"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Hosts",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorRuntimeHosts",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/hosts/scan": {
      "post": {
        "description": "ScanHosts sends a host scan requests to all defenders\n",
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Hosts",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorHosts",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/images": {
      "get": {
        "description": "Images returns images by the query specification\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters the results by image ID.\n",
            "in": "query",
            "name": "id",
            "schema": {
              "description": "Filters the results by image ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by hostname.\n",
            "in": "query",
            "name": "hostname",
            "schema": {
              "description": "Filters results by hostname.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by image repository.\n",
            "in": "query",
            "name": "repository",
            "schema": {
              "description": "Filters results by image repository.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by image registry.\n",
            "in": "query",
            "name": "registry",
            "schema": {
              "description": "Filters results by image registry.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by image name.\n",
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Filters results by image name.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Indicates if CVEs are mapped to image layer (true) or not (false).\n",
            "in": "query",
            "name": "layers",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates if base image vulnerabilities are to be filtered (true) or not (false). Requires predefined base images that have already been scanned.\n",
            "in": "query",
            "name": "filterBaseImage",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates if only minimal image data is to be returned (i.e., skip vulnerabilities, compliance, and extended image metadata) (true) or not (false).\n",
            "in": "query",
            "name": "compact",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Filters results according to whether an image is considered trusted or untrusted by your trusted images policy.\n",
            "in": "query",
            "name": "trustStatuses",
            "schema": {
              "description": "Filters results according to whether an image is considered trusted or untrusted by your trusted images policy.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by cluster name.\n",
            "in": "query",
            "name": "clusters",
            "schema": {
              "description": "Filters results by cluster name.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by compliance IDs.\n",
            "in": "query",
            "name": "complianceIDs",
            "schema": {
              "description": "Filters results by compliance IDs.\n",
              "items": {
                "$ref": "#/components/schemas/int"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters images that were scanned by App-Embedded Defenders.\n",
            "in": "query",
            "name": "appEmbedded",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_shared.ImageScanResult"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Images",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorImages",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/images/download": {
      "get": {
        "description": "DownloadImages downloads the image data\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters the results by image ID.\n",
            "in": "query",
            "name": "id",
            "schema": {
              "description": "Filters the results by image ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by hostname.\n",
            "in": "query",
            "name": "hostname",
            "schema": {
              "description": "Filters results by hostname.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by image repository.\n",
            "in": "query",
            "name": "repository",
            "schema": {
              "description": "Filters results by image repository.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by image registry.\n",
            "in": "query",
            "name": "registry",
            "schema": {
              "description": "Filters results by image registry.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by image name.\n",
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Filters results by image name.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Indicates if CVEs are mapped to image layer (true) or not (false).\n",
            "in": "query",
            "name": "layers",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates if base image vulnerabilities are to be filtered (true) or not (false). Requires predefined base images that have already been scanned.\n",
            "in": "query",
            "name": "filterBaseImage",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates if only minimal image data is to be returned (i.e., skip vulnerabilities, compliance, and extended image metadata) (true) or not (false).\n",
            "in": "query",
            "name": "compact",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Filters results according to whether an image is considered trusted or untrusted by your trusted images policy.\n",
            "in": "query",
            "name": "trustStatuses",
            "schema": {
              "description": "Filters results according to whether an image is considered trusted or untrusted by your trusted images policy.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by cluster name.\n",
            "in": "query",
            "name": "clusters",
            "schema": {
              "description": "Filters results by cluster name.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by compliance IDs.\n",
            "in": "query",
            "name": "complianceIDs",
            "schema": {
              "description": "Filters results by compliance IDs.\n",
              "items": {
                "$ref": "#/components/schemas/int"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters images that were scanned by App-Embedded Defenders.\n",
            "in": "query",
            "name": "appEmbedded",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Images",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorImages",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/images/evaluate": {
      "post": {
        "description": "ResolveImages adds vulnerability data for the given images\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api.ResolveImagesReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.ResolveImagesResp"
                }
              }
            },
            "description": "ResolveImagesResp represents the images resolution API output"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Images",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorCI",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/images/names": {
      "get": {
        "description": "ImageNames returns image names according to the query specification\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters the results by image ID.\n",
            "in": "query",
            "name": "id",
            "schema": {
              "description": "Filters the results by image ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by hostname.\n",
            "in": "query",
            "name": "hostname",
            "schema": {
              "description": "Filters results by hostname.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by image repository.\n",
            "in": "query",
            "name": "repository",
            "schema": {
              "description": "Filters results by image repository.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by image registry.\n",
            "in": "query",
            "name": "registry",
            "schema": {
              "description": "Filters results by image registry.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by image name.\n",
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Filters results by image name.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Indicates if CVEs are mapped to image layer (true) or not (false).\n",
            "in": "query",
            "name": "layers",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates if base image vulnerabilities are to be filtered (true) or not (false). Requires predefined base images that have already been scanned.\n",
            "in": "query",
            "name": "filterBaseImage",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates if only minimal image data is to be returned (i.e., skip vulnerabilities, compliance, and extended image metadata) (true) or not (false).\n",
            "in": "query",
            "name": "compact",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Filters results according to whether an image is considered trusted or untrusted by your trusted images policy.\n",
            "in": "query",
            "name": "trustStatuses",
            "schema": {
              "description": "Filters results according to whether an image is considered trusted or untrusted by your trusted images policy.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by cluster name.\n",
            "in": "query",
            "name": "clusters",
            "schema": {
              "description": "Filters results by cluster name.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by compliance IDs.\n",
            "in": "query",
            "name": "complianceIDs",
            "schema": {
              "description": "Filters results by compliance IDs.\n",
              "items": {
                "$ref": "#/components/schemas/int"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters images that were scanned by App-Embedded Defenders.\n",
            "in": "query",
            "name": "appEmbedded",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_string"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Images",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorImages",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/images/scan": {
      "post": {
        "description": "ScanImages sends an image scan requests to all defenders\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/types.ImageScanOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Images",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorImages",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/images/twistlock_defender_app_embedded.tar.gz": {
      "get": {
        "description": "DownloadAppEmbeddedDefender generates the embedded defender bundle and serves it to the user\n",
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Images",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "manageDefenders",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/images/twistlock_defender_layer.zip": {
      "post": {
        "description": "DownloadServerlessLayerBundle returns a ZIP file with a Lambda layer containing the Defender runtime\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/shared.ServerlessBundleRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Images",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "manageDefenders",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/logs/agentless/upload/{id}": {
      "post": {
        "description": "UploadAgentlessLogs uploads agentless scanner logs\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Logs",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorCI",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/cloud-platforms": {
      "get": {
        "description": "CloudScanPolicy returns the cloud scan settings\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shared.CloudScanPolicy"
                }
              }
            },
            "description": "CloudScanPolicy holds policies for cloud scan"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyCloud",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/compliance/ci/images": {
      "get": {
        "description": "ImageCICompliancePolicy returns the CI image compliance policy\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shared.Policy"
                }
              }
            },
            "description": "Policy represents a policy that should be enforced by the Auditor"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyContainers",
          "saas": true,
          "self-hosted": true
        }
      },
      "put": {
        "description": "SetPolicy sets the given access/vulnerability or compliance policy\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/shared.Policy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyContainers",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/compliance/ci/serverless": {
      "get": {
        "description": "CIServerlessCompliancePolicy returns the CI serverless compliance policy\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shared.Policy"
                }
              }
            },
            "description": "Policy represents a policy that should be enforced by the Auditor"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyServerless",
          "saas": true,
          "self-hosted": true
        }
      },
      "put": {
        "description": "SetPolicy sets the given access/vulnerability or compliance policy\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/shared.Policy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyServerless",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/compliance/container": {
      "get": {
        "description": "ContainerCompliancePolicy returns the container compliance policy\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shared.Policy"
                }
              }
            },
            "description": "Policy represents a policy that should be enforced by the Auditor"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyContainers",
          "saas": true,
          "self-hosted": true
        }
      },
      "put": {
        "description": "SetPolicy sets the given access/vulnerability or compliance policy\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/shared.Policy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyContainers",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/compliance/container/impacted": {
      "get": {
        "description": "ContainerCompliancePolicyImpacted returns a limited list of container compliance policy rule impacted images and count\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "RuleName is the rule name to apply.\n",
            "in": "query",
            "name": "ruleName",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_shared.ImageScanResult"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyContainers",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/compliance/host": {
      "get": {
        "description": "HostCompliancePolicy returns the host compliance policy\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shared.Policy"
                }
              }
            },
            "description": "Policy represents a policy that should be enforced by the Auditor"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyHosts",
          "saas": true,
          "self-hosted": true
        }
      },
      "put": {
        "description": "SetPolicy sets the given access/vulnerability or compliance policy\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/shared.Policy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyHosts",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/compliance/serverless": {
      "get": {
        "description": "ServerlessCompliancePolicy returns the serverless compliance policy\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shared.Policy"
                }
              }
            },
            "description": "Policy represents a policy that should be enforced by the Auditor"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyServerless",
          "saas": true,
          "self-hosted": true
        }
      },
      "put": {
        "description": "SetPolicy sets the given access/vulnerability or compliance policy\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/shared.Policy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyServerless",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/compliance/vms/impacted": {
      "get": {
        "description": "VMCompliancePolicyImpacted returns a list of VMs for which the VM compliance policy rule applies to\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "RuleName is the rule name to apply.\n",
            "in": "query",
            "name": "ruleName",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_shared.ImageScanResult"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyHosts",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/firewall/app/apispec": {
      "post": {
        "description": "ResolveAppFirewallAPISpec resolves the given OpenAPI spec yaml/json\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/waas.APISpec"
                }
              }
            },
            "description": "APISpec is an API specification"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyWAAS",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/firewall/app/app-embedded": {
      "get": {
        "description": "AppEmbeddedAppFirewallPolicy returns the embedded defender application firewall runtime policy\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/waas.Policy"
                }
              }
            },
            "description": "Policy represents the policy"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyWAAS",
          "saas": true,
          "self-hosted": true
        }
      },
      "put": {
        "description": "SetAppEmbeddedAppFirewallPolicy sets the given embedded defender firewall policy\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/waas.Policy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyWAAS",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/firewall/app/container": {
      "get": {
        "description": "ContainerAppFirewallPolicy returns the container application firewall policy\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/waas.Policy"
                }
              }
            },
            "description": "Policy represents the policy"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyWAAS",
          "saas": true,
          "self-hosted": true
        }
      },
      "put": {
        "description": "SetContainerAppFirewallPolicy sets the given container firewall policy\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/waas.Policy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyWAAS",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/firewall/app/container/impacted": {
      "get": {
        "description": "ContainerAppFirewallPolicyImpacted returns a list of containers for which the firewall policy rule applies to\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "RuleName is the rule name to apply.\n",
            "in": "query",
            "name": "ruleName",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_shared.ContainerScanResult"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyWAAS",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/firewall/app/host": {
      "get": {
        "description": "HostAppFirewallPolicy returns the host application firewall policy\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/waas.Policy"
                }
              }
            },
            "description": "Policy represents the policy"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyWAAS",
          "saas": true,
          "self-hosted": true
        }
      },
      "put": {
        "description": "SetHostAppFirewallPolicy sets the given host firewall policy\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/waas.Policy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyWAAS",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/firewall/app/host/impacted": {
      "get": {
        "description": "HostAppFirewallPolicyImpacted returns a list of hosts for which the firewall policy rule applies to\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "RuleName is the rule name to apply.\n",
            "in": "query",
            "name": "ruleName",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_shared.ImageScanResult"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyWAAS",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/firewall/app/network-list": {
      "get": {
        "description": "NetworkLists returns the waas network lists\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_waas.NetworkList"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyWAAS",
          "saas": true,
          "self-hosted": true
        }
      },
      "post": {
        "description": "AddNetworkList creates new network list\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/waas.NetworkList"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyWAAS",
          "saas": true,
          "self-hosted": true
        }
      },
      "put": {
        "description": "UpdateNetworkList edits a waas network list\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/waas.NetworkList"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyWAAS",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/firewall/app/network-list/{id}": {
      "delete": {
        "description": "DeleteNetworkList deletes a network list\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyWAAS",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/firewall/app/out-of-band": {
      "get": {
        "description": "OutOfBandAppFirewallPolicy returns the out of band application firewall policy\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/waas.Policy"
                }
              }
            },
            "description": "Policy represents the policy"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyWAAS",
          "saas": true,
          "self-hosted": true
        }
      },
      "put": {
        "description": "SetOutOfBandAppFirewallPolicy sets the out of band WAAS policy\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/waas.Policy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyWAAS",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/firewall/app/out-of-band/impacted": {
      "get": {
        "description": "OutOfBandAppFirewallPolicyImpacted returns a list of entities for which the firewall policy rule applies to\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "RuleName is the rule name to apply.\n",
            "in": "query",
            "name": "ruleName",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_types.ImpactedOutOfBandEntity"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyWAAS",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/firewall/app/serverless": {
      "get": {
        "description": "ServerlessAppFirewallPolicy returns the serverless application firewall policy\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/waas.Policy"
                }
              }
            },
            "description": "Policy represents the policy"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyWAAS",
          "saas": true,
          "self-hosted": true
        }
      },
      "put": {
        "description": "SetServerlessAppFirewallPolicy sets the given serverless firewall policy\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/waas.Policy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyWAAS",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/firewall/network": {
      "get": {
        "description": "NetworkFirewallPolicy returns the network firewall policy\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/cnnf.Policy"
                }
              }
            },
            "description": "Policy holds the data for firewall policies (host and container)"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyCNNF",
          "saas": true,
          "self-hosted": true
        }
      },
      "put": {
        "description": "SetNetworkFirewallPolicy sets the given firewall policy\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/cnnf.Policy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyCNNF",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/runtime/app-embedded": {
      "get": {
        "description": "AppEmbeddedRuntimePolicy returns the fargate runtime policy\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.ContainerPolicy"
                }
              }
            },
            "description": "ContainerPolicy represents a runtime policy enforced for a given running resource"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyRuntimeServerless",
          "saas": true,
          "self-hosted": true
        }
      },
      "post": {
        "description": "SetAppEmbeddedRuntimePolicyRule adds the given embedded defender runtime policy rule\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.ContainerPolicyRule"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyRuntimeServerless",
          "saas": true,
          "self-hosted": true
        }
      },
      "put": {
        "description": "SetAppEmbeddedRuntimePolicy sets the given embedded defender runtime policy\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.ContainerPolicy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyRuntimeServerless",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/runtime/container": {
      "get": {
        "description": "ContainerPolicy returns the container runtime policy\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.ContainerPolicy"
                }
              }
            },
            "description": "ContainerPolicy represents a runtime policy enforced for a given running resource"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyRuntimeContainer",
          "saas": true,
          "self-hosted": true
        }
      },
      "post": {
        "description": "SetContainerRuntimePolicyRule adds the given container runtime policy rule\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.ContainerPolicyRule"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyRuntimeContainer",
          "saas": true,
          "self-hosted": true
        }
      },
      "put": {
        "description": "SetContainerRuntimePolicy sets the given runtime policy\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.ContainerPolicy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyRuntimeContainer",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/runtime/container/impacted": {
      "get": {
        "description": "ContainerRuntimePolicyImpacted returns a list of containers for which the runtime policy rule applies to\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "RuleName is the rule name to apply.\n",
            "in": "query",
            "name": "ruleName",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_shared.ContainerScanResult"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyRuntimeContainer",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/runtime/host": {
      "get": {
        "description": "HostPolicy returns the host runtime policy\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.HostPolicy"
                }
              }
            },
            "description": "HostPolicy represents a host runtime policy enforced for a given running resource"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyRuntimeHosts",
          "saas": true,
          "self-hosted": true
        }
      },
      "post": {
        "description": "SetHostRuntimePolicyRule set the specified rule first\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.HostPolicyRule"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyRuntimeHosts",
          "saas": true,
          "self-hosted": true
        }
      },
      "put": {
        "description": "SetHostRuntimePolicy sets the given host policy\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.HostPolicy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyRuntimeHosts",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/runtime/serverless": {
      "get": {
        "description": "ServerlessRuntimePolicy returns the serverless runtime policy\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/runtime.ContainerPolicy"
                }
              }
            },
            "description": "ContainerPolicy represents a runtime policy enforced for a given running resource"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyRuntimeServerless",
          "saas": true,
          "self-hosted": true
        }
      },
      "post": {
        "description": "SetServerlessRuntimePolicyRule adds the given serverless runtime policy rule\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.ContainerPolicyRule"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyRuntimeServerless",
          "saas": true,
          "self-hosted": true
        }
      },
      "put": {
        "description": "SetServerlessRuntimePolicy sets the serverless runtime policy\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/runtime.ContainerPolicy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyRuntimeServerless",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/vulnerability/base-images": {
      "get": {
        "description": "BaseImagesRules returns all the base image scopes and the list of base images digests for each of them\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_types.BaseImagesRule"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyContainers",
          "saas": true,
          "self-hosted": true
        }
      },
      "post": {
        "description": "AddBaseImagesRule adds the base images which match the given scope configuration\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/types.BaseImagesRule"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyContainers",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/vulnerability/base-images/download": {
      "get": {
        "description": "DownloadBaseImagesRules downloads the base images rules data to CSV\n",
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyContainers",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/vulnerability/base-images/{id}": {
      "delete": {
        "description": "DeleteBaseImagesRule removes all base images under a given scope\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyContainers",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/vulnerability/ci/images": {
      "get": {
        "description": "ImageCIVulnerabilityPolicy returns the CI image vulnerabilities policy\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shared.Policy"
                }
              }
            },
            "description": "Policy represents a policy that should be enforced by the Auditor"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyContainers",
          "saas": true,
          "self-hosted": true
        }
      },
      "put": {
        "description": "SetPolicy sets the given access/vulnerability or compliance policy\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/shared.Policy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyContainers",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/vulnerability/ci/serverless": {
      "get": {
        "description": "CIServerlessVulnerabilityPolicy returns the CI serverless vulnerabilities policy\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shared.Policy"
                }
              }
            },
            "description": "Policy represents a policy that should be enforced by the Auditor"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyServerless",
          "saas": true,
          "self-hosted": true
        }
      },
      "put": {
        "description": "SetPolicy sets the given access/vulnerability or compliance policy\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/shared.Policy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyServerless",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/vulnerability/coderepos": {
      "get": {
        "description": "CodeRepoVulnerabilityPolicy returns the code repository vulnerability policy\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shared.Policy"
                }
              }
            },
            "description": "Policy represents a policy that should be enforced by the Auditor"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyCodeRepos",
          "saas": true,
          "self-hosted": true
        }
      },
      "put": {
        "description": "SetPolicy sets the given access/vulnerability or compliance policy\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/shared.Policy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyCodeRepos",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/vulnerability/coderepos/impacted": {
      "get": {
        "description": "CodeRepoVulnerabilityPolicyImpacted returns a list of repositories that the policy rule applies to\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "RuleName is the rule name to apply.\n",
            "in": "query",
            "name": "ruleName",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_coderepos.ScanResult"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyCodeRepos",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/vulnerability/host": {
      "get": {
        "description": "HostVulnerabilityPolicy returns the host vulnerabilities policy\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shared.Policy"
                }
              }
            },
            "description": "Policy represents a policy that should be enforced by the Auditor"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyHosts",
          "saas": true,
          "self-hosted": true
        }
      },
      "put": {
        "description": "SetPolicy sets the given access/vulnerability or compliance policy\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/shared.Policy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyHosts",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/vulnerability/host/impacted": {
      "get": {
        "description": "HostVulnerabilityPolicyImpacted returns a limited list of host vulnerability policy rule impacted hosts and count\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "RuleName is the rule name to apply.\n",
            "in": "query",
            "name": "ruleName",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_shared.ImageScanResult"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyHosts",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/vulnerability/images": {
      "get": {
        "description": "ContainerVulnerabilityPolicy returns the container vulnerabilities policy\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shared.Policy"
                }
              }
            },
            "description": "Policy represents a policy that should be enforced by the Auditor"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyContainers",
          "saas": true,
          "self-hosted": true
        }
      },
      "put": {
        "description": "SetPolicy sets the given access/vulnerability or compliance policy\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/shared.Policy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyContainers",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/vulnerability/images/impacted": {
      "get": {
        "description": "ContainerVulnerabilityPolicyImpacted returns a limited list of container vulnerability policy rule impacted images and count\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "RuleName is the rule name to apply.\n",
            "in": "query",
            "name": "ruleName",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_shared.ImageScanResult"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyContainers",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/policies/vulnerability/serverless": {
      "get": {
        "description": "ServerlessVulnerabilityPolicy returns the serverless vulnerability policy\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shared.Policy"
                }
              }
            },
            "description": "Policy represents a policy that should be enforced by the Auditor"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyServerless",
          "saas": true,
          "self-hosted": true
        }
      },
      "put": {
        "description": "SetPolicy sets the given access/vulnerability or compliance policy\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/shared.Policy"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Policies",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyServerless",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/profiles/app-embedded": {
      "get": {
        "description": "AppEmbeddedRuntimeProfiles returns the app embedded runtime profiles\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "AppIDs is the app embedded profile id filter.\n",
            "in": "query",
            "name": "appID",
            "schema": {
              "description": "AppIDs is the app embedded profile id filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Containers is the app embedded container filter.\n",
            "in": "query",
            "name": "container",
            "schema": {
              "description": "Containers is the app embedded container filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Images is the app embedded images filter.\n",
            "in": "query",
            "name": "image",
            "schema": {
              "description": "Images is the app embedded images filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Clusters is the app embedded clusters filter.\n",
            "in": "query",
            "name": "cluster",
            "schema": {
              "description": "Clusters is the app embedded clusters filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "AccountIDs is the app embedded account IDs filter.\n",
            "in": "query",
            "name": "accountID",
            "schema": {
              "description": "AccountIDs is the app embedded account IDs filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "ImageIDs is the app embedded image IDs filter.\n",
            "in": "query",
            "name": "imageID",
            "schema": {
              "description": "ImageIDs is the app embedded image IDs filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_shared.AppEmbeddedRuntimeProfile"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Profiles",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorRuntimeServerless",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/profiles/app-embedded/download": {
      "get": {
        "description": "DownloadAppEmbeddedRuntimeProfiles downloads the app embedded runtime profiles according to the specified query\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "AppIDs is the app embedded profile id filter.\n",
            "in": "query",
            "name": "appID",
            "schema": {
              "description": "AppIDs is the app embedded profile id filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Containers is the app embedded container filter.\n",
            "in": "query",
            "name": "container",
            "schema": {
              "description": "Containers is the app embedded container filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Images is the app embedded images filter.\n",
            "in": "query",
            "name": "image",
            "schema": {
              "description": "Images is the app embedded images filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Clusters is the app embedded clusters filter.\n",
            "in": "query",
            "name": "cluster",
            "schema": {
              "description": "Clusters is the app embedded clusters filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "AccountIDs is the app embedded account IDs filter.\n",
            "in": "query",
            "name": "accountID",
            "schema": {
              "description": "AccountIDs is the app embedded account IDs filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "ImageIDs is the app embedded image IDs filter.\n",
            "in": "query",
            "name": "imageID",
            "schema": {
              "description": "ImageIDs is the app embedded image IDs filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Profiles",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorRuntimeServerless",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/profiles/container": {
      "get": {
        "description": "ContainerRuntimeProfiles returns container runtime profiles by the query specification\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "IDs is the runtime profile id filter.\n",
            "in": "query",
            "name": "id",
            "schema": {
              "description": "IDs is the runtime profile id filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "OS is the service runtime profile OS filter.\n",
            "in": "query",
            "name": "os",
            "schema": {
              "description": "OS is the service runtime profile OS filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "States is the runtime profile state filter.\n",
            "in": "query",
            "name": "state",
            "schema": {
              "description": "States is the runtime profile state filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "ImageIDs is the runtime profile image id filter.\n",
            "in": "query",
            "name": "imageID",
            "schema": {
              "description": "ImageIDs is the runtime profile image id filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Images is the runtime profile image filter.\n",
            "in": "query",
            "name": "image",
            "schema": {
              "description": "Images is the runtime profile image filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Hosts is the runtime profile hostname filter.\n",
            "in": "query",
            "name": "hostName",
            "schema": {
              "description": "Hosts is the runtime profile hostname filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Namespaces is the runtime profile k8s namespace filter.\n",
            "in": "query",
            "name": "namespace",
            "schema": {
              "description": "Namespaces is the runtime profile k8s namespace filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Clusters is the runtime profile k8s cluster filter.\n",
            "in": "query",
            "name": "cluster",
            "schema": {
              "description": "Clusters is the runtime profile k8s cluster filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_shared.ContainerRuntimeProfile"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Profiles",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorRuntimeContainers",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/profiles/container/download": {
      "get": {
        "description": "DownloadContainerRuntimeProfiles downloads the container runtime security profiles according to the specified query\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "IDs is the runtime profile id filter.\n",
            "in": "query",
            "name": "id",
            "schema": {
              "description": "IDs is the runtime profile id filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "OS is the service runtime profile OS filter.\n",
            "in": "query",
            "name": "os",
            "schema": {
              "description": "OS is the service runtime profile OS filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "States is the runtime profile state filter.\n",
            "in": "query",
            "name": "state",
            "schema": {
              "description": "States is the runtime profile state filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "ImageIDs is the runtime profile image id filter.\n",
            "in": "query",
            "name": "imageID",
            "schema": {
              "description": "ImageIDs is the runtime profile image id filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Images is the runtime profile image filter.\n",
            "in": "query",
            "name": "image",
            "schema": {
              "description": "Images is the runtime profile image filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Hosts is the runtime profile hostname filter.\n",
            "in": "query",
            "name": "hostName",
            "schema": {
              "description": "Hosts is the runtime profile hostname filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Namespaces is the runtime profile k8s namespace filter.\n",
            "in": "query",
            "name": "namespace",
            "schema": {
              "description": "Namespaces is the runtime profile k8s namespace filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Clusters is the runtime profile k8s cluster filter.\n",
            "in": "query",
            "name": "cluster",
            "schema": {
              "description": "Clusters is the runtime profile k8s cluster filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Profiles",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorRuntimeContainers",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/profiles/container/learn": {
      "post": {
        "description": "RelearnAllContainerRuntimeProfiles updates all container runtime profiles state to relearn by the following 2 steps:\n1. Broadcast a request to all defenders to relearn all container runtime profiles\n2. Update all container runtime profiles state to extended learning in DB\n",
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Profiles",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorRuntimeContainers",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/profiles/host": {
      "get": {
        "description": "HostRuntimeProfiles returns host runtime profiles by the query specification\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "IDs is the runtime profile id filter.\n",
            "in": "query",
            "name": "id",
            "schema": {
              "description": "IDs is the runtime profile id filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "OS is the service runtime profile OS filter.\n",
            "in": "query",
            "name": "os",
            "schema": {
              "description": "OS is the service runtime profile OS filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "States is the runtime profile state filter.\n",
            "in": "query",
            "name": "state",
            "schema": {
              "description": "States is the runtime profile state filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "ImageIDs is the runtime profile image id filter.\n",
            "in": "query",
            "name": "imageID",
            "schema": {
              "description": "ImageIDs is the runtime profile image id filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Images is the runtime profile image filter.\n",
            "in": "query",
            "name": "image",
            "schema": {
              "description": "Images is the runtime profile image filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Hosts is the runtime profile hostname filter.\n",
            "in": "query",
            "name": "hostName",
            "schema": {
              "description": "Hosts is the runtime profile hostname filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Namespaces is the runtime profile k8s namespace filter.\n",
            "in": "query",
            "name": "namespace",
            "schema": {
              "description": "Namespaces is the runtime profile k8s namespace filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Clusters is the runtime profile k8s cluster filter.\n",
            "in": "query",
            "name": "cluster",
            "schema": {
              "description": "Clusters is the runtime profile k8s cluster filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_runtime.HostProfile"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Profiles",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorRuntimeHosts",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/profiles/host/download": {
      "get": {
        "description": "DownloadHostsRuntimeProfiles downloads the host runtime profiles according to the specified query\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "IDs is the runtime profile id filter.\n",
            "in": "query",
            "name": "id",
            "schema": {
              "description": "IDs is the runtime profile id filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "OS is the service runtime profile OS filter.\n",
            "in": "query",
            "name": "os",
            "schema": {
              "description": "OS is the service runtime profile OS filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "States is the runtime profile state filter.\n",
            "in": "query",
            "name": "state",
            "schema": {
              "description": "States is the runtime profile state filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "ImageIDs is the runtime profile image id filter.\n",
            "in": "query",
            "name": "imageID",
            "schema": {
              "description": "ImageIDs is the runtime profile image id filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Images is the runtime profile image filter.\n",
            "in": "query",
            "name": "image",
            "schema": {
              "description": "Images is the runtime profile image filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Hosts is the runtime profile hostname filter.\n",
            "in": "query",
            "name": "hostName",
            "schema": {
              "description": "Hosts is the runtime profile hostname filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Namespaces is the runtime profile k8s namespace filter.\n",
            "in": "query",
            "name": "namespace",
            "schema": {
              "description": "Namespaces is the runtime profile k8s namespace filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Clusters is the runtime profile k8s cluster filter.\n",
            "in": "query",
            "name": "cluster",
            "schema": {
              "description": "Clusters is the runtime profile k8s cluster filter.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Profiles",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorRuntimeHosts",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/registry": {
      "get": {
        "description": "RegistryImages returns registry images\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by registry image.\n",
            "in": "query",
            "name": "id",
            "schema": {
              "description": "Filters results by registry image.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by image IDs (as they appear at the daemon).\n",
            "in": "query",
            "name": "imageID",
            "schema": {
              "description": "Filters results by image IDs (as they appear at the daemon).\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by image repository.\n",
            "in": "query",
            "name": "repository",
            "schema": {
              "description": "Filters results by image repository.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by image registry.\n",
            "in": "query",
            "name": "registry",
            "schema": {
              "description": "Filters results by image registry.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Full image names on which to query.\n",
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Full image names on which to query.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Indicates if CVEs are mapped to image layer (true) or not (false).\n",
            "in": "query",
            "name": "layers",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates if only minimal image data is to be returned (i.e., vulnerabilities, compliance, and extended image metadata should be skipped) (true) or not (false).\n",
            "in": "query",
            "name": "compact",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates if base image vulnerabilities are to be filtered (true) or not (false). Requires predefined base images that have already been scanned.\n",
            "in": "query",
            "name": "filterBaseImage",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_shared.ImageScanResult"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Registry",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorImages",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/registry/download": {
      "get": {
        "description": "DownloadRegistryImages downloads the registry images data to CSVs\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by registry image.\n",
            "in": "query",
            "name": "id",
            "schema": {
              "description": "Filters results by registry image.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by image IDs (as they appear at the daemon).\n",
            "in": "query",
            "name": "imageID",
            "schema": {
              "description": "Filters results by image IDs (as they appear at the daemon).\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by image repository.\n",
            "in": "query",
            "name": "repository",
            "schema": {
              "description": "Filters results by image repository.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by image registry.\n",
            "in": "query",
            "name": "registry",
            "schema": {
              "description": "Filters results by image registry.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Full image names on which to query.\n",
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Full image names on which to query.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Indicates if CVEs are mapped to image layer (true) or not (false).\n",
            "in": "query",
            "name": "layers",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates if only minimal image data is to be returned (i.e., vulnerabilities, compliance, and extended image metadata should be skipped) (true) or not (false).\n",
            "in": "query",
            "name": "compact",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates if base image vulnerabilities are to be filtered (true) or not (false). Requires predefined base images that have already been scanned.\n",
            "in": "query",
            "name": "filterBaseImage",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Registry",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorImages",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/registry/names": {
      "get": {
        "description": "RegistryImageNames returns registry scanned image names according to the query specification\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by registry image.\n",
            "in": "query",
            "name": "id",
            "schema": {
              "description": "Filters results by registry image.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by image IDs (as they appear at the daemon).\n",
            "in": "query",
            "name": "imageID",
            "schema": {
              "description": "Filters results by image IDs (as they appear at the daemon).\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by image repository.\n",
            "in": "query",
            "name": "repository",
            "schema": {
              "description": "Filters results by image repository.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by image registry.\n",
            "in": "query",
            "name": "registry",
            "schema": {
              "description": "Filters results by image registry.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Full image names on which to query.\n",
            "in": "query",
            "name": "name",
            "schema": {
              "description": "Full image names on which to query.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Indicates if CVEs are mapped to image layer (true) or not (false).\n",
            "in": "query",
            "name": "layers",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates if only minimal image data is to be returned (i.e., vulnerabilities, compliance, and extended image metadata should be skipped) (true) or not (false).\n",
            "in": "query",
            "name": "compact",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Indicates if base image vulnerabilities are to be filtered (true) or not (false). Requires predefined base images that have already been scanned.\n",
            "in": "query",
            "name": "filterBaseImage",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_string"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Registry",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorImages",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/registry/scan": {
      "post": {
        "description": "ScanRegistry sends a registry scan request to all registry scanner defenders\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/shared.RegistryScanRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Registry",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorImages",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/registry/stop": {
      "post": {
        "description": "StopRegistryScan stops the currently running registry scan\n",
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Registry",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorImages",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/sandbox": {
      "post": {
        "description": "AddSandboxScanResult adds a sandbox scan result\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/sandbox.ScanResult"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Sandbox",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "sandbox",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/scans": {
      "get": {
        "description": "CLIScanResults fetches all CLI scan results\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scan ID used in the image layers fetch.\n",
            "in": "query",
            "name": "_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Jenkins job name.\n",
            "in": "query",
            "name": "jobName",
            "schema": {
              "description": "Jenkins job name.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scan type.\n",
            "in": "query",
            "name": "type",
            "schema": {
              "description": "Scan type.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Indicates whether to filter on passed scans (true) or not (false).\n",
            "in": "query",
            "name": "pass",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Build number.\n",
            "in": "query",
            "name": "build",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Image ID of scanned image.\n",
            "in": "query",
            "name": "imageID",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Indicates if CVEs are mapped to image layer (true) or not (false).\n",
            "in": "query",
            "name": "layers",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Filters results by start datetime. Based on scan time.\n",
            "in": "query",
            "name": "from",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Filters results by end datetime. Based on scan time.\n",
            "in": "query",
            "name": "to",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Indicates if base image vulnerabilities are to be filtered (true) or not (false). Requires predefined base images that have already been scanned.\n",
            "in": "query",
            "name": "filterBaseImage",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_shared.CLIScanResult"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Scans",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorCI",
          "saas": true,
          "self-hosted": true
        }
      },
      "post": {
        "description": "AddCLIScanResult adds a CLI scan result\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/shared.CLIScanResult"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Scans",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorCI",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/scans/agentless": {
      "post": {
        "description": "AddAgentlessScanResult adds an agentless scan result\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/shared.ImageScanResult"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Scans",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorCI",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/scans/download": {
      "get": {
        "description": "DownloadCLIScanResults downloads the cli scans data to CSV\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scan ID used in the image layers fetch.\n",
            "in": "query",
            "name": "_id",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Jenkins job name.\n",
            "in": "query",
            "name": "jobName",
            "schema": {
              "description": "Jenkins job name.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scan type.\n",
            "in": "query",
            "name": "type",
            "schema": {
              "description": "Scan type.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Indicates whether to filter on passed scans (true) or not (false).\n",
            "in": "query",
            "name": "pass",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Build number.\n",
            "in": "query",
            "name": "build",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Image ID of scanned image.\n",
            "in": "query",
            "name": "imageID",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Indicates if CVEs are mapped to image layer (true) or not (false).\n",
            "in": "query",
            "name": "layers",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Filters results by start datetime. Based on scan time.\n",
            "in": "query",
            "name": "from",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Filters results by end datetime. Based on scan time.\n",
            "in": "query",
            "name": "to",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "Indicates if base image vulnerabilities are to be filtered (true) or not (false). Requires predefined base images that have already been scanned.\n",
            "in": "query",
            "name": "filterBaseImage",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Scans",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorCI",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/scans/sonatype": {
      "post": {
        "description": "UploadScanResult saves the image scan results, it also scavenge historical images\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shared.UploadScanResult"
                }
              }
            },
            "description": "UploadScanResult is the result uploading the scanning result"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Scans",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorCI",
          "saas": false,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/scans/vms": {
      "post": {
        "description": "AddVMScanResult adds a VM scan result\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/shared.ImageScanResult"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Scans",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorCI",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/scans/{id}": {
      "get": {
        "description": "ImageScanResult returns the scan result for the given image\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Scans",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorCI",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/scripts/defender.sh": {
      "post": {
        "description": "DefenderScriptLinux returns the resolved defender script for linux deployment\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api.DefenderInstallScriptOptions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_uint8"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Scripts",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "manageDefenders",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/serverless": {
      "get": {
        "description": "ServerlessFunctions returns serverless functions\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of function IDs.\n",
            "in": "query",
            "name": "id",
            "schema": {
              "description": "List of function IDs.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of cloud controller addresses which hold the functions.\n",
            "in": "query",
            "name": "cloudControllerAddresses",
            "schema": {
              "description": "List of cloud controller addresses which hold the functions.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by provider.\n",
            "in": "query",
            "name": "provider",
            "schema": {
              "description": "Filters results by provider.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by region.\n",
            "in": "query",
            "name": "region",
            "schema": {
              "description": "Filters results by region.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by runtime.\n",
            "in": "query",
            "name": "runtime",
            "schema": {
              "description": "Filters results by runtime.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by function version.\n",
            "in": "query",
            "name": "version",
            "schema": {
              "description": "Filters results by function version.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by function layers.\n",
            "in": "query",
            "name": "functionLayers",
            "schema": {
              "description": "Filters results by function layers.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by functions which are defended by a Defender and are connected to Console (true) or not (false).\n",
            "in": "query",
            "name": "defended",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Filters results by compliance ID.\n",
            "in": "query",
            "name": "complianceIDs",
            "schema": {
              "description": "Filters results by compliance ID.\n",
              "items": {
                "$ref": "#/components/schemas/int"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by platform.\n",
            "in": "query",
            "name": "platform",
            "schema": {
              "description": "Filters results by platform.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_serverless.FunctionInfo"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Serverless",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorServerless",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/serverless/download": {
      "get": {
        "description": "DownloadServerlessFunctions downloads the serverless functions data to CSVs\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of function IDs.\n",
            "in": "query",
            "name": "id",
            "schema": {
              "description": "List of function IDs.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of cloud controller addresses which hold the functions.\n",
            "in": "query",
            "name": "cloudControllerAddresses",
            "schema": {
              "description": "List of cloud controller addresses which hold the functions.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by provider.\n",
            "in": "query",
            "name": "provider",
            "schema": {
              "description": "Filters results by provider.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by region.\n",
            "in": "query",
            "name": "region",
            "schema": {
              "description": "Filters results by region.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by runtime.\n",
            "in": "query",
            "name": "runtime",
            "schema": {
              "description": "Filters results by runtime.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by function version.\n",
            "in": "query",
            "name": "version",
            "schema": {
              "description": "Filters results by function version.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by function layers.\n",
            "in": "query",
            "name": "functionLayers",
            "schema": {
              "description": "Filters results by function layers.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by functions which are defended by a Defender and are connected to Console (true) or not (false).\n",
            "in": "query",
            "name": "defended",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Filters results by compliance ID.\n",
            "in": "query",
            "name": "complianceIDs",
            "schema": {
              "description": "Filters results by compliance ID.\n",
              "items": {
                "$ref": "#/components/schemas/int"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by platform.\n",
            "in": "query",
            "name": "platform",
            "schema": {
              "description": "Filters results by platform.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Serverless",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorServerless",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/serverless/evaluate": {
      "post": {
        "description": "ResolveFunctions adds vulnerability data for the given functions\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api.ResolveFunctionsReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.ResolveFunctionsResp"
                }
              }
            },
            "description": "ResolveFunctionsResp represents the functions resolution API output"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Serverless",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorCI",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/serverless/names": {
      "get": {
        "description": "ServerlessFunctionNames returns serverless function names according to the query specification\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of function IDs.\n",
            "in": "query",
            "name": "id",
            "schema": {
              "description": "List of function IDs.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of cloud controller addresses which hold the functions.\n",
            "in": "query",
            "name": "cloudControllerAddresses",
            "schema": {
              "description": "List of cloud controller addresses which hold the functions.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by provider.\n",
            "in": "query",
            "name": "provider",
            "schema": {
              "description": "Filters results by provider.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by region.\n",
            "in": "query",
            "name": "region",
            "schema": {
              "description": "Filters results by region.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by runtime.\n",
            "in": "query",
            "name": "runtime",
            "schema": {
              "description": "Filters results by runtime.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by function version.\n",
            "in": "query",
            "name": "version",
            "schema": {
              "description": "Filters results by function version.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by function layers.\n",
            "in": "query",
            "name": "functionLayers",
            "schema": {
              "description": "Filters results by function layers.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by functions which are defended by a Defender and are connected to Console (true) or not (false).\n",
            "in": "query",
            "name": "defended",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Filters results by compliance ID.\n",
            "in": "query",
            "name": "complianceIDs",
            "schema": {
              "description": "Filters results by compliance ID.\n",
              "items": {
                "$ref": "#/components/schemas/int"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by platform.\n",
            "in": "query",
            "name": "platform",
            "schema": {
              "description": "Filters results by platform.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_string"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Serverless",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorServerless",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/serverless/scan": {
      "post": {
        "description": "ScanServerless starts a serverless scan\n",
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Serverless",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorServerless",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/serverless/stop": {
      "post": {
        "description": "StopServerlessScan stops the current serverless scan\n",
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Serverless",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorServerless",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/settings/coderepos": {
      "get": {
        "description": "CodeRepoSettings returns the code repository scan settings\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shared.CodeRepoSettings"
                }
              }
            },
            "description": "CodeRepoSettings is the settings for scanning remote code repositories"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Settings",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyCodeRepos",
          "saas": true,
          "self-hosted": true
        }
      },
      "put": {
        "description": "SetCodeRepoSettings sets the code repository scan settings\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/-_shared.CodeRepoSpecification"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Settings",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyCodeRepos",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/settings/custom-labels": {
      "get": {
        "description": "SettingsCustomLabels returns the custom labels settings\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shared.CustomLabelsSettings"
                }
              }
            },
            "description": "CustomLabelsSettings are customized label names that are used to augment audit events\nThey can either be docker labels (which appears in the container label specification)\nor k8s/openshift labels (which appears in the pause container that monitors the target container)"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Settings",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "user",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/settings/defender": {
      "get": {
        "description": "DefenderSettings returns the defenders settings\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/defender.Settings"
                }
              }
            },
            "description": "Settings is the Defender settings"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Settings",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "manageDefenders",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/settings/registry": {
      "get": {
        "description": "RegistrySettings returns the registry settings\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shared.RegistrySettings"
                }
              }
            },
            "description": "RegistrySettings contains each registry's unique settings"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Settings",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyContainers",
          "saas": true,
          "self-hosted": true
        }
      },
      "post": {
        "description": "AddRegistrySpec adds a registry to the registry settings\n",
        "parameters": [
          {
            "description": "ScanLater indicates to save the setting without starting a scan.\n",
            "in": "query",
            "name": "scanLater",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/shared.RegistrySpecification"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Settings",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyContainers",
          "saas": true,
          "self-hosted": true
        }
      },
      "put": {
        "description": "SetRegistrySettings sets the registry settings\n",
        "parameters": [
          {
            "description": "ScanLater indicates to save the setting without starting a scan.\n",
            "in": "query",
            "name": "scanLater",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/shared.RegistrySettings"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Settings",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyContainers",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/settings/serverless-scan": {
      "get": {
        "description": "ServerlessScanSettings returns the serverless scan settings\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_shared.ServerlessScanSpecification"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Settings",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyServerless",
          "saas": true,
          "self-hosted": true
        }
      },
      "post": {
        "description": "AddServerlessScanSettings adds serverless settings\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/shared.ServerlessScanSpecification"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Settings",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyServerless",
          "saas": true,
          "self-hosted": true
        }
      },
      "put": {
        "description": "SetServerlessScanSettings sets the serverless settings\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/-_shared.ServerlessScanSpecification"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Settings",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyServerless",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/settings/tas": {
      "get": {
        "description": "TASSettings returns the TAS settings\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_shared.TASDropletSpecification"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Settings",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyContainers",
          "saas": true,
          "self-hosted": true
        }
      },
      "post": {
        "description": "SetTASSettings sets the TAS settings\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/-_shared.TASDropletSpecification"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Settings",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyContainers",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/settings/vm": {
      "get": {
        "description": "VMSettings returns the VM settings\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_shared.VMSpecification"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Settings",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyHosts",
          "saas": true,
          "self-hosted": true
        }
      },
      "put": {
        "description": "SetVMSettings sets the VM settings\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/-_shared.VMSpecification"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Settings",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "policyHosts",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/settings/wildfire": {
      "get": {
        "description": "WildFireSettings returns the wildfire settings\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/shared.WildFireSettings"
                }
              }
            },
            "description": "WildFireSettings are the settings for WildFire API requests"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Settings",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorCI",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/stats/app-firewall/count": {
      "get": {
        "description": "AppFirewallCount returns the number of app firewalls in use\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/int"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Stats",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "systemOperations",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/stats/compliance": {
      "get": {
        "description": "ComplianceStats returns compliance stats that match the specified query options\n",
        "parameters": [
          {
            "description": "Scopes query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by rule name.\n",
            "in": "query",
            "name": "ruleName",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filters results by policy type. Used to further scope queries because rule names do not need to be unique between policies.\n",
            "in": "query",
            "name": "policyType",
            "schema": {
              "description": "PolicyType represents the type of the policy",
              "enum": [
                [
                  "docker",
                  "containerVulnerability",
                  "containerCompliance",
                  "ciImagesVulnerability",
                  "ciImagesCompliance",
                  "hostVulnerability",
                  "hostCompliance",
                  "vmVulnerability",
                  "vmCompliance",
                  "serverlessCompliance",
                  "ciServerlessCompliance",
                  "serverlessVulnerability",
                  "ciServerlessVulnerability",
                  "containerRuntime",
                  "appEmbeddedRuntime",
                  "containerAppFirewall",
                  "hostAppFirewall",
                  "outOfBandAppFirewall",
                  "appEmbeddedAppFirewall",
                  "serverlessAppFirewall",
                  "networkFirewall",
                  "secrets",
                  "hostRuntime",
                  "serverlessRuntime",
                  "kubernetesAudit",
                  "trust",
                  "cloud",
                  "admission",
                  "codeRepoVulnerability",
                  "ciCodeRepoVulnerability",
                  "codeRepoCompliance",
                  "ciCodeRepoCompliance"
                ]
              ],
              "type": "string"
            }
          },
          {
            "description": "Filters results by category. For example, a benchmark or resource type.\n",
            "in": "query",
            "name": "category",
            "schema": {
              "description": "ComplianceCategory represents the compliance category",
              "enum": [
                [
                  "Docker",
                  "Docker (DISA STIG)",
                  "Twistlock Labs",
                  "Custom",
                  "Istio",
                  "Linux",
                  "Kubernetes",
                  "CRI",
                  "OpenShift"
                ]
              ],
              "type": "string"
            }
          },
          {
            "description": "Filters results by compliance template.\n",
            "in": "query",
            "name": "template",
            "schema": {
              "description": "ComplianceTemplate represents the compliance template",
              "enum": [
                [
                  "PCI",
                  "HIPAA",
                  "NIST SP 800-190",
                  "GDPR",
                  "DISA STIG"
                ]
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/types.ComplianceStats"
                }
              }
            },
            "description": "ComplianceStats holds compliance data"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Stats",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorCompliance",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/stats/compliance/download": {
      "get": {
        "description": "DownloadComplianceStats downloads the compliance stats\n",
        "parameters": [
          {
            "description": "Scopes query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by rule name.\n",
            "in": "query",
            "name": "ruleName",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filters results by policy type. Used to further scope queries because rule names do not need to be unique between policies.\n",
            "in": "query",
            "name": "policyType",
            "schema": {
              "description": "PolicyType represents the type of the policy",
              "enum": [
                [
                  "docker",
                  "containerVulnerability",
                  "containerCompliance",
                  "ciImagesVulnerability",
                  "ciImagesCompliance",
                  "hostVulnerability",
                  "hostCompliance",
                  "vmVulnerability",
                  "vmCompliance",
                  "serverlessCompliance",
                  "ciServerlessCompliance",
                  "serverlessVulnerability",
                  "ciServerlessVulnerability",
                  "containerRuntime",
                  "appEmbeddedRuntime",
                  "containerAppFirewall",
                  "hostAppFirewall",
                  "outOfBandAppFirewall",
                  "appEmbeddedAppFirewall",
                  "serverlessAppFirewall",
                  "networkFirewall",
                  "secrets",
                  "hostRuntime",
                  "serverlessRuntime",
                  "kubernetesAudit",
                  "trust",
                  "cloud",
                  "admission",
                  "codeRepoVulnerability",
                  "ciCodeRepoVulnerability",
                  "codeRepoCompliance",
                  "ciCodeRepoCompliance"
                ]
              ],
              "type": "string"
            }
          },
          {
            "description": "Filters results by category. For example, a benchmark or resource type.\n",
            "in": "query",
            "name": "category",
            "schema": {
              "description": "ComplianceCategory represents the compliance category",
              "enum": [
                [
                  "Docker",
                  "Docker (DISA STIG)",
                  "Twistlock Labs",
                  "Custom",
                  "Istio",
                  "Linux",
                  "Kubernetes",
                  "CRI",
                  "OpenShift"
                ]
              ],
              "type": "string"
            }
          },
          {
            "description": "Filters results by compliance template.\n",
            "in": "query",
            "name": "template",
            "schema": {
              "description": "ComplianceTemplate represents the compliance template",
              "enum": [
                [
                  "PCI",
                  "HIPAA",
                  "NIST SP 800-190",
                  "GDPR",
                  "DISA STIG"
                ]
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Stats",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorCompliance",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/stats/compliance/refresh": {
      "post": {
        "description": "RefreshComplianceStats collects compliance stats and returns the collected stats\n",
        "parameters": [
          {
            "description": "Scopes query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Filters results by rule name.\n",
            "in": "query",
            "name": "ruleName",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filters results by policy type. Used to further scope queries because rule names do not need to be unique between policies.\n",
            "in": "query",
            "name": "policyType",
            "schema": {
              "description": "PolicyType represents the type of the policy",
              "enum": [
                [
                  "docker",
                  "containerVulnerability",
                  "containerCompliance",
                  "ciImagesVulnerability",
                  "ciImagesCompliance",
                  "hostVulnerability",
                  "hostCompliance",
                  "vmVulnerability",
                  "vmCompliance",
                  "serverlessCompliance",
                  "ciServerlessCompliance",
                  "serverlessVulnerability",
                  "ciServerlessVulnerability",
                  "containerRuntime",
                  "appEmbeddedRuntime",
                  "containerAppFirewall",
                  "hostAppFirewall",
                  "outOfBandAppFirewall",
                  "appEmbeddedAppFirewall",
                  "serverlessAppFirewall",
                  "networkFirewall",
                  "secrets",
                  "hostRuntime",
                  "serverlessRuntime",
                  "kubernetesAudit",
                  "trust",
                  "cloud",
                  "admission",
                  "codeRepoVulnerability",
                  "ciCodeRepoVulnerability",
                  "codeRepoCompliance",
                  "ciCodeRepoCompliance"
                ]
              ],
              "type": "string"
            }
          },
          {
            "description": "Filters results by category. For example, a benchmark or resource type.\n",
            "in": "query",
            "name": "category",
            "schema": {
              "description": "ComplianceCategory represents the compliance category",
              "enum": [
                [
                  "Docker",
                  "Docker (DISA STIG)",
                  "Twistlock Labs",
                  "Custom",
                  "Istio",
                  "Linux",
                  "Kubernetes",
                  "CRI",
                  "OpenShift"
                ]
              ],
              "type": "string"
            }
          },
          {
            "description": "Filters results by compliance template.\n",
            "in": "query",
            "name": "template",
            "schema": {
              "description": "ComplianceTemplate represents the compliance template",
              "enum": [
                [
                  "PCI",
                  "HIPAA",
                  "NIST SP 800-190",
                  "GDPR",
                  "DISA STIG"
                ]
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/types.ComplianceStats"
                }
              }
            },
            "description": "ComplianceStats holds compliance data"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Stats",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorCompliance",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/stats/daily": {
      "get": {
        "description": "Stats returns the system stats\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_types.Stats"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Stats",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorRuntimeContainers",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/stats/dashboard": {
      "get": {
        "description": "Trends returns the current system trends\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/types.Trends"
                }
              }
            },
            "description": "Trends contains data on global trends in the system"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Stats",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorVuln",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/stats/events": {
      "get": {
        "description": "EventsStats returns events statistics\n",
        "parameters": [
          {
            "description": "Collections are collections scoping the query.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Collections are collections scoping the query.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "AccountIDs are the account IDs scoping the query.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "AccountIDs are the account IDs scoping the query.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "From is an optional minimum time constraints for the audit.\n",
            "in": "query",
            "name": "from",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "To is an optional maximum time constraints for the audit.\n",
            "in": "query",
            "name": "to",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "AttackTechniques are the MITRE attack techniques.\n",
            "in": "query",
            "name": "attackTechniques",
            "schema": {
              "description": "AttackTechniques are the MITRE attack techniques.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/types.EventStats"
                }
              }
            },
            "description": "EventStats holds counters for all event types"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Stats",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "accessUI",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/stats/license": {
      "get": {
        "description": "LicenseStats returns the license stats including the credit per defender\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/types.LicenseStats"
                }
              }
            },
            "description": "LicenseStats holds the console license stats"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Stats",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "systemOperations",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/stats/vulnerabilities": {
      "get": {
        "description": "VulnerabilityStats returns most critical vulnerability stats or search result stats\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "CVE is the single CVE ID to return vulnerability data for.\n",
            "in": "query",
            "name": "cve",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "SeverityThreshold is the minimum severity indicating that all retrieved CVEs severities are greater than or equal to the threshold.\n",
            "in": "query",
            "name": "severityThreshold",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "CvssThreshold is the minimum Cvss score indicating that all retrieved CVEs Cvss scores are greater than or equal to the threshold.\n",
            "in": "query",
            "name": "cvssThreshold",
            "schema": {
              "format": "float",
              "type": "number"
            }
          },
          {
            "description": "ResourceType is the single resource type to return vulnerability data for.\n",
            "in": "query",
            "name": "resourceType",
            "schema": {
              "description": "ResourceType represents the resource type",
              "enum": [
                [
                  "container",
                  "image",
                  "host",
                  "istio",
                  "vm",
                  "function",
                  "codeRepo",
                  "registryImage"
                ]
              ],
              "type": "string"
            }
          },
          {
            "description": "Agentless indicates whether to retrieve vulnerabiluty data for agentless hosts.\n",
            "in": "query",
            "name": "agentless",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Stopped indicates whether to retrieve vulnerability data for hosts that were not running during agentless scan.\n",
            "in": "query",
            "name": "stopped",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_types.VulnerabilityStats"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Stats",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorVuln",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/stats/vulnerabilities/download": {
      "get": {
        "description": "DownloadVulnerabilityStats downloads the vulnerability stats data\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "CVE is the single CVE ID to return vulnerability data for.\n",
            "in": "query",
            "name": "cve",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "SeverityThreshold is the minimum severity indicating that all retrieved CVEs severities are greater than or equal to the threshold.\n",
            "in": "query",
            "name": "severityThreshold",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "CvssThreshold is the minimum Cvss score indicating that all retrieved CVEs Cvss scores are greater than or equal to the threshold.\n",
            "in": "query",
            "name": "cvssThreshold",
            "schema": {
              "format": "float",
              "type": "number"
            }
          },
          {
            "description": "ResourceType is the single resource type to return vulnerability data for.\n",
            "in": "query",
            "name": "resourceType",
            "schema": {
              "description": "ResourceType represents the resource type",
              "enum": [
                [
                  "container",
                  "image",
                  "host",
                  "istio",
                  "vm",
                  "function",
                  "codeRepo",
                  "registryImage"
                ]
              ],
              "type": "string"
            }
          },
          {
            "description": "Agentless indicates whether to retrieve vulnerabiluty data for agentless hosts.\n",
            "in": "query",
            "name": "agentless",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Stopped indicates whether to retrieve vulnerability data for hosts that were not running during agentless scan.\n",
            "in": "query",
            "name": "stopped",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Stats",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorVuln",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/stats/vulnerabilities/impacted-resources": {
      "get": {
        "description": "VulnerabilityImpactedResources returns the impacted resources of a given CVE\nTODO #37245 ensure filtering containers per image according to collections / account ID\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "CVE is used to as a pivot for the impacted resource search.\n",
            "in": "query",
            "name": "cve",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "SeverityThreshold is the minimum severity indicating that all retrieved CVEs severities are greater than or equal to the threshold.\n",
            "in": "query",
            "name": "severityThreshold",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "CvssThreshold is the minimum Cvss score indicating that all retrieved CVEs Cvss scores are greater than or equal to the threshold.\n",
            "in": "query",
            "name": "cvssThreshold",
            "schema": {
              "format": "float",
              "type": "number"
            }
          },
          {
            "description": "ResourceType is the single resource type to return vulnerability data for.\n",
            "in": "query",
            "name": "resourceType",
            "schema": {
              "description": "ResourceType represents the resource type",
              "enum": [
                [
                  "container",
                  "image",
                  "host",
                  "istio",
                  "vm",
                  "function",
                  "codeRepo",
                  "registryImage"
                ]
              ],
              "type": "string"
            }
          },
          {
            "description": "Agentless indicates whether to retrieve vulnerabiluty data for agentless hosts.\n",
            "in": "query",
            "name": "agentless",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Stopped indicates whether to retrieve vulnerability data for hosts that were not running during agentless scan.\n",
            "in": "query",
            "name": "stopped",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/types.VulnImpactedResources"
                }
              }
            },
            "description": "VulnImpactedResources holds details about the resources impacted by vulnerability"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Stats",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorVuln",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/stats/vulnerabilities/impacted-resources/download": {
      "get": {
        "description": "DownloadVulnerabilityImpactedResources downloads the vulnerability impacted resources data\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "CVE is used to as a pivot for the impacted resource search.\n",
            "in": "query",
            "name": "cve",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "SeverityThreshold is the minimum severity indicating that all retrieved CVEs severities are greater than or equal to the threshold.\n",
            "in": "query",
            "name": "severityThreshold",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "CvssThreshold is the minimum Cvss score indicating that all retrieved CVEs Cvss scores are greater than or equal to the threshold.\n",
            "in": "query",
            "name": "cvssThreshold",
            "schema": {
              "format": "float",
              "type": "number"
            }
          },
          {
            "description": "ResourceType is the single resource type to return vulnerability data for.\n",
            "in": "query",
            "name": "resourceType",
            "schema": {
              "description": "ResourceType represents the resource type",
              "enum": [
                [
                  "container",
                  "image",
                  "host",
                  "istio",
                  "vm",
                  "function",
                  "codeRepo",
                  "registryImage"
                ]
              ],
              "type": "string"
            }
          },
          {
            "description": "Agentless indicates whether to retrieve vulnerabiluty data for agentless hosts.\n",
            "in": "query",
            "name": "agentless",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Stopped indicates whether to retrieve vulnerability data for hosts that were not running during agentless scan.\n",
            "in": "query",
            "name": "stopped",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Stats",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorVuln",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/stats/vulnerabilities/refresh": {
      "post": {
        "description": "RefreshVulnerabilityStats collects vulnerability stats and returns the collected stats\n",
        "parameters": [
          {
            "description": "Offset from the start of the list from which to retrieve documents.\n",
            "in": "query",
            "name": "offset",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Number of documents to return.\n",
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "Search term.\n",
            "in": "query",
            "name": "search",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Key on which to sort.\n",
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Sort order.\n",
            "in": "query",
            "name": "reverse",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Scopes the query by collection.\n",
            "in": "query",
            "name": "collections",
            "schema": {
              "description": "Scopes the query by collection.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "Scopes the query by account ID.\n",
            "in": "query",
            "name": "accountIDs",
            "schema": {
              "description": "Scopes the query by account ID.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          },
          {
            "description": "List of fields to retrieve.\n",
            "in": "query",
            "name": "fields",
            "schema": {
              "description": "List of fields to retrieve.\n",
              "items": {
                "$ref": "#/components/schemas/string"
              },
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_types.VulnerabilityStats"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Stats",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorVuln",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/statuses/registry": {
      "get": {
        "description": "RegistryScanStatus returns the registry scan status\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/defender.ScanStatus"
                }
              }
            },
            "description": "ScanStatus represents the status of current scan"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Statuses",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorImages",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/tags": {
      "get": {
        "description": "Tags returns all the tags\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/-_shared.Tag"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Tags",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "collections",
          "saas": true,
          "self-hosted": true
        }
      },
      "post": {
        "description": "AddTag adds a new tag\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/shared.Tag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Tags",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "collections",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/tags/{id}": {
      "delete": {
        "description": "DeleteTag deletes a tag by its name\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Tags",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "collections",
          "saas": true,
          "self-hosted": true
        }
      },
      "put": {
        "description": "UpdateTag updates a tag\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/shared.Tag"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Tags",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "collections",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/tags/{id}/vuln": {
      "delete": {
        "description": "DeleteTagVulnMetadata deletes the tag vulnerability metadata\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Tags",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "collections",
          "saas": true,
          "self-hosted": true
        }
      },
      "post": {
        "description": "UpdateTagVulnMetadata update the tag vulnerability metadata\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/shared.TagVulnMetadata"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Tags",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "collections",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/users": {
      "get": {
        "description": "Users returns all users, if request was sent from secondary project - only project's users are returned\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.UserList"
                }
              }
            },
            "description": "UserList represents a list of users"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Users",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "auth",
          "saas": true,
          "self-hosted": true
        }
      },
      "post": {
        "description": "CreateUser creates a new user\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api.User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Users",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "auth",
          "saas": false,
          "self-hosted": true
        }
      },
      "put": {
        "description": "UpdateUser updates an existing user\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api.User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Users",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "auth",
          "saas": false,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/users/password": {
      "put": {
        "description": "ReplaceUserPassword replaces the user password\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/types.UserPassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Users",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "user",
          "saas": false,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/users/{id}": {
      "delete": {
        "description": "DeleteUser deletes the given user\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Users",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "auth",
          "saas": false,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/util/arm64/twistcli": {
      "get": {
        "description": "Download twistcli-linux.zip",
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Util",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "downloads",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/util/dbip-country-lite.mmdb": {
      "get": {
        "description": "Download dbip-country-lite.mmdb",
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Util",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "sandbox",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/util/osx/twistcli": {
      "get": {
        "description": "Download twistcli-darwin.zip",
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Util",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "downloads",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/util/twistcli": {
      "get": {
        "description": "Download twistcli-linux.zip",
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Util",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "downloads",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/util/windows/twistcli.exe": {
      "get": {
        "description": "Download twistcli-windows.exe.zip",
        "responses": {
          "200": {
            "description": "OK"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Util",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "downloads",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/version": {
      "get": {
        "description": "Version returns the Console version\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/string"
                }
              }
            },
            "description": ""
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Version",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "user",
          "saas": true,
          "self-hosted": true
        }
      }
    },
    "/api/v22.06/waas/openapi-scans": {
      "post": {
        "description": "ScanOpenAPISpec scans a WAAS OpenAPI spec file and returns a scan report\nRequest body is of type multipart/form-data, containing two parts:\n1. Spec Info: file name, file content type, body (file content)\n2. Scan Info: Scan trigger source, rule ID, app ID (app and rule ID are required only if source is 'app')\n",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/waas.OpenAPIScan"
                }
              }
            },
            "description": "OpenAPIScan represents the OpenAPI file scan"
          },
          "default": {
            "description": ""
          }
        },
        "tags": [
          "Waas",
          "Supported API"
        ],
        "x-prisma-cloud-target-env": {
          "permission": "monitorWAAS",
          "saas": true,
          "self-hosted": true
        }
      }
    }
  },
  "tags": [
    {
      "description": "This API is an officially supported route",
      "externalDocs": {
        "url": "https://cdn.twistlock.com/docs/api/twistlock_api.html"
      },
      "name": "Supported API"
    },
    {
      "name": "Audits"
    },
    {
      "name": "Policies"
    },
    {
      "name": "Version"
    },
    {
      "name": "_ping"
    },
    {
      "name": "Serverless"
    },
    {
      "name": "Tas-Droplets"
    },
    {
      "name": "Hosts"
    },
    {
      "name": "Runtime"
    },
    {
      "name": "Settings"
    },
    {
      "name": "Stats"
    },
    {
      "name": "Profiles"
    },
    {
      "name": "Projects"
    },
    {
      "name": "Alert-Profiles"
    },
    {
      "name": "Xsoar-Alerts"
    },
    {
      "name": "Scripts"
    },
    {
      "name": "Defenders"
    },
    {
      "name": "Deployment"
    },
    {
      "name": "Config"
    },
    {
      "name": "Backups"
    },
    {
      "name": "Images"
    },
    {
      "name": "Util"
    },
    {
      "name": "Certs"
    },
    {
      "name": "Authenticate"
    },
    {
      "name": "Logout"
    },
    {
      "name": "Groups"
    },
    {
      "name": "Containers"
    },
    {
      "name": "Registry"
    },
    {
      "name": "Vms"
    },
    {
      "name": "Agentless"
    },
    {
      "name": "Coderepos"
    },
    {
      "name": "Coderepos-Ci"
    },
    {
      "name": "Cves"
    },
    {
      "name": "Feeds"
    },
    {
      "name": "Custom-Compliance"
    },
    {
      "name": "Static"
    },
    {
      "name": "Users"
    },
    {
      "name": "Scans"
    },
    {
      "name": "Sandbox"
    },
    {
      "name": "Waas"
    },
    {
      "name": "Logs"
    },
    {
      "name": "Statuses"
    },
    {
      "name": "Radar"
    },
    {
      "name": "Trust"
    },
    {
      "name": "Collections"
    },
    {
      "name": "Current"
    },
    {
      "name": "Rbac"
    },
    {
      "name": "Signup"
    },
    {
      "name": "Authenticate-Client"
    },
    {
      "name": "Forensic"
    },
    {
      "name": "Cloud"
    },
    {
      "name": "Credentials"
    },
    {
      "name": "Prisma-Cloud-Credentials"
    },
    {
      "name": "Custom-Rules"
    },
    {
      "name": "Kubernetes"
    },
    {
      "name": "Tags"
    },
    {
      "name": "Security-Advisor"
    },
    {
      "name": "Harbor"
    },
    {
      "name": "Clustered-Db"
    }
  ]
}