
<svg id="oidc-app" xmlns="http://www.w3.org/2000/svg" width="750" height="555" viewBox="110 0 200 335">
  <style>
    @import url('https://fonts.googleapis.com/css?family=Noto+Sans|Noto+Sans:700&amp;display=swap');
    @import url('https://fonts.googleapis.com/css?family=Open+Sans|Open+Sans:700');
    .st1 {
    fill: none;
    stroke: #231f20;
    stroke-width: 1.544;
    stroke-linecap: round;
    stroke-linejoin: round;
    stroke-miterlimit: 10
    }

    .st2 {
    fill-rule: evenodd;
    clip-rule: evenodd;
    fill: #231f20
    }

    .st3 {
    fill: none;
    stroke: #231f20;
    stroke-width: 1.2381;
    stroke-linecap: round;
    stroke-linejoin: round;
    stroke-miterlimit: 10;
    stroke-dasharray: 1.2381, 2.4762
    }

    .st4 {
    fill: #0062FF
    }

    .st5,
    .st7 {
    fill: none;
    stroke: #231f20;
    stroke-width: .6465;
    stroke-linecap: round;
    stroke-linejoin: round;
    stroke-miterlimit: 10
    }

    .st7 {
    stroke-width: 1.5435
    }

    .st14 {
    font-family: &apos;Noto Sans&apos;, &apos;Open Sans&apos;, sans-serif;
    font-weight:700;
    }

    .st15 {
    font-size: 8px
    }

    .st16 {
    fill: #F49342
    }

    .st16:hover {
      cursor:pointer;
      fill:#D12765;
    }

    #tooltip {
      dy: .7em;
      font-size: 7px;
      font-family: &apos;Noto Sans&apos;, &apos;Open Sans&apos;, sans-serif;
    }

    .st17 {
    font-family: &apos;Noto Sans&apos;, &apos;Open Sans&apos;, sans-serif;
    }

  </style>
    <g>
      <path d="M.5.9H68v43.4H.5V.9zm117.6 0h67.5v43.4h-67.5V.9zM354 .5h67.5v43.4H354V.5zM237.6.9h67.5v43.4h-67.5V.9z" fill="#00BAB6" stroke="#231f20" stroke-miterlimit="10"/>
      <path class="st1" d="M34.7 148.6h106.2"/>
      <path class="st2" d="M140 145l7.1 3.6-7.1 3.5V145"/>
      <path class="st1" d="M33.1 69.2h229.6"/>
      <path class="st2" d="M260.2 65.7l7.1 3.6-7.1 3.5v-7.1"/>
      <path class="st3" d="M34.3 44.7v293.9"/>
      <path class="st4" d="M31.7 56.5h5.2v270h-5.2v-270z"/>
      <path class="st5" d="M31.7 56.5h5.2v270h-5.2v-270z"/>
      <path class="st3" d="M152 44.7v293.9M387.8 44.7v293.9"/>
      <path class="st1" d="M268.7 206.2H162.5"/>
      <path class="st2" d="M162.2 209.9l-7.1-3.7 7.1-3.4v7.1"/>
      <path class="st1" d="M386.9 319H45.7"/>
      <path class="st2" d="M45.4 322.6l-7.1-3.6 7.1-3.5v7.1"/>
      <path class="st4" d="M385.2 292.3h5.2v33h-5.2v-33z"/>
      <path d="M385.2 292.3h5.2v33h-5.2v-33z" fill="none" stroke="#231f20" stroke-width=".399" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10"/>
      <path class="st3" d="M271.3 44.3v294.3"/>
      <path class="st7" d="M273.9 69.4H285m.4 18.8h-7.9"/>
      <path class="st2" d="M281.8 84.6l-7.1 3.6 7.1 3.6v-7.2"/>
      <path class="st7" d="M283.8 69.4c2.9-.1 5.2.3 6.5.7 1.7.5 2.6 1 3 1.3.3.2 1.7 1.1 2.8 2.9.5.9 1.9 3.1 1.5 5.9-.3 2.3-1.6 3.8-2.1 4.3-2.1 2.4-4.9 2.9-6.9 3.3-1.6.3-2.9.4-3.8.3"/>
      <path class="st1" d="M151.9 128.7H45.7"/>
      <path class="st2" d="M45.4 132.2l-7.1-3.5 7.1-3.6v7.1"/>
      <path class="st1" d="M153.7 224.4h106.2"/>
      <path class="st2" d="M260.2 220.8l7.1 3.6-7.1 3.5v-7.1"/>
      <path class="st1" d="M270.5 302.9h106.2"/>
      <path class="st2" d="M377 299.3l7.1 3.6-7.1 3.5v-7.1"/>
      <path class="st1" d="M53.6 88.5h218.2"/>
      <path class="st7" d="M142 107.4H53"/>
      <path class="st2" d="M140 103.9v7.1l7.1-3.5-7.1-3.6"/>
      <path class="st7" d="M52.7 107.4c-.9 0-2.3 0-3.8-.3-2-.4-4.8-1-6.9-3.3-.5-.5-1.8-2-2.1-4.3-.4-2.9.9-5.1 1.5-5.9 1.1-1.8 2.5-2.7 2.8-2.9.4-.3 1.2-.8 3-1.3 1.4-.4 3.6-.9 6.5-.7"/>
      <path class="st1" d="M53.6 167.7h98.3"/>
      <path class="st7" d="M262.1 186.6H52"/>
      <path class="st2" d="M260.2 183.1v7.1l7.1-3.5-7.1-3.6"/>
      <path class="st7" d="M52.7 186.6c-.9 0-2.3 0-3.8-.3-2-.4-4.8-1-6.9-3.3-.5-.5-1.8-2-2.1-4.3-.4-2.9.9-5.1 1.5-5.9 1.1-1.8 2.5-2.7 2.8-2.9.4-.3 1.2-.8 3-1.3 1.4-.4 3.6-.9 6.5-.7"/>
      <path class="st1" d="M53.6 243.3H271"/>
      <path class="st7" d="M262.3 262.2H52.9"/>
      <path class="st2" d="M260.2 258.7v7.1l7.1-3.5-7.1-3.6"/>
      <path class="st7" d="M52.7 262.2c-.9 0-2.3 0-3.8-.3-2-.4-4.8-1-6.9-3.3-.5-.5-1.8-2-2.1-4.3-.4-2.9.9-5.1 1.5-5.9 1.1-1.8 2.5-2.7 2.8-2.9.4-.3 1.2-.8 3-1.3 1.4-.4 3.6-.9 6.5-.7m220 18.3h11.1m.4 18.9h-7.9"/>
      <path class="st2" d="M281.6 277.1l-7.1 3.6 7.1 3.5v-7.1"/>
      <path class="st7" d="M283.6 261.8c2.9-.1 5.2.3 6.5.7 1.7.5 2.6 1 3 1.3.3.2 1.7 1.1 2.8 2.9.5.9 1.9 3.1 1.5 5.9-.3 2.3-1.6 3.8-2.1 4.3-2.1 2.4-4.9 2.9-6.9 3.3-1.6.3-2.9.4-3.8.3M154.3 148.1h11.1m.4 18.9h-7.9"/>
      <path class="st2" d="M162.2 163.4l-7.1 3.6 7.1 3.5v-7.1"/>
      <path class="st7" d="M164.3 148.1c2.9-.1 5.2.3 6.5.7 1.7.5 2.6 1 3 1.3.3.2 1.7 1.1 2.8 2.9.5.9 1.9 3.1 1.5 5.9-.3 2.3-1.6 3.8-2.1 4.3-2.1 2.4-4.9 2.9-6.9 3.3-1.6.3-2.9.4-3.8.3"/>
      <path class="st4" d="M149.4 103.6h4.8V229h-4.8V103.6z"/>
      <path class="st5" d="M149.4 103.6h4.8V229h-4.8V103.6z"/>
      <path class="st4" d="M268.9 55.7h4.9V310h-4.9V55.7z"/>
      <path d="M268.9 55.7h4.9V310h-4.9V55.7z" fill="none" stroke="#231f20" stroke-width=".483" stroke-linecap="round" stroke-linejoin="round" stroke-miterlimit="10"/>
      <text transform="translate(136.744 15.16)">
        <tspan x="0" y="0" class="st14 st15">Identity</tspan><tspan x="-1.1" y="9.6" class="st14 st15">provider</tspan><tspan x="6.2" y="19.2" class="st14 st15">(IdP)</tspan>
      </text>
      <text transform="translate(255.77 18.382)">
        <tspan x="0" y="0" class="st14 st15">Aporeto</tspan><tspan x="-.6" y="9.6" class="st14 st15">enforcer</tspan>
      </text>
      <text transform="translate(366.099 23.05)" class="st14 st15">
        Application
      </text>
      <text transform="translate(19.024 24.967)" class="st14 st15">
        Browser
      </text>
      <circle class="st16" cx="47.8" cy="69.2" r="6" data-tooltip-text="The target URL may include parameters (optional)." data-width="40" x="-70" y="20"/>
      <text transform="translate(46.093 71.8)" class="st14 st15" pointer-events="none">
        1
      </text>
      <circle class="st16" cx="331.8" cy="74.8" r="6" data-tooltip-text="The Aporeto enforcer does not find an ID token, or finds an expired ID token." data-width="80" x="6" y="20"/>
      <text transform="translate(329.616 77.36)" class="st14 st15" pointer-events="none">
        2
      </text>
      <circle class="st16" cx="168.9" cy="88.5" r="6" data-tooltip-text="The enforcer responds with HTTP 307, redirecting the browser to the identity provider. The enforcer includes a callback URL in the redirect, so that the identity provider can send the browser back to the enforcer after authenticating the user." data-width="220" x="6" y="10"/>
      <text transform="translate(166.76 91.8)" class="st14 st15" pointer-events="none">
        3
      </text>
      <circle class="st16" cx="132.8" cy="129.8" r="6" data-tooltip-text="The user authenticates to the identity provider. The exact sequence depends on the identity provider, but it often includes consent to the requested scopes." data-width="250" x="20" y="-30"/>
      <text transform="translate(130.405 132.2)" class="st14 st15" pointer-events="none">
        4
      </text>
      <circle class="st16" cx="47.8" cy="167" r="6" data-tooltip-text="The identity provider checks the callback URL provided in the initial HTTP 307 redirect against its list of allowed callback URLs. If the identity provider finds an exact match, it redirects the browser to the enforcer and includes an authorization code." data-width="80" x="-80" y="30"/>
      <text transform="translate(45.612 169.56)" class="st14 st15" pointer-events="none">
        5
      </text>
      <ellipse transform="rotate(-80.781 254.204 207.296)" class="st16" cx="254.2" cy="207.3" rx="6" ry="6" data-tooltip-text="The enforcer exchanges the authorization code for a shortlived ID token containing the requested claims." data-width="125" x="22" y="-90"/>
      <text transform="translate(252.008 209.86)" class="st14 st15" pointer-events="none">
        6
      </text>
      <circle class="st16" cx="203.1" cy="252.8" r="6" data-tooltip-text="The enforcer redirects the browser to the original target URL, setting the ID token in a session cookie." data-width="200" x="-310" y="20"/>
      <text transform="translate(201.076 255.36)" class="st14 st15" pointer-events="none">
        7
      </text>
      <circle class="st16" cx="302.3" cy="257.4" r="6" data-tooltip-text="The enforcer confirms that policy allows the user to access the resource." data-width="60" x="6" y="-120"/>
      <text transform="translate(299.996 259.98)" class="st14 st15" pointer-events="none">
        8
      </text>
      <circle class="st16" cx="287.2" cy="300.3" r="6" data-tooltip-text="The enforcer forwards the request to the target application using the original target URL, including any parameters. It can also pass claims to the target application in the HTTP header (optional)." data-width="390" x="-450" y="5"/>
      <text transform="translate(285.008 302.86)" class="st14 st15" pointer-events="none">
        9
      </text>
      <text transform="translate(50.889 123.8)" class="st17 st15">
        request credentials
      </text>
      <text transform="translate(56.178 144)" class="st17 st15">
        send credentials
      </text>
      <text transform="translate(182.609 159.461)" class="st17 st15">
        authenticate
      </text>
      <text transform="translate(177.305 218.923)" class="st17 st15">
        send ID token
      </text>
      <text transform="translate(63.45 64.2)">
        <tspan x="0" y="0" class="st17 st15">request </tspan><tspan x="30.8" y="0" class="st14 st15">target URL</tspan>
      </text>
      <text transform="translate(301.96 75.761)">
        <tspan x="0" y="0" class="st17 st15">no ID</tspan><tspan x="0" y="9.6" class="st17 st15">token</tspan>
      </text>
      <text transform="translate(58.463 101.236)">
        <tspan x="0" y="0" class="st17 st15">redirect to </tspan><tspan x="40.9" y="0" class="st14 st15">IdP URL</tspan>
      </text>
      <text transform="translate(54.521 180.699)">
        <tspan x="0" y="0" class="st17 st15">redirect to </tspan><tspan x="40.9" y="0" class="st14 st15">callback URL</tspan>
      </text>
      <text transform="translate(173.099 200.8)" class="st17 st15">
        request ID token
      </text>
      <text transform="translate(49.087 255.964)">
        <tspan x="0" y="0" class="st17 st15">redirect to </tspan><tspan x="40.9" y="0" class="st14 st15" >target URL</tspan><tspan x="83.5" y="0" class="st17 st15"> and &#160; set cookie</tspan>
      </text>
      <text transform="translate(302.018 272.918)" class="st17 st15">
        authorize
      </text>
      <text transform="translate(304.1 298.3)" class="st17 st15">
        forward request
      </text>
      <text transform="translate(77.607 314.255)" class="st17 st15">
        respond
      </text>
    </g>
    <g id="tooltip" visibility="hidden" transform="translate(87.9511512134412 127.90914747977598)">
      <rect x="2" y="2" width="52.90066909790039" height="24" fill="#B9BFC7" opacity="0.4" rx="2" ry="2"></rect>
      <rect width="52.90066909790039" height="24" fill="#FEE389" rx="2" ry="2"></rect>
      <text x="4" y="6" id="text">A box</text>
    </g>
  <script type="text/javascript">
        <![CDATA[

  (function () {
  var svg = document.getElementById("oidc-app");
  var tooltip = svg.getElementById("tooltip");
  console.log(tooltip);
  var tooltipRects = tooltip.getElementsByTagName("rect");
  console.log(tooltipRects);
  var triggers = svg.getElementsByClassName("st16");
  console.log(triggers);
  var tooltipText = tooltip.getElementsByTagName("text")[0];
  console.log(tooltipText);

  // Add listeners
  for (var i = 0; i < triggers.length; i++) {
    triggers[i].addEventListener("mouseover", showTooltip);
    triggers[i].addEventListener("mouseout", hideTooltip);
  }

  function showTooltip(evt) {

    console.log(tooltipText);
    var CTM = svg.getScreenCTM();
    var horizontal = parseFloat(evt.target.getAttributeNS(null, "x"));
    console.log(horizontal);
    var x = (evt.clientX - CTM.e + horizontal) / CTM.a;
    console.log(x);
    var tspanX = tooltipText.getAttributeNS(null, 'x');
    console.log(tspanX);
    var vertical = parseFloat(evt.target.getAttributeNS(null, "y"));
    console.log(vertical);
    var y = (evt.clientY - CTM.f + vertical) / CTM.d;
    console.log(y);
    tooltip.setAttributeNS(null, "transform", "translate(" + x + " " + y + ")");
    tooltip.setAttributeNS(null, "visibility", "visible");
    console.log(tooltip);

    // Sets variable containing data-width as float
    var width = parseFloat(evt.target.getAttributeNS(null, "data-width"));
    console.log(width);

    console.log(tooltipText);
    // Replaces text Element string with string from st16
    tooltipText.firstChild.data = evt.target.getAttributeNS(null, "data-tooltip-text");
    console.log(tooltipText.firstChild.data);

    // Convert string to array of words
    var words = tooltipText.firstChild.data.split(' ');
    console.log(words);

    // Clear original text
    tooltipText.firstChild.data = "";
    console.log(tooltipText.firstChild.data);

    // Create empty tspan element
    var tspanElement = document.createElementNS("http://www.w3.org/2000/svg", "tspan");
    tspanElement.setAttributeNS(null, "id", "tspan");
    tspanElement.setAttributeNS(null, "dy", ".7em");
    console.log(tspanElement);

    // Create text node containing a word
    var textNode = document.createTextNode(words[0]);
    console.log(textNode);

    // Add tspan element to DOM
    tspanElement.appendChild(textNode);
    console.log(tspanElement);

    // Add text to tspan element
    tooltipText.appendChild(tspanElement);
    console.log(tooltipText);

    for (var i = 1; i < words.length; i++) {
      var len = textNode.data.length;
      console.log(len);

      // Add next word
      tspanElement.firstChild.data += " " + words[i];
      console.log(tspanElement);

      console.log(tspanElement.getComputedTextLength());
      if (tspanElement.getComputedTextLength() > width) {
        // Remove added word
        tspanElement.firstChild.data = tspanElement.firstChild.data.slice(0, len);

        // Create new tspan element
        tspanElement = document.createElementNS("http://www.w3.org/2000/svg", "tspan");
        tspanElement.setAttributeNS(null, "x", tspanX);
        tspanElement.setAttributeNS(null, "dy", 10);
        tspanElement.setAttributeNS(null, "id", "tspan");
        console.log(tspanElement);
        textNode = document.createTextNode(words[i]);
        tspanElement.appendChild(textNode);
        tooltipText.appendChild(tspanElement);
      }
    }

    var bbox = tooltipText.getBBox();
    var textWidth = bbox.width;
    console.log(textWidth);
    for (var i = 0; i < tooltipRects.length; i++) {
      tooltipRects[i].setAttributeNS(null, "width", textWidth + 8);
    }

    var textHeight = bbox.height;
    for (var i = 0; i < tooltipRects.length; i++) {
      tooltipRects[i].setAttributeNS(null, "height", textHeight + 10);
    }

  }

  function hideTooltip(evt) {
    console.log('Mouse out');
    tooltip.setAttributeNS(null, "visibility", "hidden");
    console.log(tooltip);
    var text = svg.getElementById('text');
    console.log(text);
    while(text.firstChild) {
      text.removeChild(text.firstChild);
    }
    var str = "A box";
    text.innerHTML = str;
    console.log(text);
  }

  })()



        ]]>
  </script>
</svg>

